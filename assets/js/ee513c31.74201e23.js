"use strict";(self.webpackChunkcodec_wiki=self.webpackChunkcodec_wiki||[]).push([[2750],{6037:(i,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>a});var o=t(5893),n=t(1151);const l={label:"dovi_tool",sidebar_position:9},s="dovi_tool",r={id:"utilities/dovi_tool",title:"dovi_tool",description:"dovi_tool is a command line tool written in Rust combining multiple utilities for working with Dolby Vision.",source:"@site/docs/utilities/dovi_tool.mdx",sourceDirName:"utilities",slug:"/utilities/dovi_tool",permalink:"/docs/utilities/dovi_tool",draft:!1,unlisted:!1,editUrl:"https://github.com/av1-community-contributors/codec-wiki/tree/main/docs/utilities/dovi_tool.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{label:"dovi_tool",sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"FFMetrics",permalink:"/docs/utilities/FFMetrics"},next:{title:"eac3to",permalink:"/docs/utilities/eac3to"}},c={},a=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}];function d(i){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.a)(),...i.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"dovi_tool",children:"dovi_tool"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"dovi_tool"})," is a command line tool written in Rust combining multiple utilities for working with Dolby Vision."]}),"\n",(0,o.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Download pre-built binaries from ",(0,o.jsx)(e.a,{href:"https://github.com/quietvoid/dovi_tool/releases",children:"here"})]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"or"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Compile yourself (Rust must be installed, minimum v1.64.0 at the time of writing)"}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'git clone https://github.com/quietvoid/dovi_tool.git\r\ncd dovi_tool\r\nRUSTFLAGS="-C target-cpu=native" cargo build --release\n'})}),"\n",(0,o.jsx)(e.p,{children:"on Windows:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/quietvoid/dovi_tool.git\r\ncd dovi_tool\r\nset RUSTFLAGS=-C target-cpu=native \r\ncargo build --release\n"})}),"\n",(0,o.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"dovi_tool [OPTIONS] <SUBCOMMAND>\n"})}),"\n",(0,o.jsx)(e.p,{children:"To get more detailed options for a subcommand"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"dovi_tool <SUBCOMMAND> --help\n"})})]})}function u(i={}){const{wrapper:e}={...(0,n.a)(),...i.components};return e?(0,o.jsx)(e,{...i,children:(0,o.jsx)(d,{...i})}):d(i)}},1151:(i,e,t)=>{t.d(e,{Z:()=>r,a:()=>s});var o=t(7294);const n={},l=o.createContext(n);function s(i){const e=o.useContext(l);return o.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function r(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(n):i.components||n:s(i.components),o.createElement(l.Provider,{value:e},i.children)}}}]);