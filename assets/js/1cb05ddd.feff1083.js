"use strict";(self.webpackChunkav1_wiki=self.webpackChunkav1_wiki||[]).push([[3899],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(r),m=a,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(h,l(l({ref:t},p),{},{components:r})):n.createElement(h,l({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7396:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={label:"hdr10plus_tool",sidebar_position:7},l="hdr10plus_tool",i={unversionedId:"utilities/hdr10plus_tool",id:"utilities/hdr10plus_tool",title:"hdr10plus_tool",description:"hdr10plus_tool is a command line tool written in Rust for working with HDR10+ in HEVC files. Previously named `hdr10plus_parser`, now it's more than just a parser.",source:"@site/docs/utilities/hdr10plus_tool.md",sourceDirName:"utilities",slug:"/utilities/hdr10plus_tool",permalink:"/av1-wiki.github.io/docs/utilities/hdr10plus_tool",draft:!1,editUrl:"https://github.com/av1-community-contributors/av1-wiki.github.io/tree/main/docs/utilities/hdr10plus_tool.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{label:"hdr10plus_tool",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"dovi_tool",permalink:"/av1-wiki.github.io/docs/utilities/dovi_tool"},next:{title:"eac3to",permalink:"/av1-wiki.github.io/docs/utilities/eac3to"}},s={},u=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Extracting",id:"extracting",level:3},{value:"Injecting",id:"injecting",level:3},{value:"Remove HDR10+ Metadata",id:"remove-hdr10-metadata",level:3}],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hdr10plus_tool"},"hdr10plus_tool"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"hdr10plus_tool")," is a command line tool written in Rust for working with HDR10+ in HEVC files. Previously named ",(0,a.kt)("inlineCode",{parentName:"p"},"hdr10plus_parser"),", now it's more than just a parser."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Download pre-built binaries from ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/quietvoid/hdr10plus_tool/releases"},"here"))),(0,a.kt)("p",null,"or"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Compile yourself (Rust must be installed, minimum v1.57.0 at the time of writing)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'git clone https://github.com/quietvoid/hdr10plus_tool.git\ncd hdr10plus_tool\nRUSTFLAGS="-C target-cpu=native" cargo build --release\n')),(0,a.kt)("p",null,"on Windows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/quietvoid/hdr10plus_tool.git\ncd hdr10plus_tool\nset RUSTFLAGS=-C target-cpu=native \ncargo build --release\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"hdr10plus_tool [OPTIONS] <SUBCOMMAND>\n")),(0,a.kt)("p",null,"To get more detailed options for a subcommand"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"hdr10plus_tool <SUBCOMMAND> --help\n")),(0,a.kt)("h3",{id:"extracting"},"Extracting"),(0,a.kt)("p",null,"Extract from raw bitstream"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"hdr10plus_tool extract video.hevc -o metadata.json\n")),(0,a.kt)("p",null,"Extract using FFmpeg pipe (Recommended)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ffmpeg -hide_banner -strict -2 -i input.mkv -map 0:v:0 -c copy -vbsf hevc_mp4toannexb -f hevc - | hdr10plus_tool extract -o metadata.json -\n")),(0,a.kt)("h3",{id:"injecting"},"Injecting"),(0,a.kt)("p",null,"Inject to raw bitstream"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"hdr10plus_tool inject -i video.hevc -j metadata.json -o injected_output.hevc\n")),(0,a.kt)("h3",{id:"remove-hdr10-metadata"},"Remove HDR10+ Metadata"),(0,a.kt)("p",null,"Remove from raw bitstream"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"hdr10plus_tool remove video.hevc -o hdr10plus_removed_output.hevc\n")),(0,a.kt)("p",null,"Remove using FFmpeg pipe (Recommended)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ffmpeg -hide_banner -strict -2 -i input.mkv -map 0:v:0 -c copy -vbsf hevc_mp4toannexb -f hevc - | hdr10plus_tool remove -\n")))}d.isMDXComponent=!0}}]);