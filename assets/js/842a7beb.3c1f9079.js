"use strict";(self.webpackChunkcodec_wiki=self.webpackChunkcodec_wiki||[]).push([[6866],{7216:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var n=i(4848),o=i(8453);const r={title:"rAV1ator",sidebar_position:5},s="rAV1ator",a={id:"utilities/rAV1ator",title:"rAV1ator",description:"The content in this entry is incomplete & is in the process of being completed.",source:"@site/docs/utilities/rAV1ator.mdx",sourceDirName:"utilities",slug:"/utilities/rAV1ator",permalink:"/docs/utilities/rAV1ator",draft:!1,unlisted:!1,editUrl:"https://github.com/av1-community-contributors/codec-wiki/tree/main/docs/utilities/rAV1ator.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"rAV1ator",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"MKVToolNix",permalink:"/docs/utilities/MKVToolNix"},next:{title:"rav1ator-cli",permalink:"/docs/utilities/rav1ator-cli"}},c={},d=[];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"rav1ator",children:"rAV1ator"})}),"\n",(0,n.jsx)(t.admonition,{title:"Under Maintenance",type:"info",children:(0,n.jsx)(t.p,{children:"The content in this entry is incomplete & is in the process of being completed."})}),"\n",(0,n.jsxs)(t.p,{children:["rAV1ator is a fork of ",(0,n.jsx)(t.a,{href:"/docs/utilities/Aviator",children:"Aviator"})," designed to use ",(0,n.jsx)(t.a,{href:"/docs/utilities/av1an",children:"Av1an"})," & ",(0,n.jsx)(t.a,{href:"/docs/encoders/rav1e",children:"rav1e"})," instead of ",(0,n.jsx)(t.a,{href:"/docs/encoders/SVT-AV1",children:"SVT-AV1"}),". It is also distributed as a Flatpak with bundled dependencies outside of Flathub; running the following command will allow you to install it:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"flatpak --user remote-add --no-gpg-verify project-volo https://giannirosato.com/repo && flatpak --user install project-volo net.natesales.rAV1ator\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Initially, Aviator was supposed to switch to using the Av1an + rav1e backend that currently serves rAV1ator, but the decision was made to split the two projects due to their fundamentally different goals & Flathub's trouble with Rust dependencies. Aviator is designed to allow easy, painless AV1 encoding, while rAV1ator is designed to make accessing ",(0,n.jsx)(t.em,{children:"specifically"})," Av1an & rav1e easier for interested codec enthusiasts. rAV1ator is maintained by Gianni Rosato & Trix."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var n=i(6540);const o={},r=n.createContext(o);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);