"use strict";(self.webpackChunkcodec_wiki=self.webpackChunkcodec_wiki||[]).push([[8130],{7735:t=>{t.exports=JSON.parse("{\"archive\":{\"blogPosts\":[{\"id\":\"svt-av1-third-deep-dive\",\"metadata\":{\"permalink\":\"/blog/svt-av1-third-deep-dive\",\"source\":\"@site/blog/2024-11-14-svt-av1-deep-dive3-v2-2-x.mdx\",\"title\":\"Better late than never: SVT-AV1 v2.2.x Deep Dive\",\"description\":\"How does SVT-AV1 2.2.x stack up against the encoder previous version?\",\"date\":\"2024-11-14T00:00:00.000Z\",\"tags\":[{\"inline\":true,\"label\":\"video\",\"permalink\":\"/blog/tags/video\"},{\"inline\":true,\"label\":\"compression\",\"permalink\":\"/blog/tags/compression\"},{\"inline\":true,\"label\":\"benchmarks\",\"permalink\":\"/blog/tags/benchmarks\"}],\"readingTime\":77.835,\"hasTruncateMarker\":true,\"authors\":[{\"name\":\"Trix\",\"title\":\"Encoder\",\"url\":\"https://github.com/trixoniisama/\",\"image_url\":\"https://avatars.githubusercontent.com/u/93526043\",\"imageURL\":\"https://avatars.githubusercontent.com/u/93526043\",\"socials\":{},\"key\":null,\"page\":null}],\"frontMatter\":{\"title\":\"Better late than never: SVT-AV1 v2.2.x Deep Dive\",\"description\":\"How does SVT-AV1 2.2.x stack up against the encoder previous version?\",\"slug\":\"svt-av1-third-deep-dive\",\"authors\":[{\"name\":\"Trix\",\"title\":\"Encoder\",\"url\":\"https://github.com/trixoniisama/\",\"image_url\":\"https://avatars.githubusercontent.com/u/93526043\",\"imageURL\":\"https://avatars.githubusercontent.com/u/93526043\"}],\"tags\":[\"video\",\"compression\",\"benchmarks\"],\"image\":\"/img/svt-2.2.x-testing-blog-image.webp\",\"hide_table_of_contents\":false},\"unlisted\":false,\"nextItem\":{\"title\":\"Codec Wiki: One Year Later\",\"permalink\":\"/blog/codec-wiki-one-year-later\"}},\"content\":\"import { CarouselGenerator, TabbedCarouselGenerator } from '../src/utils/ImageCarousel.mdx';\\n\\n\\nSVT-AV1 v2.2.0 was released in late August and a minor version v2.2.1 followed suit to adress some bugs. This blog post will focus on comparing this new encoder version to the last, on the basis of benchmarks and visual comparisons. We will quantify the new trade-offs between compression efficiency and encoding speed, so you can choose the right balance for your projects. Our metrics of choice today will be SSIMULACRA2 and XPSNR, used in conjonction with a revised methodology.\\n\\n\x3c!--truncate--\x3e\\n\\n## Feedback\\n\\nThe biggest missed opportunity of the previous SVT-AV1 deep dives was the absence of visual comparisons. Indeed, metrics may be convenient for easily quantifying differences between encoder versions or encoding parameters, but they fail to give the information of how much these differences matter for your eyes. However, making properly useful visual comparisons isn't an easy task. Comparing two encodes of varying bitrates will bias the result against one or the other, which is not desirable. Figuring out the best way to present these comparisons and making the appropriate scripts took me weeks. Gathering all the necessary data, crafting the comparisons and proceeding to a double-checking pass took me another few weeks. These reasons explain why this blog post took so long to release, but I hope it will have been worth the wait! On that note though, I have been uploading thousands of png screenshots to *slow.pics* and I ended up rate-limited. This has prevented me from uploading the visual comparisons for preset 11, 12 and some of 10. I'm actively trying to fix this situation, so please understand. \\n\\nAnother reason for this taking so long was my decision to increase the amount of video samples while increasing the amount of CRF values tested. A grand total of 3682 encodes were done for this blog post alone, in the span of around two weeks, where my PC would be exclusively encoding 24/7. Send help.\\n\\nAlso, the graphs will now be using the harmonic mean instead of the arithmetic mean. Indeed, arithmetic mean scores fail to account for deviations and outliers. Using the harmonic mean implies low-scoring frames have more weight towards the final score, which adds a consistency component to the picture. That's not it though! Consistency is capital in an enjoyable watching experience. As such, each graph now possesses a SSIMULACRA2 (Harmonic) version, a XPSNR (Harmonic) version and a SSIMULACRA2 (Standard Deviation) version, in order to closely monitor variations in consistency between presets.\\n\\nLastly, the biggest complaint I have received is me exclusively using anime clips. The reason for that is pretty simple: I mostly encode anime content on my free time and am myself very little interested in other types of media. However, these blog posts have grown in exposure and I understand a majority of people is more concerned about the performance of encoders on live action content or gaming clips. Thus, this new blog post is comprised of 3 live action clips, 2 gaming clips and 2 anime clips! See the sacrifices I'm making for y'all?\\n\\n## Methodology\\n\\nThe resources provided will include both graphs and image comparisons. Graphs offer a straightforward, objective look at efficiency across encoder parameters, using metrics as benchmarks for performance. In contrast, image comparisons display actual samples from encoded files, allowing you to assess quality firsthand. This adds a subjective dimension to the comparisons, giving you a more nuanced understanding of each preset's impact on visual quality.\\n\\n\x3c!--truncate--\x3e\\n\\nThe testing methodology involves using relatively short video samples with a wide range of content types, uncompressed to the y4m file format for ease of use. These lossless files are *directly* fed to SvtAv1EncApp, implying the performance of a single encoder instance is what's being measured here. A more serious AV1 encoding pipeline should probably be leveraging a chunked encoding approach, especially on higher core count systems. Once an encode is done, SSIMULACRA2 scores are calculated using the [Zig implementation](https://github.com/dnjulek/vapoursynth-ssimulacra2), XPSNR scores on the other hand are calculated using a [ffmpeg filter](https://github.com/fraunhoferhhi/xpsnr), and the data is then aggregated into a final Harmonic or Standard Deviation score to create the graphs for this benchmark. The Constant Rate Factor (CRF) is plotted against encoding time, and the metrics scores against encode size (bitrate). The former may represent the efficiency as defined by the speed achieved at a certain quality target. For the latter, Bits Per Pixel scores (BPP) are calculated so that the `Metric / BPP` graphs may represent the compression efficiency, normalized by resolution.\\n\\nHow to read the graphs? For the compression efficiency ones, the closer to the top left the better. For the encoding speed ones, the closer to the left the faster. For the standard deviation ones, the closer to the bottom left the better.\\n\\nThe clips used in this test were acquired legally. The Codec Wiki and its contributors do not endorse media piracy.\\n\\nSvtAv1EncApp was compiled directly from the [v2.1.2 and v2.2.1 source code](https://gitlab.com/AOMediaCodec/SVT-AV1/-/releases/) using Clang 18.1.8 and the provided `Build/linux/build.sh` script with the following command: `build.sh cc=clang cxx=clang++ jobs=$(nproc) enable-lto static native release`. The testing machine is comprised of an i3 12100 in its stock configuration, with 2x8GB of 3200MHz CL14 DDR4 RAM, in Arch Linux with kernel 6.9.12 and the performance governor enabled. All encodes have been made in the same session without rebooting.\\n\\nI want to give a disclaimer concerning encoding speeds. Contrary to the efficiency results which should be reproducible independantly of the machine, measuring speed is a pretty difficult endeavor, with increased risks for errors. The performance numbers I mention may differ for you depending on the hardware configuration at hand.\\n\\nThis testing was conducted within the [AV1 Weeb Edition](https://discord.gg/83dRFDFDp7) Discord server, which is focused on encoding animated content in AV1.\\n\\n## Samples & Encoding Settings\\n\\nThe samples are as follows:\\n- 17s `Avatar The Way Of Water (trailer 3)` clip sourced from [thedigitaltheater.com](https://thedigitaltheater.com/category/movie-trailers/lossless-movie-trailers/) (1916x804p, 23.976fps).\\n- 6s `Ducks Take Off` clip sourced from [xiph.org](https://media.xiph.org/video/derf/) (1280x720p, 50fps).\\n- 3s `Fallout 4` clip sourced from another encoder fellow (1920x1080p, 60fps).\\n- 8s `Minecraft` clip sourced from [xiph.org](https://media.xiph.org/video/derf/) (1920x1080p, 60fps).\\n- 8s `Sol Levante` HDR clip sourced from [opencontent.netflix.com](http://download.opencontent.netflix.com/?prefix=SolLevante/) (3840x2160p, 24fps). This one is pretty educative as SVT-AV1's behavior isn't influenced by the existence (or lack thereof) of HDR metadata in a source.\\n- 21s `Suzume (trailer 2)` clip sourced from [thedigitaltheater.com](https://thedigitaltheater.com/category/movie-trailers/lossless-movie-trailers/) (1920x808p, 23.976fps).\\n- 13s `The Mandalorian (trailer 2)` clip sourced from [thedigitaltheater.com](https://thedigitaltheater.com/category/movie-trailers/lossless-movie-trailers/) (1920x800p, 23.976fps).\\n\\n> **All clips have been encoded in a wide quality range, from `--crf 10` to `--crf 50`, by increments of 2, with the exception of preset -1 that uses increments of 4.**\\n\\n`--preset X --hierarchical-levels 4` are the only parameter used here, in conjunction with the CRF values. I have been asked to use `--hierarchical-levels 4` by fellow SVT-AV1-PSY developers to force smaller mini GOPs, more appropriate for testing.\\n\\nElse, the SVT-AV1 defaults were used. The ones worth mentioning are:\\n- `--tune 1`: tune PSNR\\n- `--aq-mode 2`: variance deltaq\\n- `--enable-qm 0`: quantisation matrices disabled\\n- `--irefresh-type 2`: closed GOP\\n- `--enable-tf 1`: temporal filtering enabled\\nAnd more, like CDEF and restoration enabled, overlays and film-grain disabled...\\n\\n## Visual comparisons\\n\\n![comp_showcase](/img/comp_showcase.webp)\\n\\nThroughout this blog post, you\u2019ll find *slow.pics* links that provide various visual comparisons between presets.\\n\\n- The \u201cfull\u201d links offer comparisons across the entire quality range for each source.\\n- The HQ (High Quality), MQ (Medium Quality), and LQ (Low Quality) links showcase more targeted comparisons. These have been carefully handcrafted to be as size-normalized as possible, given the available encodes. We want to be focusing on encodes with minimal bitrate deviation for a fair comparison.\\n\\nFeel free to double-check the bitrate of each frame or scene to make a more informed observation, keeping the size difference in mind when comparing the encodes.\\n\\nUse the arrow keys and numpad to navigate between screenshots. Alternatively, you can click on \\\"Slider comparison\\\" and select two sources if you prefer comparing this way.\\n\\nWithout further ado, let's start with the first comparisons!\\n\\n## Presets comparisons (-1 -> 12)\\n\\n**In the following graphs, you may find comparisons between all SVT-AV1 presets, ranging from the slowest `--preset -1` to the fastest `--preset 12`.**\\n> Just like in __v2.1.x__, preset 6 and 13 do not exist in __v2.2.x__ and are instead mapped to preset 7 and 12 respectively.\\n\\n### Efficiency\\n\\n- First of all, the complete efficiency graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_xpsnr.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/full/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nYou may notice something odd going on with the Avatar results using XPSNR. I have tried to understand the cause, without success. For the remainder of this blog post, the Avatar XPSNR results will be omitted. I will continue investigating and aim to have a workaround in place for next time.\\n\\nAnyway, this graph may be impressive, but difficult to read. So let's analyse different quality targets.\\n\\n- The same graphs but focusing on the \\\"high quality\\\" range (CRF10 -> 22):\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/hq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Same, but now focusing on the \\\"medium quality\\\" range (CRF24 -> 36):\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/mq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- And lastly, focusing on the \\\"low quality\\\" range (CRF38 -> 50):\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/lq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- If we now focus on __presets 4__ and below, where it's more difficult to discern the differences between presets, we get this at \\\"high quality\\\":\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/hq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- This at \\\"medium quality\\\":\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/mq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- And the following at \\\"low quality\\\":\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/mrto4/lq/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n### Speed\\n\\n- **Let's now compare the speed of all presets:**\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speed/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speed/v2-2-1_SVT-1_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speed/v2-2-1_SVT-1_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speed/v2-2-1_SVT-1_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speed/v2-2-1_SVT-1_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speed/v2-2-1_SVT-1_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speed/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nUnusable, right?\\n\\n- Then, here is what it looks like with a logarithmic scale:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speedlog/v2-2-1_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_speed_log.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speedlog/v2-2-1_SVT-1_ducks_take_off_720p50_speed_log.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speedlog/v2-2-1_SVT-1_fallout_4_1080p60_speed_log.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speedlog/v2-2-1_SVT-1_minecraft_1080p60_speed_log.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speedlog/v2-2-1_SVT-1_SolLevante_2160p24_speed_log.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speedlog/v2-2-1_SVT-1_Suzume_trailer2_808p24_speed_log.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.2.x-only/allpresets/speedlog/v2-2-1_SVT-1_TheMandalorian_trailer2_800p24_speed_log.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n### Interpretation\\n\\nIt appears as if once again **preset 2** through **preset 4** remain the most balanced presets all-around in an efficient encoding scenario, with **preset 3** not offering much improvements over **preset 4** in average scores but nicely improving on consistency instead, and **preset 2** offering a nice efficiency and consistency uplift on top.\\n\\nIn this release again, the quality gap between **preset 2** and **preset 1** is pretty narrow, and the speed penalty from **preset 1** onward continuously increases, ending up close to ~2x. In comparison, the penalty of going from **preset 3** to **preset 2** is closer to ~1.5x. As such, using **preset 1** is entering placebo territory and it is usually not recommended to waste precious encoding resources on **preset 0** and **preset -1**. This especially applies at medium to high quality, though at extremely low quality targets, like the CRF40-50 range, we can still see appreciable gains from these placebo presets in some clips.\\n\\nAs for the faster presets, **presets 5 to 10** are usually grouped on the graphs focusing on average scores and the ones focusing on consistency. They tend to stand apart from their slower counterparts by just a bit. Though **preset 10** can be worryingly close to **preset 11** on some occasions. They are all viable for your real-time needs. The rule is the same as usual: **go the slowest you can bear that still achieves your goal!**\\n\\n**Presets 11 and 12** are especially inefficient and inconsistent, and to be avoided at all costs. If possible, forget they even exist, as it's probably better to use a comparably fast (or faster) competing codec. They could still be of use in a convex-hull scenario, but in the case of realtime transcoding, you will be better off with some hardware solution like the ones found in RTX 4000 or Arc GPUs.\\n\\n### TLDR\\n\\nThe same conclusions as the previous blog posts can be made: \\n**clear quality gains can be observed as we decrease presets, until __preset 2__, however the effectiveness of dropping presets is noticeably less and less important as quality is increased.**\\n\\n## SVT-AV1 v2.1.x vs v2.2.x presets comparisons:\\n\\nIn this section, we\u2019ll examine the efficiency and speed differences across presets when upgrading from SVT-AV1 2.1.x to 2.2.x. This comparison should bring a new level of nuance to our results, highlighting both incremental improvements and any notable shifts in performance.\\n\\nSVT-AV1 __v2.1.x__ brought some nice improvements over __v2.0.0__, but does __v2.2.x__ bring appreciable improvements in the presets trade-offs this time around as well? Let's find out!\\n\\n### `preset -1`: v2.1.x vs v2.2.x\\n\\n- **Let's start things off with the battle of the placebos, with the Compression efficiency & consistency at \\\"high to medium-ish quality\\\" (CRF10 -> 30):**\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT-1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Along with the Compression efficiency & consistency at \\\"medium-ish to low quality\\\" (CRF34 -> 50):\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT-1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nBasically no changes at all, except a slight regression on Minecraft.\\n\\n- What about their speeds though?:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT-1_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT-1_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT-1_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT-1_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT-1_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT-1_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT-1_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nWell **preset -1** basically became 15 to 25% faster, not bad at all!\\n\\n- Preset -1 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/LdIsYSua), [Avatar (HQ)](https://slow.pics/c/19Oi8pWw), [Avatar (LQ)](https://slow.pics/c/4Ir6SG5S)\\n\\n[Ducks (full)](https://slow.pics/c/BpxD7oZd), [Ducks (HQ)](https://slow.pics/c/qBdzKUFm), [Ducks (LQ)](https://slow.pics/c/XFaep0lc)\\n\\n[Fallout (full)](https://slow.pics/c/EOIoOoAQ), [Fallout (HQ)](https://slow.pics/c/lPg9yLv9), [Fallout (LQ)](https://slow.pics/c/FquLoNSq)\\n\\n[Minecraft (full)](https://slow.pics/c/XRHmsQOw), [Minecraft (HQ)](https://slow.pics/c/ZCzJfBUC), [Minecraft (LQ)](https://slow.pics/c/P0VLDoMT)\\n\\n[Sol Levante (full)](https://slow.pics/c/AQC1xzLS), [Sol Levante (HQ)](https://slow.pics/c/BCVbL7w2), [Sol Levante (LQ)](https://slow.pics/c/UwSQfopm)\\n\\n[Suzume (full)](https://slow.pics/c/Ab6bkcpS), [Suzume (HQ)](https://slow.pics/c/W9KlRAts), [Suzume (LQ)](https://slow.pics/c/6yHhAeM5)\\n\\n[The Mandalorian (full)](https://slow.pics/c/BAF89tjA), [The Mandalorian (HQ)](https://slow.pics/c/DkkK3GYV), [The Mandalorian (LQ)](https://slow.pics/c/xmZmIEar)\\n\\n### `preset 0`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT0_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT0_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT0_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nEfficiency wise, this new **preset 0** is close to unchanged from the old **preset 0**, but its consistency improved slightly in a few clips at high quality and decreased in one clip at low quality.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT0_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT0_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT0_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT0_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT0_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT0_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT0_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 0**'s speed sees an improvement of about 20% at best. Overall, **preset 0** got a proper upgrade!\\n\\n- Preset 0 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/7n5bAB2d), [Avatar (HQ)](https://slow.pics/c/AHmNT8Pw), [Avatar (MQ)](https://slow.pics/c/VC6lZr6D), [Avatar (LQ)](https://slow.pics/c/97SAuLaO)\\n\\n[Ducks (full)](https://slow.pics/c/m9iPnqqW), [Ducks (HQ)](https://slow.pics/c/gBXawmpH), [Ducks (MQ)](https://slow.pics/c/7dRVJzXD), [Ducks (LQ)](https://slow.pics/c/qshRSgnZ)\\n\\n[Fallout (full)](https://slow.pics/c/aq9eTZf5), [Fallout (HQ)](https://slow.pics/c/xu99HM0j), [Fallout (MQ)](https://slow.pics/c/eC0gzO7y), [Fallout (LQ)](https://slow.pics/c/pB9Ps3a6)\\n\\n[Minecraft (full)](https://slow.pics/c/aWbIxmgr), [Minecraft (HQ)](https://slow.pics/c/3jVGagWZ), [Minecraft (MQ)](https://slow.pics/c/MlYl7i4e), [Minecraft (LQ)](https://slow.pics/c/7MImyYc0)\\n\\n[Sol Levante (full)](https://slow.pics/c/SmDGEAPx), [Sol Levante (HQ)](https://slow.pics/c/ZiCgjlxE), [Sol Levante (MQ)](https://slow.pics/c/4GbaSzv6), [Sol Levante (LQ)](https://slow.pics/c/EPTFWHQI)\\n\\n[Suzume (full)](https://slow.pics/c/oVZqCWsl), [Suzume (HQ)](https://slow.pics/c/LqadqVGG), [Suzume (MQ)](https://slow.pics/c/TnD6CAyF), [Suzume (LQ)](https://slow.pics/c/CDuu3SOK)\\n\\n[The Mandalorian (full)](https://slow.pics/c/x8Sot0wg), [The Mandalorian (HQ)](https://slow.pics/c/idbPz3uh), [The Mandalorian (MQ)](https://slow.pics/c/OpFzXtjr), [The Mandalorian (LQ)](https://slow.pics/c/3d8gpuoo)\\n\\n### `preset 1`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT1_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 1** is mostly unchanged but sees another slight regression in Minecraft at high quality.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT1_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT1_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT1_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT1_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT1_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT1_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT1_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nDepending on the clip, speed is mostly unchanged or ever so slighty improved. **Preset 1** is a bit stagnant this release.\\n\\n- Preset 1 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/BnOX37oJ), [Avatar (HQ)](https://slow.pics/c/bWjBtTyR), [Avatar (MQ)](https://slow.pics/c/6UQKyNac), [Avatar (LQ)](https://slow.pics/c/NpyxU3uF)\\n\\n[Ducks (full)](https://slow.pics/c/KVX4piAj), [Ducks (HQ)](https://slow.pics/c/EsEpbKVY), [Ducks (MQ)](https://slow.pics/c/8AxTTvKw), [Ducks (LQ)](https://slow.pics/c/ZgW8715d)\\n\\n[Fallout (full)](https://slow.pics/c/xQprIMbB), [Fallout (HQ)](https://slow.pics/c/qRvBez7k), [Fallout (MQ)](https://slow.pics/c/taXnNGUx), [Fallout (LQ)](https://slow.pics/c/s6fbIqvr)\\n\\n[Minecraft (full)](https://slow.pics/c/cE86n2Gb), [Minecraft (HQ)](https://slow.pics/c/eOyUxHhq), [Minecraft (MQ)](https://slow.pics/c/tKPYsd9K), [Minecraft (LQ)](https://slow.pics/c/evfzJDjc)\\n\\n[Sol Levante (full)](https://slow.pics/c/BSzecR9N), [Sol Levante (HQ)](https://slow.pics/c/mWIoU45b), [Sol Levante (MQ)](https://slow.pics/c/geYXLoIY), [Sol Levante (LQ)](https://slow.pics/c/QzSjaYXF)\\n\\n[Suzume (full)](https://slow.pics/c/pBVidgiB), [Suzume (HQ)](https://slow.pics/c/5KtTXd3q), [Suzume (MQ)](https://slow.pics/c/lb0yMDhZ), [Suzume (LQ)](https://slow.pics/c/TipcRRJr)\\n\\n[The Mandalorian (full)](https://slow.pics/c/4ouGFV9s), [The Mandalorian (HQ)](https://slow.pics/c/oxPNsHdU), [The Mandalorian (MQ)](https://slow.pics/c/EPju5ULC), [The Mandalorian (LQ)](https://slow.pics/c/e58LmgFm)\\n\\n### `preset 2`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT2_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT2_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT2_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 2**'s efficiency has regressed at high quality on some clips, improved in some and stayed the same in others. Except in one clip, consistency seems to have improved all around. At low to medium quality targets, efficiency is mostly unchanged, same for consistency. Not exactly noteworthy.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT2_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT2_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT2_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT2_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT2_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT2_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT2_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nSpeed was improved by about 10-20%. Not a bad showcase, for sure.\\n\\n- Preset 2 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/CJg3dsFg), [Avatar (HQ)](https://slow.pics/c/71wpH5eB), [Avatar (MQ)](https://slow.pics/c/AN0syhNv), [Avatar (LQ)](https://slow.pics/c/NRocyEay)\\n\\n[Ducks (full)](https://slow.pics/c/NyGfMRpQ), [Ducks (HQ)](https://slow.pics/c/OAqs5b8k), [Ducks (MQ)](https://slow.pics/c/tQSF50Ro), [Ducks (LQ)](https://slow.pics/c/gJjm3BGl)\\n\\n[Fallout (full)](https://slow.pics/c/snQuTi1f), [Fallout (HQ)](https://slow.pics/c/0rLG3TUT), [Fallout (MQ)](https://slow.pics/c/MMX6DgNz), [Fallout (LQ)](https://slow.pics/c/lwoIkLfm)\\n\\n[Minecraft (full)](https://slow.pics/c/5OYsrhGY), [Minecraft (HQ)](https://slow.pics/c/kCwbA7Ir), [Minecraft (MQ)](https://slow.pics/c/1nnyrvjD), [Minecraft (LQ)](https://slow.pics/c/F1RTfQf7)\\n\\n[Sol Levante (full)](https://slow.pics/c/xduJGoTU), [Sol Levante (HQ)](https://slow.pics/c/8SdKLegQ), [Sol Levante (MQ)](https://slow.pics/c/uHNR7DNz), [Sol Levante (LQ)](https://slow.pics/c/wgZgH7w6)\\n\\n[Suzume (full)](https://slow.pics/c/zC4AEMLt), [Suzume (HQ)](https://slow.pics/c/kGip9wuY), [Suzume (MQ)](https://slow.pics/c/aoQ0m9ms), [Suzume (LQ)](https://slow.pics/c/7ZMT3inc)\\n\\n[The Mandalorian (full)](https://slow.pics/c/8BKkJ4du), [The Mandalorian (HQ)](https://slow.pics/c/XQeD7vfY), [The Mandalorian (MQ)](https://slow.pics/c/6rQMASQR), [The Mandalorian (LQ)](https://slow.pics/c/Jl2Fh5wE)\\n\\n### `preset 3`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT3_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT3_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT3_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nPractically, it's a wash.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT3_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT3_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT3_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT3_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT3_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT3_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT3_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nStill, **preset 3** got slightly faster, I'm happy to report this is a speedup!\\n\\n- Preset 3 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/Vql4MJWQ), [Avatar (HQ)](https://slow.pics/c/Iuqp0Zbz), [Avatar (MQ)](https://slow.pics/c/MuTOEHE9), [Avatar (LQ)](https://slow.pics/c/poiDDJRQ)\\n\\n[Ducks (full)](https://slow.pics/c/mqWOgsYF), [Ducks (HQ)](https://slow.pics/c/16L6HyaH), [Ducks (MQ)](https://slow.pics/c/KaoPy7ae), [Ducks (LQ)](https://slow.pics/c/0L84OWnI)\\n\\n[Fallout (full)](https://slow.pics/c/JuXAjSY6), [Fallout (HQ)](https://slow.pics/c/mR5rJfsU), [Fallout (MQ)](https://slow.pics/c/Zpy7Hzds), [Fallout (LQ)](https://slow.pics/c/GeQrpfhp)\\n\\n[Minecraft (full)](https://slow.pics/c/rBCbaJkx), [Minecraft (HQ)](https://slow.pics/c/AJHQ4KNL), [Minecraft (MQ)](https://slow.pics/c/MYLA8KPH), [Minecraft (LQ)](https://slow.pics/c/aEMnRk7D)\\n\\n[Sol Levante (full)](https://slow.pics/c/F7rmPiaW), [Sol Levante (HQ)](https://slow.pics/c/PYO4K4sy), [Sol Levante (MQ)](https://slow.pics/c/viWYsgX7), [Sol Levante (LQ)](https://slow.pics/c/4NBaUoEX)\\n\\n[Suzume (full)](https://slow.pics/c/d15XbowQ), [Suzume (HQ)](https://slow.pics/c/eS6EQKng), [Suzume (MQ)](https://slow.pics/c/IJtLW35Z), [Suzume (LQ)](https://slow.pics/c/zf352iox)\\n\\n[The Mandalorian (full)](https://slow.pics/c/UrAekqg6), [The Mandalorian (HQ)](https://slow.pics/c/WWgygRS4), [The Mandalorian (MQ)](https://slow.pics/c/ry5sPqmB), [The Mandalorian (LQ)](https://slow.pics/c/6wI4wexZ)\\n\\n### `preset 4`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT4_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT4_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT4_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 4** sees a consistent though small improvement in average scores and standard deviation accross the entire quality range on basically all clips.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT4_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT4_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT4_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT4_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT4_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT4_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT4_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nUnfortunately, it got slower as a result. If you remember, **v2.1.0** did the exact contrary over **v2.0.0**, I wonder if **preset 4** simply took back the place it previously had...\\n\\n- Preset 4 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/ArdO4K7R), [Avatar (HQ)](https://slow.pics/c/88ikqaZn), [Avatar (MQ)](https://slow.pics/c/rM6LRBg0), [Avatar (LQ)](https://slow.pics/c/ofmHWCkv)\\n\\n[Ducks (full)](https://slow.pics/c/HVkqo5G3), [Ducks (HQ)](https://slow.pics/c/w44DNiqe), [Ducks (MQ)](https://slow.pics/c/GlRLCaBt), [Ducks (LQ)](https://slow.pics/c/Lkzi1VBU)\\n\\n[Fallout (full)](https://slow.pics/c/44jtBEqw), [Fallout (HQ)](https://slow.pics/c/G9YPifBb), [Fallout (MQ)](https://slow.pics/c/86m4exaw), [Fallout (LQ)](https://slow.pics/c/m4KHBihZ)\\n\\n[Minecraft (full)](https://slow.pics/c/n9OP2sht), [Minecraft (HQ)](https://slow.pics/c/JohJ3MzJ), [Minecraft (MQ)](https://slow.pics/c/e6b8R24h), [Minecraft (LQ)](https://slow.pics/c/xNwNlmAG)\\n\\n[Sol Levante (full)](https://slow.pics/c/vB7ndGZI), [Sol Levante (HQ)](https://slow.pics/c/R5uENbD5), [Sol Levante (MQ)](https://slow.pics/c/i7eV72sl), [Sol Levante (LQ)](https://slow.pics/c/zUMYarNf)\\n\\n[Suzume (full)](https://slow.pics/c/rgmuB5xB), [Suzume (HQ)](https://slow.pics/c/y9rxWVre), [Suzume (MQ)](https://slow.pics/c/4GhRL8gZ), [Suzume (LQ)](https://slow.pics/c/F3Hq8V9z)\\n\\n[The Mandalorian (full)](https://slow.pics/c/3BAR5P80), [The Mandalorian (HQ)](https://slow.pics/c/s2xzApJd), [The Mandalorian (MQ)](https://slow.pics/c/Ihjks1JO), [The Mandalorian (LQ)](https://slow.pics/c/JjGKUO1r)\\n\\n### `preset 5`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT5_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT5_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT5_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nBoth metrics say **preset 5** regressed slightly to moderately, though surprisingly its consistency is basically unchanged.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT5_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT5_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT5_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT5_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT5_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT5_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT5_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nThe result of this regression is an impressive speedup of up to 25%.\\n\\n- Preset 5 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/Lc8HjJBK), [Avatar (HQ)](https://slow.pics/c/r3gJkCv3), [Avatar (MQ)](https://slow.pics/c/k2TwNLHN), [Avatar (LQ)](https://slow.pics/c/cMlNo17a)\\n\\n[Ducks (full)](https://slow.pics/c/X4EZFJcM), [Ducks (HQ)](https://slow.pics/c/zKLphp19), [Ducks (MQ)](https://slow.pics/c/dYs1snV3), [Ducks (LQ)](https://slow.pics/c/JFtne5WV)\\n\\n[Fallout (full)](https://slow.pics/c/9ye1q9Rm), [Fallout (HQ)](https://slow.pics/c/zhEuOjRc), [Fallout (MQ)](https://slow.pics/c/YmZ3aRLO), [Fallout (LQ)](https://slow.pics/c/9ye1q9Rm)\\n\\n[Minecraft (full)](https://slow.pics/c/kyjcJWxt), [Minecraft (HQ)](https://slow.pics/c/UTWgYc3P), [Minecraft (MQ)](https://slow.pics/c/FtOxX3RH), [Minecraft (LQ)](https://slow.pics/c/jNyqLPgP)\\n\\n[Sol Levante (full)](https://slow.pics/c/ipyfREjA), [Sol Levante (HQ)](https://slow.pics/c/73V8CGKk), [Sol Levante (MQ)](https://slow.pics/c/z8P9UokS), [Sol Levante (LQ)](https://slow.pics/c/OPwerF86)\\n\\n[Suzume (full)](https://slow.pics/c/xfsYGM5C), [Suzume (HQ)](https://slow.pics/c/dL2J923D), [Suzume (MQ)](https://slow.pics/c/OhZNMzjx), [Suzume (LQ)](https://slow.pics/c/XFCnEebJ)\\n\\n[The Mandalorian (full)](https://slow.pics/c/xrO227rQ), [The Mandalorian (HQ)](https://slow.pics/c/m7Yky6EK), [The Mandalorian (MQ)](https://slow.pics/c/pN0cH6Yn), [The Mandalorian (LQ)](https://slow.pics/c/vB9zK9iz)\\n\\n### ~~`preset 6`: v2.1.x vs v2.2.x~~\\n\\n**Preset 6** is mapped to **preset 7** in **v2.2.x**.\\n\\n### `preset 7`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT7_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT7_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT7_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 7** is close to unchanged in **v2.2.x**.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT7_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT7_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT7_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT7_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT7_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT7_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT7_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nIt still got some slight to moderate speedups though, which can be appreciated.\\n\\n- Preset 7 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/YtvMG9X6), [Avatar (HQ)](https://slow.pics/c/P0gF7nbQ), [Avatar (MQ)](https://slow.pics/c/syT6uiVt), [Avatar (LQ)](https://slow.pics/c/zkkv1ePp)\\n\\n[Ducks (full)](https://slow.pics/c/pyVQmAWj), [Ducks (HQ)](https://slow.pics/c/eXSNnqV7), [Ducks (MQ)](https://slow.pics/c/ja7d0sFU), [Ducks (LQ)](https://slow.pics/c/JCTFfcMu)\\n\\n[Fallout (full)](https://slow.pics/c/S6SbCW8x), [Fallout (HQ)](https://slow.pics/c/bWCLQWwV), [Fallout (MQ)](https://slow.pics/c/hvauusst), [Fallout (LQ)](https://slow.pics/c/04LVSbGD)\\n\\n[Minecraft (full)](https://slow.pics/c/mh8VUfrO), [Minecraft (HQ)](https://slow.pics/c/P0pIx6XP), [Minecraft (MQ)](https://slow.pics/c/vnrXVajs), [Minecraft (LQ)](https://slow.pics/c/8WKQdw2N)\\n\\n[Sol Levante (full)](https://slow.pics/c/kH9LcEzG), [Sol Levante (HQ)](https://slow.pics/c/1DWCNq2B), [Sol Levante (MQ)](https://slow.pics/c/clxjB7Uw), [Sol Levante (LQ)](https://slow.pics/c/52wLF7NR)\\n\\n[Suzume (full)](https://slow.pics/c/3VlVk3O9), [Suzume (HQ)](https://slow.pics/c/FKel5bhI), [Suzume (MQ)](https://slow.pics/c/XXiyyCNN), [Suzume (LQ)](https://slow.pics/c/rrBoua68)\\n\\n[The Mandalorian (full)](https://slow.pics/c/unxuKHEK), [The Mandalorian (HQ)](https://slow.pics/c/GMXnxSdA), [The Mandalorian (MQ)](https://slow.pics/c/v8wSN90W), [The Mandalorian (LQ)](https://slow.pics/c/fswh5kCT)\\n\\n### `preset 8`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT8_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT8_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT8_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nThe efficiency and consistency of **preset 8** has improved at high quality.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT8_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT8_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT8_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT8_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT8_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT8_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT8_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nAnd we can observe a speed increase of around 10%. Some crazy speed deviations can be noticed in Sol Levante. \\n\\n- Preset 8 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/8tKOAvGN), [Avatar (HQ)](https://slow.pics/c/YLWgqmxU), [Avatar (MQ)](https://slow.pics/c/pDg4gLry), [Avatar (LQ)](https://slow.pics/c/ADFSsXmP)\\n\\n[Ducks (full)](https://slow.pics/c/ug0TVcoF), [Ducks (HQ)](https://slow.pics/c/WiDmtcVZ), [Ducks (MQ)](https://slow.pics/c/ERVfuYHH), [Ducks (LQ)](https://slow.pics/c/I0N97rQw)\\n\\n[Fallout (full)](https://slow.pics/c/MqVzmFIi), [Fallout (HQ)](https://slow.pics/c/jUoB0PGo), [Fallout (MQ)](https://slow.pics/c/hXGIfwVj), [Fallout (LQ)](https://slow.pics/c/QUy3iX2H)\\n\\n[Minecraft (full)](https://slow.pics/c/frkuJR97), [Minecraft (HQ)](https://slow.pics/c/GayEkyrn), [Minecraft (MQ)](https://slow.pics/c/S36Ha8LP), [Minecraft (LQ)](https://slow.pics/c/lxoYsv8k)\\n\\n[Sol Levante (full)](https://slow.pics/c/YupMFGeu), [Sol Levante (HQ)](https://slow.pics/c/evfWqxZ9), [Sol Levante (MQ)](https://slow.pics/c/Juh027Eq), [Sol Levante (LQ)](https://slow.pics/c/ETPf9ppU)\\n\\n[Suzume (full)](https://slow.pics/c/oeFUWMHd), [Suzume (HQ)](https://slow.pics/c/01vzYfnq), [Suzume (MQ)](https://slow.pics/c/BIL4g7zk), [Suzume (LQ)](https://slow.pics/c/boxyyeZN)\\n\\n[The Mandalorian (full)](https://slow.pics/c/57M6RHM0), [The Mandalorian (HQ)](https://slow.pics/c/8WJcnZfU), [The Mandalorian (MQ)](https://slow.pics/c/M7q5PYz8), [The Mandalorian (LQ)](https://slow.pics/c/ctoke6p1)\\n\\n### `preset 9`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT9_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT9_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT9_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nEfficiency and consistency stayed mostly the same.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT9_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT9_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT9_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT9_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT9_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT9_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT9_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nSpeed improved by a few percents at most. **Preset 9** has stagnated over **v2.1.x**.\\n\\n- Preset 9 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/P3zZKVF0), [Avatar (HQ)](https://slow.pics/c/sL4HPZLa), [Avatar (MQ)](https://slow.pics/c/QOxyI9h0), [Avatar (LQ)](https://slow.pics/c/RfLKIRjj)\\n\\n[Ducks (full)](https://slow.pics/c/aj6SVcIZ), [Ducks (HQ)](https://slow.pics/c/UpnejngN), [Ducks (MQ)](https://slow.pics/c/KJRzl3FY), [Ducks (LQ)](https://slow.pics/c/4mMq9sz3)\\n\\n[Fallout (full)](https://slow.pics/c/vHqlIJBK), [Fallout (HQ)](https://slow.pics/c/XHoe9Udp), [Fallout (MQ)](https://slow.pics/c/tukibDud), [Fallout (LQ)](https://slow.pics/c/cV57jRF9)\\n\\n[Minecraft (full)](https://slow.pics/c/XRT1OYnX), [Minecraft (HQ)](https://slow.pics/c/HqtoRlvV), [Minecraft (MQ)](https://slow.pics/c/Ml2rLjvO), [Minecraft (LQ)](https://slow.pics/c/EGCsqcSl)\\n\\n[Sol Levante (full)](https://slow.pics/c/8URvlnba), [Sol Levante (HQ)](https://slow.pics/c/jPFT5hMG), [Sol Levante (MQ)](https://slow.pics/c/92EZO3U3), [Sol Levante (LQ)](https://slow.pics/c/bWgcvUtj)\\n\\n[Suzume (full)](https://slow.pics/c/yA2y0v92), [Suzume (HQ)](https://slow.pics/c/pAPBbl7r), [Suzume (MQ)](https://slow.pics/c/7hTvbMy1), [Suzume (LQ)](https://slow.pics/c/arrDGAd9)\\n\\n[The Mandalorian (full)](https://slow.pics/c/KQHqkAVZ), [The Mandalorian (HQ)](https://slow.pics/c/UzdN0rSC), [The Mandalorian (MQ)](https://slow.pics/c/dxKpfcvs), [The Mandalorian (LQ)](https://slow.pics/c/FPJAf74J)\\n\\n### `preset 10`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT10_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT10_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT10_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 10** received the most efficiency and consistency improvements out of all presets in this release. What will be the cost of such drastic change though?\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT10_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT10_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT10_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT10_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT10_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT10_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT10_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nWell, not that much all things considered! **Preset 10**'s speed did decrease from barely anything to 20% in the most extreme situation, but its improvements well outshine its speed regression. Overall, **preset 11** went from borderline unusable to becoming an interesting new fast real-time preset. This is pretty huge in my opinion, as it offers a new kind of trade-off no other AV1 encoder or prior SVT-AV1 versions did.\\n\\n- Preset 10 visual comparisons:\\n\\n[Avatar (full)](https://slow.pics/c/8GjtQQAm), [Avatar (HQ)](https://slow.pics/c/FriwG6rw), [Avatar (MQ)](https://slow.pics/c/vqau9jk1), [Avatar (LQ)](https://slow.pics/c/WQTbcWvH)\\n\\n[Ducks (full)](https://slow.pics/c/xYotraaP), [Ducks (HQ)](https://slow.pics/c/HHlwCvwc), [Ducks (MQ)](https://slow.pics/c/bgV6MoQz), [Ducks (LQ)](https://slow.pics/c/bOAyMVUk)\\n\\n[Fallout (full)](https://slow.pics/c/MrYTMHoQ), [Fallout (HQ)](https://slow.pics/c/qL9xmCfI), [Fallout (MQ)](https://slow.pics/c/dwdE0pWt), [Fallout (LQ)](https://slow.pics/c/uo7Ztb5f)\\n\\n[Minecraft (full)](https://slow.pics/c/fICToF3E), [Minecraft (HQ)](https://slow.pics/c/cGBhBsaS), [Minecraft (MQ)](https://slow.pics/c/w1P4LAu5), [Minecraft (LQ)](https://slow.pics/c/rNqRWd61)\\n\\n[Sol Levante (full)](https://slow.pics/c/UyMpDhx0), [Sol Levante (HQ)](https://slow.pics/c/b0B7ndsZ), [Sol Levante (MQ)](https://slow.pics/c/3H4ewpMI), [Sol Levante (LQ)](https://slow.pics/c/wpCnz72u)\\n\\n[Suzume (full)](https://slow.pics/c/ZYoFdtdS), [Suzume (HQ)](https://slow.pics/c/L2z8yEd5), ~~Suzume (MQ)~~, ~~Suzume (LQ)~~\\n\\n[The Mandalorian (full)](https://slow.pics/c/NhYFWBzc), ~~The Mandalorian (HQ)~~, ~~The Mandalorian (MQ)~~, ~~The Mandalorian (LQ)~~\\n\\n### `preset 11`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT11_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT11_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT11_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nThe new **preset 11** places itself between the old **preset 11** and the old **preset 12** efficiency and consistency wise. \\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT11_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT11_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT11_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT11_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT11_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT11_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT11_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nUnsurprisingly, its speed is also in-between the old **preset 11** and the old **preset 12**. I'm unsure this new trade-off helps in anything.\\n\\n### `preset 12`: v2.1.x vs v2.2.x\\n\\n- Compression efficiency & consistency graphs, high quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/hq/v2-1-2_SVT12_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, medium quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/mq/v2-1-2_SVT12_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Compression efficiency & consistency graphs, low quality range:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_AvatarTheWayOfWater_Trailer3_804p24_ssimu2.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_ducks_take_off_720p50_ssimu2.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_fallout_4_1080p60_ssimu2.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_minecraft_1080p60_ssimu2.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_SolLevante_2160p24_ssimu2.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_Suzume_trailer2_808p24_ssimu2.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_TheMandalorian_trailer2_800p24_ssimu2.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_ducks_take_off_720p50_xpsnr.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_fallout_4_1080p60_xpsnr.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_minecraft_1080p60_xpsnr.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_SolLevante_2160p24_xpsnr.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_Suzume_trailer2_808p24_xpsnr.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_TheMandalorian_trailer2_800p24_xpsnr.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    stddev: {\\n      label: 'STD DEV',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_AvatarTheWayOfWater_Trailer3_804p24_ssimu2_std.webp',\\n            alt: 'Avatar The Way Of Water Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_ducks_take_off_720p50_ssimu2_std.webp',\\n            alt: 'Ducks Take Off Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_fallout_4_1080p60_ssimu2_std.webp',\\n            alt: 'Fallout 4 Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_minecraft_1080p60_ssimu2_std.webp',\\n            alt: 'Minecraft Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_SolLevante_2160p24_ssimu2_std.webp',\\n            alt: 'Sol Levante Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_Suzume_trailer2_808p24_ssimu2_std.webp',\\n            alt: 'Suzume Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/lq/v2-1-2_SVT12_TheMandalorian_trailer2_800p24_ssimu2_std.webp',\\n            alt: 'The Mandalorian Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 12** is almost unchanged from the previous release.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT12_AvatarTheWayOfWater_Trailer3_804p24_speed.webp',\\n              alt: 'Avatar The Way Of Water Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT12_ducks_take_off_720p50_speed.webp',\\n              alt: 'Ducks Take Off Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT12_fallout_4_1080p60_speed.webp',\\n              alt: 'Fallout 4 Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT12_minecraft_1080p60_speed.webp',\\n              alt: 'Minecraft Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT12_SolLevante_2160p24_speed.webp',\\n              alt: 'Sol Levante Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT12_Suzume_trailer2_808p24_speed.webp',\\n              alt: 'Suzume Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.2.x-blogpost/2.1.xvs2.2.x/speed/v2-1-2_SVT12_TheMandalorian_trailer2_800p24_speed.webp',\\n              alt: 'The Mandalorian Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nSame speed wise. So, no improvements at all for the two fastest presets. They remain all around very bad performers. In hindsight, it doesn't matter that I couldn't upload the **preset 11 & 12** visual comparisons, because there is literally nothing to see.\\n\\n### ~~`preset 13`: v2.1.x vs v2.2.x~~\\n\\n**Preset 13** is mapped to **preset 12** in **v2.2.x**.\\n\\n### TLDR\\n\\nWith **v2.2.x**, we observed new efficiency/speed trade-offs for a good amount of presets.\\nSome presets, like **-1** and **0**, received significant speed improvements at no efficiency cost. **Presets  3 and 7** received more reasonable speedups. **Presets 2, 8 and 11** have seen new trade-offs that are mostly beneficial. **Preset 10** was deeply revamped and replaces **preset 9** in my book as the fastest, still viable, real-time preset. **Preset 4** seems to have returned to the state it was in **v2.0.0**. On the other hand, **preset 5** seemed to have regressed slightly, and **presets 1, 9 and 12** are basically unchanged from **v2.1.x**.\\n\\n## Conclusion\\n\\nThe release of SVT-AV1 **v2.2.x** brings some welcome speed improvements. **Presets 2 through 4** continue to lead in efficiency for AV1 encoding, delivering top-tier quality and compression. Meanwhile, **presets 5 through 10** offer solid alternatives for those who find **presets 2 through 4** too slow, balancing quality with noticeably faster encoding times.\\n\\nHopefully, this comprehensive third deep dive has given you a helpful starting point for choosing settings when encoding with ~~the latest~~ SVT-AV1(-PSY) v2.2.x.\\n\\n## Future\\n\\nOnce more, this testing focused on establishing the new presets dynamics, however I haven't revisited the different SVT-AV1 parameters since **v1.8.0**. A few meaningful features have been added since, like variance boost, and with this overhauled methodology, the conclusion made in that blog post may be different now. I think it will be worth to revisit this in the future, maybe in the next blog post for **v2.3.0**? \\nYes, I'm fully aware I'm late because **v2.3.0** has already been out for two whole weeks. Even if the frontend of this blog post doesn't seem to have radically changed, my entire workflow has tremendously evolved since last time. It may have taken me since mid-August to manage to complete this blog post, but my efforts should allow me to produce a follow-up faster.\\n\\nI am conscious of this blog post's limitations. First of all, I observed some odd behaviors from XPSNR on certain clips which I haven't been able to pinpoint yet. It would also give me nonsensical standard deviation results, which is the reason why only the standard deviation in SSIMU2 scores was given. Second of all, SVT-AV1's own behavior starts to get messy when you approach the SSIMULACRA2 0 score, rendering all the data in that region pretty much useless. Plus, aggregating these metrics scores take forever, so I'm looking into ways to accelerate the process, for instance by offloading the work to my GPU using [turbo-metrics](https://github.com/Gui-Yom/turbo-metrics). Also, I'm stuck between wanting to increase the amount of data points in each graphs to get more detailed results and having to keep everything readable. This time around I had to seperate each graph into three quality levels, but that's already too much for my liking. I will look into improving myself on the data presentation front. I feel like I have to streamline this formula to make it more digestible for everyone.\\n\\nPlease, I'm open to **your** remarks and suggestions to improve on this blog post formula.\\n\\nThat said, here are my plans for future blog posts:\\n- a follow-up v2.3.0 article that also revisits the useful SVT-AV1 parameters. *__I'm planning for this to release before 2025.__*\\n- an article focused on giving you encoding tips and explaining common AV1 encoding knowlegde is still planned for *someday*.\\n- a *future* article focused on observing the evolution of all software AV1 encoders since the beginning of their development, as well as comparisons with vpxenc, AVM (development ground for AV2) and VVenC.\\n- and many more...\\n\\nThanks for reading!\\n\\n*Support me by making a donation on [my Ko-Fi page](https://ko-fi.com/nekotrix), as a reward for my efforts and to compensate for the electricity bills of two whole weeks of non-stop encoding.*\\n\\n{}\"},{\"id\":\"codec-wiki-one-year-later\",\"metadata\":{\"permalink\":\"/blog/codec-wiki-one-year-later\",\"source\":\"@site/blog/2024-07-20-codec-wiki-one-year-later.mdx\",\"title\":\"Codec Wiki: One Year Later\",\"description\":\"Codec's Wiki turbulent one-year journey since it's inception to everyone's go-to site for encoding documentation.\",\"date\":\"2024-07-20T00:00:00.000Z\",\"tags\":[{\"inline\":true,\"label\":\"anniversary\",\"permalink\":\"/blog/tags/anniversary\"},{\"inline\":true,\"label\":\"history\",\"permalink\":\"/blog/tags/history\"}],\"readingTime\":3.785,\"hasTruncateMarker\":true,\"authors\":[{\"name\":\"Simulping\",\"title\":\"Maintainer / Encoder\",\"url\":\"https://github.com/Simulping\",\"image_url\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"socials\":{},\"key\":null,\"page\":null}],\"frontMatter\":{\"title\":\"Codec Wiki: One Year Later\",\"description\":\"Codec's Wiki turbulent one-year journey since it's inception to everyone's go-to site for encoding documentation.\",\"slug\":\"codec-wiki-one-year-later\",\"authors\":[{\"name\":\"Simulping\",\"title\":\"Maintainer / Encoder\",\"url\":\"https://github.com/Simulping\",\"image_url\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/12994794?v=4\"}],\"tags\":[\"anniversary\",\"history\"],\"hide_table_of_contents\":false},\"unlisted\":false,\"prevItem\":{\"title\":\"Better late than never: SVT-AV1 v2.2.x Deep Dive\",\"permalink\":\"/blog/svt-av1-third-deep-dive\"},\"nextItem\":{\"title\":\"AV1 for Dummies\",\"permalink\":\"/blog/av1-for-dummies\"}},\"content\":\"Around a month ago, Codec Wiki celebrates it's very first anniversary as it officially hits one year old (Wow, that's a very long time!).\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nFirst and foremost, I apologize for this delayed celebration post, I have been very busy for the past month, y'know, real life things. Second of all, I would like to say **THANK YOU** for everyone who helped build this wiki from the ground up and writing down the entries, you know who you are!\\r\\n\\r\\n## Stats\\r\\n\\r\\nThanks to everyone's efforts, over the course of 12 months Codec Wiki has grown into the (almost) go-to documentation and guide for newcomers just starting out in the quirky and wild world of multimedia encoding. So here are some pretty graphs to look at our progress so far!\\r\\n\\r\\n### Plausible\\r\\n\\r\\nAs you may know, we run our own Plausible Analytics instance. Which is a self-hosted, open source, and privacy-respecting analytics. Currently hosted in Singapore and available for everyone to view [here](https://analytics.x266.mov/wiki.x266.mov).\\r\\n\\r\\n<picture>\\r\\n    <source srcset=\\\"https://raw.githubusercontent.com/av1-community-contributors/images/main/one-year-anniv-blog/plausible.avif\\\" type=\\\"image/avif\\\" />\\r\\n    <img src=\\\"https://raw.githubusercontent.com/av1-community-contributors/images/main/one-year-anniv-blog/plausible.webp\\\" alt=\\\"Plausible Analytics\\\" />\\r\\n</picture>\\r\\n\\r\\n7.7K unique total visitors for a whole year may not be much but it's a great start!\\r\\n\\r\\nLet's not forget those who use uBlock Origin or similar to block the analytics script. So the visitor count could be two or three times more!\\r\\n\\r\\n\\r\\n### Google Search Console\\r\\n\\r\\nFor those who are unfamiliar, Google Search Console is used for viewing well.. Google search data for your website. This data is unfortunately private and only the owner and those invited can see the data, no setting available for public view. Probably for the better.\\r\\n\\r\\n<picture>\\r\\n    <source srcset=\\\"https://raw.githubusercontent.com/av1-community-contributors/images/main/one-year-anniv-blog/console.avif\\\" type=\\\"image/avif\\\" />\\r\\n    <img src=\\\"https://raw.githubusercontent.com/av1-community-contributors/images/main/one-year-anniv-blog/console.webp\\\" alt=\\\"Google Search Console\\\" />\\r\\n</picture>\\r\\n<br></br><br></br>\\r\\n\\r\\nAnd for our top 10 search queries in the last 28 days:\\r\\n\\r\\n<picture>\\r\\n    <source srcset=\\\"https://raw.githubusercontent.com/av1-community-contributors/images/main/one-year-anniv-blog/insights.avif\\\" type=\\\"image/avif\\\" />\\r\\n    <img src=\\\"https://raw.githubusercontent.com/av1-community-contributors/images/main/one-year-anniv-blog/insights.webp\\\" alt=\\\"Search Queries page 1\\\" />\\r\\n</picture>\\r\\n<picture>\\r\\n    <source srcset=\\\"https://raw.githubusercontent.com/av1-community-contributors/images/main/one-year-anniv-blog/insights2.avif\\\" type=\\\"image/avif\\\" />\\r\\n    <img src=\\\"https://raw.githubusercontent.com/av1-community-contributors/images/main/one-year-anniv-blog/insights2.webp\\\" alt=\\\"Search Queries page 2\\\" />\\r\\n</picture>\\r\\n<br></br><br></br>\\r\\n\\r\\nWith pretty much zero competition in this niche of a market, it skyrocketed Codec Wiki to the top of search results for everything multimedia related \ud83d\ude05.\\r\\n\\r\\n\\r\\n## A Brief History\\r\\n\\r\\nAround a year ago, I started work on an unofficial \\\"wiki\\\" for all things encoding, it initially started as a half-serious joke because I was annoyed there were no good documentation available\\r\\nanywhere on the internet on the real application and usage of encoders such as \\\"Should I use tune SSIM in x encoder?\\\". With the search results you'll be presented with being one or more of these:\\r\\n\\r\\n- Doesn't exist.\\r\\n- Mentioned in the FFmpeg mailing list but nothing else.\\r\\n- PDF research papers on IEEE and similar.\\r\\n- Outdated information on Doom9 or Multimedia Wiki.\\r\\n- \\\"The documentation are in the code blocks\\\".\\r\\n- Link rot.\\r\\n- Abandoned, or mostly focused on other topics.\\r\\n- Focused on a specific type of storytelling medium.\\r\\n- Actual good explanation in an old forgotten site (rare).\\r\\n\\r\\nSome or maybe even most of these results still appear up to this day.\\r\\n\\r\\n\\r\\nFrustrated with how scarce information is available on the open internet and combined with the fact that most, if not all of them only exist in non-search-engine-reachable private chat communities such as Discord where you'll have to join and scroll around older conversations.\\r\\n\\r\\nProne to data erasure as Discord can nuke these servers for whatever reason they please and years of \\\"documentation\\\" is lost in an instant. It is simply not a good platform for a plethora of valuable information.\\r\\n\\r\\n**That's why I took initiative.**\\r\\n\\r\\n\\r\\n## Bumps in the Road\\r\\n\\r\\nThere were also generally a lot of distrust and pushbacks when this project first began, particularly from those who are more experienced with encoding. Which is understandable because everyone who attempted before burned out and never finished it.\\r\\n\\r\\nBut Codec Wiki stood the test of time with constant updates through active collaboration of everyone involved, nowadays those voices have mostly subsided or even joined the project themselves. And I am grateful for that.\\r\\n\\r\\n\\r\\n## Closing Statement\\r\\n\\r\\nOnce again, **THANK YOU VERY MUCH** for those who are involved in this project and making the once pipe dream of a one-stop-shop user-friendly documentation for encoding into something that's possible.\\r\\n\\r\\nLet's continue documenting the most crucial yet invisible driving force of internet traffic, pages by pages.\\r\\n\\r\\nTogether we are strong, divided we burn out.\\r\\n\\r\\n\\r\\n<br></br>\\r\\n> \\\"There are times when a critic truly risks something, and that is the discovery and defense of the *new*. **The world is often unkind to new talent, new creations. The new needs friends**.\\\"\\r\\n>\\r\\n> \u2014 Anton Ego\"},{\"id\":\"av1-for-dummies\",\"metadata\":{\"permalink\":\"/blog/av1-for-dummies\",\"source\":\"@site/blog/2024-06-24-av1-for-dummies-2.mdx\",\"title\":\"AV1 for Dummies\",\"description\":\"AV1 for Dummies is a comprehensive, legible guide on how to get started with AV1 at any experience level. Whether you're on Windows using your first video encoding program, or a seasoned Linux user looking to optimize your encoding pipeline, this guide has you covered.\",\"date\":\"2024-06-24T00:00:00.000Z\",\"tags\":[{\"inline\":true,\"label\":\"video\",\"permalink\":\"/blog/tags/video\"},{\"inline\":true,\"label\":\"compression\",\"permalink\":\"/blog/tags/compression\"}],\"readingTime\":16.645,\"hasTruncateMarker\":true,\"authors\":[{\"name\":\"Gianni Rosato\",\"title\":\"Maintainer\",\"url\":\"https://github.com/gianni-rosato\",\"image_url\":\"https://avatars.githubusercontent.com/u/35711760?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/35711760?v=4\",\"socials\":{},\"key\":null,\"page\":null},{\"name\":\"Simulping\",\"title\":\"Maintainer / Encoder\",\"url\":\"https://github.com/Simulping\",\"image_url\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"socials\":{},\"key\":null,\"page\":null}],\"frontMatter\":{\"title\":\"AV1 for Dummies\",\"description\":\"AV1 for Dummies is a comprehensive, legible guide on how to get started with AV1 at any experience level. Whether you're on Windows using your first video encoding program, or a seasoned Linux user looking to optimize your encoding pipeline, this guide has you covered.\",\"slug\":\"av1-for-dummies\",\"authors\":[{\"name\":\"Gianni Rosato\",\"title\":\"Maintainer\",\"url\":\"https://github.com/gianni-rosato\",\"image_url\":\"https://avatars.githubusercontent.com/u/35711760?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/35711760?v=4\"},{\"name\":\"Simulping\",\"title\":\"Maintainer / Encoder\",\"url\":\"https://github.com/Simulping\",\"image_url\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/12994794?v=4\"}],\"tags\":[\"video\",\"compression\"],\"image\":\"/img/av1_for_dummies_guide.jpg\",\"hide_table_of_contents\":false},\"unlisted\":false,\"prevItem\":{\"title\":\"Codec Wiki: One Year Later\",\"permalink\":\"/blog/codec-wiki-one-year-later\"},\"nextItem\":{\"title\":\"Observing SVT-AV1 v2.1.0's improvements: A New Deep Dive\",\"permalink\":\"/blog/svt-av1-second-deep-dive\"}},\"content\":\"AV1 for Dummies is a comprehensive, legible guide on how to get started with AV1 at any experience level. Whether you're on Windows using your first video encoding program, or a seasoned Linux user looking to optimize your encoding pipeline, this guide has you covered.\\n\\n\x3c!--truncate--\x3e\\n\\n![Compare](/img/av1_for_dummies_guide.avif)\\n\\n## Introduction\\n\\n[AV1](https://wiki.x266.mov/docs/video/AV1) is a royalty-free video codec developed by the Alliance for Open Media. It is designed to replace [VP9](https://wiki.x266.mov/docs/video/VP9) and presently competes with [H.266](https://wiki.x266.mov/docs/video/VVC). AV1 is known for its high compression efficiency, which the marketing will have you believe reduces file sizes by up to 50% compared to [H.264](https://wiki.x266.mov/docs/video/AVC) and up to 30% compared to [H.265](https://wiki.x266.mov/docs/video/HEVC) across the board. It is supported by several major browsers and is widely used across many streaming services and video platforms.\\n\\n### Why AV1?\\n\\nBefore we dive in, it is important to understand *why* you may want to use AV1 instead of other codecs. The reality is that AV1 is *not* better than H.264/5 in every single scenario; video encoding is a complicated field, and the best codec for you will depend on your specific needs. AV1 excels in:\\n- Low to medium-high fidelity encoding\\n- Higher resolution encoding\\n- Encoding content with very little grain or noise\\n- Slow, non-realtime contexts (e.g. offline encoding)\\n\\nThe enumeration above still consists of broad strokes, but the point is to understand that AV1 is not a silver bullet. It will not automatically make your videos smaller while preserving your desired quality. To make things more difficult, the [x264](https://wiki.x266.mov/docs/encoders/x264) & [x265](https://wiki.x266.mov/docs/encoders/x265) encoders are very mature, while AV1 encoding efforts designed to meet the extremely complicated needs of the human eye are still in their infancy.\\n\\nThis guide focuses almost entirely on tools great for offline, non-realtime encoding for various kinds of content. Streaming is an altogether different application of AV1, and is only covered sparsely here.\\n\\n### Do's & Don'ts\\n\\nDue to a lot of misunderstandings about codecs and compression, there are a lot of common misconceptions that are held regarding video encoding. We'll start by outlining some bad practices:\\n\\n- **Don't** encode the same video multiple times. This is a common mistake made by people new to video encoding. Every time you encode a video, you lose additional quality due to *generation loss*. This is because video codecs are lossy, and every time you encode a video, you lose more information. This is why it is important to keep the original video file if you frequently re-encode it.\\n- **Don't** blindly copy settings from others without understanding them. What works for one person's content and workflow may not work for yours. Even the default settings on many encoders are not optimal for most content.\\n- **Don't** assume that higher bitrate equates to better quality. Inefficient encoding can waste bits without improving visual quality, and efficient encoding can make lower bitrate video look drastically better than higher bitrate video using the same codec.\\n- **Don't** assume all encoders/presets/settings/implementations are created equal. Even given two encoding frameworks that use the same underlying encoder, you may achieve different results given encoder version mismatches or subtly different settings used under the hood.\\n- **Don't** use unnecessarily slow presets/speeds unless you have a specific need and ample time. While slower presets improve encoding efficiency most of the time, the quality gains reach a point of diminishing returns beyond a certain point. Use the slowest preset you can tolerate, not the slowest preset available.\\n- **Don't** blindly trust metric scores. It is unfortunate how trusted [VMAF](https://wiki.x266.mov/docs/metrics/VMAF) is considering how infrequently it correlates with visual fidelity in practice now that it has become so popular. Even the beloved [SSIMULACRA2](https://wiki.x266.mov/docs/metrics/SSIMULACRA2) is not a perfect one-to-one with the human eye.\\n\\nNow, let's move on to some **good** practices:\\n- Experiment with different settings and compare the results.\\n- Consider your content type when choosing encoding settings. Film, animation, and sports all have different characteristics that benefit from distinct approaches.\\n- Try to use CRF for offline encoding, as opposed to CBR or VBR. While the latter two are effective for precisely targeting a particular bitrate, CRF is more effective at targeting a specific quality level efficiently.\\n- Always use 10-bit color, even with an 8-bit source. AV1's internal workings are much more suited to 10-bit color, and you are almost always guaranteed quality improvements with zero compatibility penalty as 10-bit color is part of AV1's baseline profile.\\n- Consider using grain synthesis for grainy content, as AV1 can struggle with preserving film grain efficiently.\\n- Keep your encoding software up-to-date; the encoding world moves quickly.\\n\\n## Tools\\n\\nSince writing the last guide, there are now several versatile tools available for AV1 encoding. Below, we've assembled some tables of popular encoding tools and their features.\\n\\n### GUI\\n\\nHere's the key:\\n- **Encoder(s)**: The AV1 encoder(s) the software uses or is able to use. This is between [SVT-AV1](https://wiki.x266.mov/docs/encoders/SVT-AV1), [aomenc](https://wiki.x266.mov/docs/encoders/aomenc), [rav1e](https://wiki.x266.mov/docs/encoders/rav1e), [SVT-AV1-PSY](https://wiki.x266.mov/docs/encoders/SVT-AV1-PSY), and various aomenc forks. We'll get into this more later.\\n- **Ease of Use**: How intuitive the software is, especially for beginners.\\n- **Complexity**: How flexible the software can be for advanced users.\\n- **Efficiency**: How \\\"good\\\" the underlying encoder(s) are. This is more subjective, but tools with bad defaults, misleading options, or slow release cycles won't score well here.\\n\\n| Name    | Platform(s) | Encoder(s) | Ease of Use | Complexity | Efficiency  |\\n|---------|-------------|:----------:|:-----------:|:-----------:|------------|\\n| [Aviator](https://wiki.x266.mov/docs/utilities/Aviator) | Linux       | SVT-AV1-PSY| \u25cf\u25cf\u25cf\u25cf\u25cf       | \u25cf\u25cb\u25cb\u25cb\u25cb         | \u25cf\u25cf\u25cf\u25cf\u25cf     |\\n| [NMKODER](https://wiki.x266.mov/docs/utilities/nmkoder) | Windows     | Any        | \u25cf\u25cf\u25cf\u25cb\u25cb       | \u25cf\u25cf\u25cf\u25cf\u25cb         | \u25cf\u25cf\u25cb\u25cb\u25cb     |\\n| [Av1ation Station](https://github.com/Av1ation-Association/Av1ation-Creations/releases/) | Any | Any       | \u25cf\u25cf\u25cf\u25cb\u25cb       | \u25cf\u25cf\u25cf\u25cf\u25cf         | \u25cf\u25cf\u25cf\u25cf\u25cb     |\\n| [StaxRip](https://github.com/staxrip/staxrip) | Windows     | Any        | \u25cf\u25cf\u25cb\u25cb\u25cb       | \u25cf\u25cf\u25cf\u25cf\u25cf         | \u25cf\u25cf\u25cf\u25cf\u25cb     |\\n| [NEAV1E](https://github.com/Alkl58/NotEnoughAV1Encodes) | Windows | Any | \u25cf\u25cf\u25cf\u25cb\u25cb      | \u25cf\u25cf\u25cf\u25cb\u25cb         | \u25cf\u25cf\u25cb\u25cb\u25cb     |\\n| [Handbrake](https://handbrake.fr/) | Any       | SVT-AV1     | \u25cf\u25cf\u25cf\u25cf\u25cb      | \u25cf\u25cf\u25cb\u25cb\u25cb         | \u25cf\u25cf\u25cb\u25cb\u25cb     |\\n| [FastFlix](https://github.com/cdgriffith/FastFlix)  | Any       | Any         | \u25cf\u25cf\u25cf\u25cf\u25cb      | \u25cf\u25cf\u25cf\u25cb\u25cb         | \u25cf\u25cf\u25cb\u25cb\u25cb     |\\n| [rAV1ator](https://wiki.x266.mov/docs/utilities/rav1ator)  | Linux     | rav1e       | \u25cf\u25cf\u25cf\u25cf\u25cb      | \u25cf\u25cf\u25cf\u25cb\u25cb         | \u25cf\u25cb\u25cb\u25cb\u25cb     |\\n| [Autocompressor](https://autocompressor.net/) | Web  | SVT-AV1     | \u25cf\u25cf\u25cf\u25cf\u25cf      | \u25cf\u25cb\u25cb\u25cb\u25cb         | \u25cf\u25cf\u25cf\u25cb\u25cb     |\\n\\nOur top pics are:\\n- For beginners: **Aviator**. If you are on Linux and you want zero hassle whatsoever, Aviator is simple but highly effective. As a Flatpak application, it ships a bundled SVT-AV1-PSY binary that is up-to-date, compiled efficiently, and handled with extensively tested defaults. It is hard to go wrong with Aviator even as an advanced user, despite its simplicity.\\n- For advanced users: **Av1ation Station**. Av1ator Station is thoughtfully designed to be your one-stop shop for video encoding. Even though it is brand new, it has proven itself to be a capable and reliable solution for advanced video encoders that have a lot of settings to tweak and encodes to keep track of.\\n- For Windows users: **StaxRip**. StaxRip is a long-standing, well-maintained, and highly flexible video encoding tool that supports a plethora of encoders and formats. It comes bundled with SVT-AV1-PSY and is a great choice for Windows users who want a powerful and versatile tool for video encoding.\\n\\n### CLI\\n\\nIn the terminal, advanced encoders can explore a much greater degree of complexity than many GUIs allow. That being said, ease of use is still a consideration when managing complex command-line encoding workflows. Let's begin with the key:\\n- We're omitting the \\\"Platform(s)\\\" column here, as this section targets Linux users. As a Windows user, WSL has you covered - as a Mac user, you're likely to experience parity with Linux (most of the time).\\n\\n| Name | Framework(s) | Ease of Use | Complexity | Features | Scene Detection |\\n|------|--------------|:-----------:|:----------:|:--------:|:---------------:|\\n| SvtAv1EncApp | None | \u25cf\u25cb\u25cb\u25cb\u25cb | \u25cf\u25cf\u25cb\u25cb\u25cb | \u25cf\u25cb\u25cb\u25cb\u25cb | No |\\n| [FFmpeg](https://wiki.x266.mov/docs/utilities/ffmpeg) | Itself | \u25cf\u25cf\u25cb\u25cb\u25cb | \u25cf\u25cf\u25cf\u25cf\u25cf | \u25cf\u25cf\u25cf\u25cf\u25cb | No |\\n| [Av1an](https://wiki.x266.mov/docs/utilities/av1an) | FFmpeg | \u25cf\u25cb\u25cb\u25cb\u25cb | \u25cf\u25cf\u25cf\u25cf\u25cf | \u25cf\u25cf\u25cf\u25cb\u25cb | Yes |\\n| [rAV1ator CLI](https://wiki.x266.mov/docs/utilities/rav1ator-cli) | Av1an | \u25cf\u25cf\u25cf\u25cf\u25cb | \u25cf\u25cf\u25cf\u25cf\u25cb | \u25cf\u25cf\u25cf\u25cf\u25cb | Yes |\\n| [alabamaEncoder](https://github.com/kingstefan26/alabamaEncoder) | FFmpeg | \u25cf\u25cf\u25cb\u25cb\u25cb | \u25cf\u25cf\u25cf\u25cf\u25cf | \u25cf\u25cf\u25cf\u25cf\u25cf | Yes |\\n\\nOur top picks are:\\n- For beginners: **rAV1ator CLI**. rAV1ator CLI essentially walks you through the process of writing Av1an commands. It can install binaries for you, save your previous commands, and detect scenes via Av1an. This makes it a great choice for beginners who want to learn the ropes of AV1 encoding without diving into the deep end headfirst. For advanced users, it makes rapidly writing, testing, & cataloging Av1an encoding commands much simpler.\\n- For advanced users: **alabamaEncoder**. alabamaEncoder is a powerful and flexible tool that allows you to encode video with FFmpeg and AV1. It is highly configurable and supports a mind-bending array of powerful features that would be hard to find elsewhere. While the tool is still new, it is already a great choice for advanced users who want to push the boundaries of what is possible to incorporate into an encoding workflow.\\n\\n### Conclusion\\n\\nIn conclusion, the best AV1 tool for you will depend on your needs and experience level. If you are a beginner, Aviator is a great choice for Linux users, while StaxRip is a good option for Windows users. For advanced users, Av1ation Station is a powerful and versatile tool that can handle numerous encoding tasks. If you prefer the command line, rAV1ator CLI is a great choice for beginners, while alabamaEncoder is a powerful tool for advanced users. No matter which tool you choose, it is hard to go wrong in the modern AV1 encoding landscape when it comes to your utility of choice.\\n\\n## Encoders\\n\\nThe world of AV1 encoding is diverse and complex, with several open-source encoders available, each bringing its own set of strengths, weaknesses, and unique features to the table. In this section, we'll dive deep into the characteristics of four major AV1 encoders:\\n1. SVT-AV1,\\n2. rav1e,\\n3. aomenc (libaom), and\\n4. SVT-AV1-PSY\\n\\nUnderstanding these encoders is crucial for making informed decisions about what best suits your specific encoding needs.\\n\\n### SVT-AV1\\n\\n[SVT-AV1](https://wiki.x266.mov/docs/encoders/SVT-AV1) (Scalable Video Technology for AV1) is an AV1 encoder library and application developed by Intel, Netflix, and others. It has gained significant popularity in the encoding community due to its impressive balance of speed, quality, and scalability.\\n\\nLinks:\\n- Wiki page: [SVT-AV1](https://wiki.x266.mov/docs/encoders/SVT-AV1)\\n- Git repository: https://gitlab.com/AOMediaCodec/SVT-AV1\\n- Documentation: https://gitlab.com/AOMediaCodec/SVT-AV1/-/blob/master/Docs/README.md\\n\\n1. **Performance & Scalability**\\n   - SVT-AV1 is renowned for its encoding speed, particularly at higher speed presets.\\n   - It leverages parallel processing, making it exceptionally efficient on multi-core systems. Fun fact: SVT-AV1's parallel processing is lossless, so it doesn't compromise quality for speed.\\n\\n2. **Quality-to-Speed Ratio**\\n   - SVT-AV1 strikes an impressive balance between encoding speed and output quality.\\n   - At faster presets, it usually outperforms other encoders in quality per unit of encoding time.\\n   - While it may not achieve the absolute highest *quality per bit* possible, its quality is generally considered impressive for its speed.\\n\\n3. **Flexibility**\\n   - SVT-AV1 offers a wide range of encoding options and presets, allowing fine-tuned control over the encoding process.\\n   - It provides 14 presets (0-13), with 0 being the slowest and highest quality, and 13 being the fastest but lowest quality.\\n   - Advanced options allow users to adjust parameters like hierarchical levels, intra-refresh type, and tuning modes.\\n\\n4. **Continuous Development**\\n   - SVT-AV1 receives frequent updates and optimizations, with new releases often coming alongside big changes.\\n   - The open-source nature of the project encourages community contributions and rapid feature development.\\n\\nSVT-AV1 is an excellent choice for a wide range of encoding scenarios. It's particularly well-suited for:\\n- High-volume encoding operations where speed is crucial\\n- Live or near-live encoding of high-resolution content\\n- Scenarios where a balance between quality and encoding speed is required\\n- Users with multi-core systems who want to leverage their hardware efficiently\\n\\nSome downsides include:\\n- Higher memory usage compared to other encoders\\n- The developers assess quality via its performance on traditional legacy metrics, which harms its perceptual fidelity ceiling.\\n\\n### rav1e\\n\\n[rav1e](https://wiki.x266.mov/docs/encoders/rav1e) is an AV1 encoder written in Rust & Assembly. Developed by the open-source community alongside Xiph, it brings a unique approach to AV1 encoding with its focus on safety and correctness.\\n\\nLinks:\\n- Wiki page: [rav1e](https://wiki.x266.mov/docs/encoders/rav1e)\\n- Git repository: https://github.com/xiph/rav1e\\n- Documentation: https://github.com/xiph/rav1e/tree/master/doc#readme\\n\\n1. **Safety & Reliability**\\n   - Being written in Rust, rav1e emphasizes memory safety and thread safety.\\n   - This focus on safety translates to a more stable and reliable encoding process, with reduced risks of crashes or undefined behavior.\\n\\n2. **High Fidelity**\\n   - At high fidelity targets - an area where AV1 usually lacks - rav1e is a strong contender compared to other encoders.\\n   - It excels in preserving fine details and textures, making it a good choice for high-fidelity encoding.\\n\\n3. **Quality**\\n   - While not typically matching aomenc or SVT-AV1 in pure compression efficiency, rav1e can produce high-quality output videos.\\n   - It often achieves a good balance between quality and encoding time, especially at medium-speed settings.\\n\\n4. **Perceptually Driven**\\n   - rav1e's development is driven by visual fidelity, without relying heavily on metrics.\\n   - This focus on perceptual quality leads to a stronger foundation for future potential improvements in visual quality, as well as making the encoder very easy to use as it does not require excessive tweaking.\\n\\nrav1e is well-suited for:\\n- Projects where stability is paramount\\n- Users who prioritize a community-driven, open-source development approach\\n- Encoding tasks where a balance between quality and speed is needed, but the absolute fastest speeds are not required\\n\\nSome limitations of rav1e include:\\n- Lagging development compared to other encoders\\n- Slower encoding speeds compared to SVT-AV1 at similar quality & size\\n- Fewer advanced options compared to other encoders\\n\\n### aomenc (libaom)\\n\\n[aomenc](https://wiki.x266.mov/docs/encoders/aomenc), based on the libaom library, is the reference encoder for AV1. Developed by the Alliance for Open Media (AOM), it is the benchmark for AV1 encoding quality and compliance.\\n\\nLinks:\\n- Wiki page: [aomenc](https://wiki.x266.mov/docs/encoders/aomenc)\\n- Git repository: https://aomedia.googlesource.com/aom/\\n\\n1. **Encoding Quality**\\n   - aomenc is widely regarded as the gold standard for AV1 encoding quality.\\n   - It often achieves high compression efficiency among AV1 encoders, especially at slower speed settings.\\n   - The encoder squeezes out nearly every last bit of efficiency from the AV1 codec, making it ideal for archival purposes or when quality per bit is critical.\\n\\n2. **Encoding Speed**\\n   - aomenc is generally the slowest among major AV1 encoders.\\n   - It offers 13 CPU speed levels (0-12), but even at its fastest settings, it's typically slower than other encoders at their slower settings.\\n   - The slow speed is often considered a trade-off for its high compression efficiency.\\n\\n3. **Extensive Options**\\n   - As the reference implementation, aomenc offers the most comprehensive encoding options.\\n   - It provides fine-grained control over nearly every aspect of the AV1 encoding process.\\n   - Advanced users can tweak many parameters to optimize for specific content types or encoding scenarios.\\n\\n4. **Flexibility**\\n   - Being the reference encoder, aomenc produces highly standards-compliant AV1 bitstreams that take advantage of the full arsenal of AV1 features.\\n   - It supports 4:2:0 and 4:4:4 chroma subsampling, 8- to 12-bit color depth, and various other advanced features that more specialized encoders like SVT-AV1 do not support.\\n\\naomenc is ideal for:\\n- Scenarios where achieving the highest possible quality is the primary goal\\n- Archival encoding where compression efficiency is crucial\\n- Research and development in video compression\\n- Encoding projects where encoding time is not a significant constraint\\n\\nSome drawbacks of aomenc include:\\n- Unresponsive development driven by legacy metrics, leading to slower adoption of new techniques and ignoring improvements communicated by people outside the Google development team\\n- Cripplingly difficult to use for beginners, with a culture of cargo-culting settings\\n- Slow encoding speeds compared to other AV1 encoders, which has less of an impact on the quality of the output than it used to compared to maturing encoders like SVT-AV1\\n\\n### SVT-AV1-PSY\\n\\n[SVT-AV1-PSY](https://wiki.x266.mov/docs/encoders/svt-av1-psy) is a community fork of the SVT-AV1 encoder focused on psychovisual optimizations to enhance perceived visual quality. It aims at closing the distance between SVT-AV1's high speeds and the perceptual quality of aomenc's slow brute force approach.\\n\\nLinks:\\n- Wiki page: [SVT-AV1-PSY](https://wiki.x266.mov/docs/encoders/svt-av1-psy)\\n- Git repository: https://github.com/gianni-rosato/svt-av1-psy\\n- Documentation: https://github.com/gianni-rosato/svt-av1-psy/blob/master/Docs/PSY-Development.md\\n\\n1. **Perceptual Optimizations**\\n   - SVT-AV1-PSY introduces various psychovisual enhancements to improve the perceived quality of encoded video.\\n   - These optimizations often result in output that looks better to the human eye, even if it might not always score as well in objective metrics.\\n\\n2. **Additional Features**\\n    - Introduces new options like variance boost, which can help maintain detail in high-contrast scenes.\\n    - Offers alternative curve options for more nuanced control over the encoding process.\\n    - Extends the CRF (Constant Rate Factor) range to 70 (from 63 in mainline SVT-AV1), allowing for extremely low-bitrate encodes.\\n    - Introduces additional tuning options, including a new \\\"SSIM with Subjective Quality Tuning\\\" mode that can improve perceived quality.\\n\\n3. **Visual Fidelity Focus**\\n   - Aims to produce more visually pleasing results, sometimes at the expense of metric performance.\\n   - Includes options like sharpness adjustment and adaptive film grain synthesis which can significantly impact the visual characteristics of the output.\\n   - Features modified defaults driven by perceptual quality considerations.\\n\\n4. **Extended HDR Support**\\n   - Includes built-in support for Dolby Vision & HDR10+ encoding.\\n   - This makes it particularly useful for encoding HDR content without requiring additional post-processing steps or external tools.\\n\\n5. **Performance**\\n   - Based on SVT-AV1, it retains the performance characteristics of its parent encoder.\\n   - Adds super slow presets (-2 and -3) for research purposes and extremely high-quality encoding. These additional presets can be useful for creating reference encodes or applications where encoding time is not a concern.\\n\\nSVT-AV1-PSY is particularly well-suited for:\\n- Encoding scenarios where subjective visual quality is prioritized over pure metric performance\\n- HDR content encoding in Dolby Vision or HDR10+\\n- Users who want fine-grained control over psychovisual aspects of encoding\\n- Projects that require a balance between the speed of SVT-AV1 and enhanced visual quality\\n- Encoding challenging content with complex textures or high-contrast scenes\\n\\nSome drawbacks are:\\n- Everything that applies to SVT-AV1, including the lack of support for 4:4:4 chroma subsampling and 12-bit color depth that are useful in specific scenarios\\n\\n### Conclusion\\n\\nWhile SVT-AV1 is known for being fast, aomenc is renowned for its high-quality output, and rav1e is recognized for its safety and reliability, each encoder has strengths and weaknesses. The best encoder for you will depend on your specific needs and priorities.\\n\\nAs this guide is focused on offline encoding, **SVT-AV1-PSY** combines aomenc's traditional perceptual strength with SVT-AV1's speed. Like rav1e, it is easy to use due to strong default settings that prevent cargo culting, and overall it can be considered the best of all three worlds. It is actively developed by a team of responsive community members, and it is a great choice for most users who want a balance between quality per bit, speed, and ease of use.\\n\\nThe \\\"best\\\" encoder often depends on your use case, content type, and target audience. It's always worth experimenting with different encoders and settings to find the optimal balance for your needs. Many advanced users even employ multiple encoders in their workflows, choosing the most appropriate tool for each specific task or content type.\\n\\n## Final Conclusion\\n\\nThe AV1 ecosystem has grown to the point where a single comprehensive guide cannot effectively cover the entire extent of the available tools and techniques for AV1 encoding across *every* use case. If you want more detail about a particular tool, where to acquire it, or how to compile an encoder, you can find that information throughout the various wiki entries linked on this page.\\n\\nReading can get you far, but it is natural to have questions. Please don't hesitate to connect with the team behind the Codec Wiki and many of these tools via our [AV1 for Dummies Discord server](https://discord.gg/bbQD5MjDr3). We're happy to help you with anything you need, and your questions and feedback help the wiki grow and improve. We hope you enjoy your journey into AV1 encoding, and we wish you the best of luck in your encoding endeavors!\"},{\"id\":\"svt-av1-second-deep-dive\",\"metadata\":{\"permalink\":\"/blog/svt-av1-second-deep-dive\",\"source\":\"@site/blog/2024-05-19-svt-av1-deep-dive2-v2-1-0.mdx\",\"title\":\"Observing SVT-AV1 v2.1.0's improvements: A New Deep Dive\",\"description\":\"SVT-AV1 2.1.0 just released, how does it compare to the previous version?\",\"date\":\"2024-05-19T00:00:00.000Z\",\"tags\":[{\"inline\":true,\"label\":\"video\",\"permalink\":\"/blog/tags/video\"},{\"inline\":true,\"label\":\"compression\",\"permalink\":\"/blog/tags/compression\"},{\"inline\":true,\"label\":\"benchmarks\",\"permalink\":\"/blog/tags/benchmarks\"}],\"readingTime\":35.215,\"hasTruncateMarker\":true,\"authors\":[{\"name\":\"Trix\",\"title\":\"Encoder\",\"url\":\"https://github.com/trixoniisama/\",\"image_url\":\"https://avatars.githubusercontent.com/u/93526043\",\"imageURL\":\"https://avatars.githubusercontent.com/u/93526043\",\"socials\":{},\"key\":null,\"page\":null}],\"frontMatter\":{\"title\":\"Observing SVT-AV1 v2.1.0's improvements: A New Deep Dive\",\"description\":\"SVT-AV1 2.1.0 just released, how does it compare to the previous version?\",\"slug\":\"svt-av1-second-deep-dive\",\"authors\":[{\"name\":\"Trix\",\"title\":\"Encoder\",\"url\":\"https://github.com/trixoniisama/\",\"image_url\":\"https://avatars.githubusercontent.com/u/93526043\",\"imageURL\":\"https://avatars.githubusercontent.com/u/93526043\"}],\"tags\":[\"video\",\"compression\",\"benchmarks\"],\"image\":\"/img/svt-2.1.0-testing-blog-image.webp\",\"hide_table_of_contents\":false},\"unlisted\":false,\"prevItem\":{\"title\":\"AV1 for Dummies\",\"permalink\":\"/blog/av1-for-dummies\"},\"nextItem\":{\"title\":\"Encoding Animation with SVT-AV1: A Deep Dive\",\"permalink\":\"/blog/svt-av1-deep-dive\"}},\"content\":\"import { CarouselGenerator, TabbedCarouselGenerator } from '../src/utils/ImageCarousel.mdx';\\n\\n\\nSVT-AV1, the most scalable AV1 encoder, has received a new update and one may wonder if the old presets recommendation still holds today. We will delve into that in this blog post, based on a series of speed and visual quality benchmarks with SSIMULACRA2 and XPSNR of SVT-AV1 2.1.0 on a corpus of varied animated clips.\\n\\n\x3c!--truncate--\x3e\\n\\n## Feedback\\n\\nI unfortunately never got to update the previous blog post with the image comparisons, and some people expressed concerns that this testing may not be representative of live action content. For the former, I will have to ask for your patience again, because this blog post won't initially contain image comparisons either, but this time they are being actively worked on, along with a magnificent comparisons component and this page will get updated once that is done. As for the latter, please be reassured that this testing in its entirety is perfectly representative of any modern content people typically encode: the diversity of japanese animation is rich and the content specifically chosen for this benchmark is relatively complex. From 3DCG to extremely noisy clips, we are far from the easy-to-compress static scenes of some slice-of-life show.\\n\\nI have also decided to complement this benchmark of another psychovisually-driven metric (XPSNR) so that double-checking is made easier. Thus, each graph possesses a SSIMULACRA2 version and a XPSNR version. Don't hesitate to switch between one another!\\n\\n## Methodology\\n\\nThe resources available will range from ***graphs*** to ~~**image comparisons**~~ (WIP, for real this time). The ***former*** has the advantage of being easily understandable, showcasing pure efficiency comparisons between encoder parameters using metrics as the reference, while the **latter** are image samples from the files encoded during the tests that enable you to check quality for yourself, adding another layer of subjective interpretation to these comparisons.\\n\\n\x3c!--truncate--\x3e\\n\\nThe testing methodology involves using relatively short video samples from a wide range of modern anime genre, which have been either losslessly encoded with `x264 --qp 0` for ease of use or losslessly cut from their source. These lossless files are then pipped into SvtAv1EncApp *directly*, meaning we are measuring the performance of a single encoder instance and not leveraging chunked encoding like any actual final AV1 encoding pipeline should. Once an encode is done, SSIMULACRA2 scores are calculated using the [Zig implementation](https://github.com/dnjulek/vapoursynth-ssimulacra2), XPSNR scores on the other hand are calculated using a [ffmpeg filter](https://github.com/fraunhoferhhi/xpsnr), and lots of useful data are aggregated to make the graphs for this benchmark, including encoding time, encode size (bitrate), and metrics scores. Bits per pixel scores (BPP) are calculated so that the `Metric / BPP` graphs may represent the closest we have to real efficiency.\\n\\nThe clips used in this test were acquired legally. The Codec Wiki and its contributors do not endorse media piracy.\\n\\nSvtAv1EncApp was compiled directly from the [v2.0.0 and v2.1.0 source code](https://gitlab.com/AOMediaCodec/SVT-AV1/-/releases/) using the provided `Build/linux/build.sh` script, Clang 16.0.6, and Profile-Guided Optimization (PGO). The testing machine is comprised of an i3 12100 with 16GB of 3200MHz CL14 DDR4 RAM in Arch Linux with kernel 6.7.7 and the performance governor enabled. All encodes have been made in the same session without rebooting.\\n\\nThis testing was conducted within the [AV1 Weeb Edition](https://discord.gg/83dRFDFDp7) Discord server, which is focused on encoding animated content in AV1.\\n\\n## Samples\\n\\nThe samples are as follows:\\n- 11s `Blame!` clip which sports 3DCG action with lots of grain, effects and high-contrast elements.\\n- 13s `Blue Lock` clip which sports rapid camera movements, complex geometry and high-contrast elements.\\n- 5s `Spy x Family` first ending sequence with an extremely high amount of dynamic noise. New most complex source of this set.\\n- 12s `Jigokuraku (Hell's Paradise)` flashback clip with huge static grain in a very dark scenery and some action.\\n- 5s `The Garden of Sinners` clean but fast-paced 3DCG scene with explosions.\\n\\nThe resolution of every clip is 1080p, except for the first one which is 1920x804.\\n\\n> **All clips have been encoded in a wide quality range, from `--crf 6` to `--crf 46`, by increments of 4.**\\n\\nWithout further ado, let's start with the first comparisons!\\n\\n## Presets comparisons (-1 -> ~~13~~ 12)\\n\\n**In the following graphs, you may find comparisons between all SVT-AV1 presets, ranging from the slowest `--preset -1` to the fastest `--preset 12`.**\\n> Yes, you heard that right. Preset 7 and 13 are no more in __v2.1.0__. This new update, like the previous one, mostly consisted of optimizing the presets trade-offs. The devs have made the choice to map `preset 7` to `preset 6` and `preset 13` to `preset 12` due to the lack of spacing between the new presets. We will discuss the implications of this further ahead.\\n\\n`--preset X` is the only parameter used here, in conjunction with the CRF values. That means everything else is default. The defaults worth mentioning are: \\n- `--tune 1`: tune PSNR\\n- `--aq-mode 2`: variance deltaq\\n- `--enable-qm 0`: quantisation matrices disabled\\n- `--irefresh-type 2`: closed GOP\\n- `--enable-tf 1`: temporal filtering enabled\\n\\nAnd more, like CDEF and restoration enabled, overlays and film-grain disabled...\\n\\n### Efficiency\\n\\n- First of all, here are the full efficiency graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/full/SVT-1_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/full/SVT-1_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/full/SVT-1_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/full/SVT-1_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/full/SVT-1_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/full/SVT-1_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/full/SVT-1_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/full/SVT-1_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/full/SVT-1_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/full/SVT-1_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nThis is all very cool, but visually bloated.\\n\\n- Now the same graphs but focusing on the \\\"high quality\\\" range (CRF6 -> 22):\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/hq/SVT-1_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/hq/SVT-1_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/hq/SVT-1_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/hq/SVT-1_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/hq/SVT-1_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/hq/SVT-1_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/hq/SVT-1_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/hq/SVT-1_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/hq/SVT-1_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/hq/SVT-1_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Same, but now focusing on the \\\"low quality\\\" range (CRF26 -> 46):\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/lq/SVT-1_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/lq/SVT-1_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/lq/SVT-1_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/lq/SVT-1_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/lq/SVT-1_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/lq/SVT-1_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/lq/SVT-1_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/lq/SVT-1_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/lq/SVT-1_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/lq/SVT-1_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- If we now focus on __presets 4__ and below, where it's more difficult to discern the differences between presets, we get this at \\\"high quality\\\":\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/hq/SVT-1_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/hq/SVT-1_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/hq/SVT-1_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/hq/SVT-1_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/hq/SVT-1_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/hq/SVT-1_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/hq/SVT-1_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/hq/SVT-1_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/hq/SVT-1_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/hq/SVT-1_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- And the following at \\\"low quality\\\":\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/lq/SVT-1_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/lq/SVT-1_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/lq/SVT-1_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/lq/SVT-1_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/lq/SVT-1_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/lq/SVT-1_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/lq/SVT-1_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/lq/SVT-1_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/lq/SVT-1_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/mrto4/lq/SVT-1_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n### Speed\\n\\n- **Let's now see speed comparisons between all presets:**\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speed/SVT-1_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speed/SVT-1_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speed/SVT-1_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speed/SVT-1_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speed/SVT-1_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nOnce is not custom, __preset -1__ is so abysmally slow it makes the graph unusable.\\n\\n- Same, but without the placebo __preset -1__:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speednomr/SVT0_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speednomr/SVT0_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speednomr/SVT0_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speednomr/SVT0_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speednomr/SVT0_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Lastly, here is what it looks like with a logarithmic scale:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speedlog/SVT-1_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speedlog/SVT-1_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speedlog/SVT-1_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speedlog/SVT-1_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.1.0-only/allpresets/speedlog/SVT-1_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n### Interpretation\\n\\nAs for interpreting the results, it would seem like **preset 2** and **preset 4** remain all-around very balanced presets, with **preset 3** being in a nice in-between spot, an improvement over v2.0.0's **preset 3** in a way. We will better understand the reasons for this when we'll compare the new version to the last, a bit after.\\n\\nThe quality gap between **preset 2** and **preset 1** is usually pretty narrow, however the speed penalty from going to **preset 1** is ~2x, when the penalty of going from **preset 3** to **preset 2** is closer to ~1.5x. As such, **preset 1** enters placebo territory, and considering the very little benefits of going any lower than it, compared to the huge performance loss of even lower presets, I advise you not to waste encoding resources on **preset 0** and **preset -1**. This applies especially at medium to high quality, however at extremely low quality like the CRF40 range, we can still see some small gains from these placebo presets.\\n\\nWhen we start talking about faster presets though, things are pretty different from previous versions: **presets 5 to 9** behave similarly on the graphs and seem to stand apart from their slower counterparts by just a bit. If you can bear the speed of **preset 4**, you should definitely be going for it, however if fast encoding is a necessity, for example in the case of realtime transcoding or streaming, **presets 5 through 9** will serve you right with great efficiency/speed trade-offs between one another. No preset in that range particularly stands out from the others, so simply pick one depending on your performance needs.\\n\\n**Presets 10 to 12** are pretty inefficient, and to be avoided if possible. They can still be of use in a convex-hull scenario, but in the case of realtime transcoding, you may be better off with a hardware encoder like the ones found in RTX 4000 or Arc GPUs, especially since SVT-AV1's target bitrate mode is even less efficient than CRF mode.\\n\\n### TLDR\\n\\nThe same conclusions as the previous blog post can be made: \\n**clear quality gains can be observed as we decrease presets, until __preset 2__, however the effectiveness of dropping presets is noticeably less and less important as quality is increased.**\\n\\nIn the next part, we will evaluate the differences in efficiency and speed of every presets when updating from SVT-AV1 2.0.0 to 2.1.0, which should enable an increase of nuance from the previous results alone.\\n\\n## SVT-AV1 v2.0.0 vs v2.1.0 presets comparisons:\\n\\nTwo months ago, I conducted a similar test to this one to compare the presets evolution between versions __1.8.0__ and __2.0.0__. The results were pretty unsatisfying: I noticed that **presets -1 to 8** in __v2.0.0__ performed like the old **presets 0 to 9** did in __v1.8.0__. We basically saw an efficiency regression at a given preset, and speedups did not follow suit as well as we would have anticipated. All in all, it wasn't all that bad, it suffice to say you could simply drop a preset from before and you were good to go again. What was more concerning however is that the release note claimed important speedups that did not impact efficiency and my testing proved otherwise. My theory is that due to the dev team testing methodology, which consist of mostly pretty low resolution clips and non-psychovisual metrics like PSNR, SSIM or bad psychovisual metrics like VMAF, it's very well possible they were tricked into thinking they introduced improvements as they tweaked the presets when in reality the metrics simply didn't notice the quality degradation. Such issue is an additional reason why the industry should adopt more competent metrics, ones that better correlate with the human vision, to improve encoders in more impactful ways and better avoid pointless regressions. \\n\\nSo the question for today's testing is: have the SVT-AV1 devs redeemed themselves and actually improved the presets trade-offs this time around? Let's find out!\\n\\n### `preset -1`: v2.0.0 vs v2.1.0\\n\\n- **Let's start off with a battle of the placebos, with the efficiency at \\\"high quality\\\":**\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT-1_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT-1_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT-1_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT-1_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT-1_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT-1_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT-1_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT-1_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT-1_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT-1_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- And the efficiency at \\\"low quality\\\":\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT-1_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT-1_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT-1_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT-1_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT-1_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT-1_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT-1_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT-1_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT-1_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT-1_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nYes, this is a bit underwhelming, but you can't just improve the best an encoder has to offer with just tweaking right?\\n\\n- Now, let's compare their respective speeds:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT-1_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT-1_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT-1_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT-1_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT-1_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nLet's be grateful it became ever so slightly faster, I guess.\\n\\n### `preset 0`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT0_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT0_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT0_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT0_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT0_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT0_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT0_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT0_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT0_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT0_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT0_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT0_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT0_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT0_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT0_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT0_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT0_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT0_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT0_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT0_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nOverall, efficiency wise, this new **preset 0** places itself in-between old **preset -1** and **0**\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT0_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT0_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT0_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT0_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT0_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nInterestingly enough, its speed is much closer to the old **preset 0** than to the old **preset -1**. This means **preset 0** was genuinely improved over v2.0.0!\\n\\n### `preset 1`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT1_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT1_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT1_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT1_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT1_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT1_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT1_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT1_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT1_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT1_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT1_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT1_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT1_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT1_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT1_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT1_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT1_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT1_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT1_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT1_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nIn efficiency, this new **preset 1** is often equal to old **preset 0**, else in-between old **preset 0 and 1**.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT1_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT1_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT1_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT1_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT1_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nWe observe that the new preset is a bit closer to old **preset 1** speeds than it is to old **preset 0** speeds. Good news!\\n\\n### `preset 2`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT2_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT2_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT2_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT2_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT2_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT2_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT2_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT2_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT2_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT2_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT2_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT2_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT2_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT2_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT2_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT2_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT2_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT2_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT2_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT2_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nOh well, that's awkward.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT2_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT2_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT2_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT2_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT2_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nSpeed was left untouched too, meaning **preset 2** is unchanged in v2.1.0.\\n\\n### `preset 3`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT3_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT3_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT3_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT3_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT3_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT3_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT3_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT3_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT3_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT3_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT3_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT3_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT3_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT3_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT3_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT3_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT3_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT3_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT3_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT3_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nThe new **preset 3**'s efficiency is the same as the old one.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT3_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT3_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT3_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT3_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT3_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nHowever, the preset got slightly faster, so this is a speedup!\\n\\n### `preset 4`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT4_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT4_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT4_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT4_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT4_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT4_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT4_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT4_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT4_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT4_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT4_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT4_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT4_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT4_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT4_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT4_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT4_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT4_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT4_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT4_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nWe can observe that **preset 4** got slightly to moderately worse efficiency wise.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT4_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT4_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT4_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT4_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT4_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nFortunately, the consequence of that slight efficiency decrease is a big performance improvement!\\n\\n### `preset 5`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT5_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT5_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT5_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT5_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT5_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT5_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT5_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT5_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT5_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT5_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT5_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT5_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT5_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT5_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT5_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT5_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT5_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT5_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT5_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT5_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 5** seems to have gotten ever so slightly worse efficiency wise.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT5_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT5_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT5_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT5_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT5_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nYet it became slightly faster, this is overall a good trade-off.\\n\\n### `preset 6`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT6_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT6_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT6_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT6_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT6_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT6_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT6_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT6_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT6_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT6_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT6_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT6_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT6_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT6_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT6_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT6_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT6_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT6_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT6_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT6_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nThe new **preset 6** has a huge responsibility: being able to compensate in the absence of its **preset 7** sibling. It seems to performs in-between old **preset 6 and 7**, usually closer to old **7**.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT6_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT6_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT6_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT6_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT6_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 6** is now ever so slightly slower to old **7**, this is an interesting trade-off, overall a win over old **7**.\\n\\n### `preset 7`: v2.0.0 vs v2.1.0\\n\\nAgain, there is no preset 7. Actually, it's preset 6 that disappeared but I'm not remaking the graphs just for fun. If you select preset 6, you will be granted the following message: `Svt[warn]: Preset M6 is mapped to M7.`\\n\\n![always_has_been](/img/preset_7_meme.webp)\\n\\n### `preset 8`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT8_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT8_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT8_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT8_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT8_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT8_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT8_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT8_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT8_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT8_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT8_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT8_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT8_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT8_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT8_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT8_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT8_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT8_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT8_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT8_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nIn efficiency, this new **preset 8** is sometimes equal or slightly worse to the old **8**, and sometimes equal or slightly worse than old **7**...\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT8_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT8_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT8_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT8_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT8_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nOverall, the speed is pretty much unchanged from old **8**. It looks like a slight regression, that's pretty disappointing.\\n\\n### `preset 9`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT9_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT9_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT9_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT9_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT9_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT9_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT9_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT9_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT9_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT9_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT9_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT9_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT9_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT9_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT9_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT9_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT9_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT9_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT9_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT9_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nThe new **preset 9** is the same as ever, ever so slightly better in some scenario but nothing groundbreaking.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT9_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT9_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT9_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT9_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT9_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nIts speed remains the same, sometimes ever so slightly slower. Basically the preset is pretty much unchanged, which may as well be a relief, as the last usable preset of the encoder.\\n\\n### `preset 10`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT10_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT10_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT10_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT10_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT10_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT10_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT10_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT10_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT10_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT10_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT10_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT10_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT10_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT10_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT10_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT10_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT10_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT10_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT10_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT10_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 10** is slightly to moderately worse efficiency wise.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT10_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT10_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT10_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT10_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT10_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nIts speed is mostly the same, sometimes ever so slightly faster. It's a wash, avoid this preset at all costs!\\n\\n### `preset 11`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT11_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT11_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT11_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT11_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT11_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT11_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT11_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT11_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT11_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT11_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT11_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT11_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT11_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT11_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT11_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT11_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT11_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT11_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT11_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT11_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 11**'s efficiency is untouched.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT11_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT11_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT11_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT11_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT11_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n**Preset 11**'s speed is unchanged as well.\\n\\n### `preset 12`: v2.0.0 vs v2.1.0\\n\\n- Efficiency graphs, high quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT13_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT13_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT13_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT13_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT13_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT13_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT13_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT13_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT13_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/hq/SVT13_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Efficiency graphs, low quality:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'SSIMU2',\\n      component: <CarouselGenerator\\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT13_blame!_ssimu2.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT13_bluelock_ssimu2.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT13_jigokuraku-001_ssimu2.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT13_sxfed1_ssimu2.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT13_THE_GARDEN_OF_SINNERS_9_ssimu2.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n    xpsnr: {\\n      label: 'XPSNR',\\n      component: <CarouselGenerator \\n        imageData={[\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT13_blame!_xpsnr.webp',\\n            alt: 'Blame!.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT13_bluelock_xpsnr.webp',\\n            alt: 'BlueLock.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT13_jigokuraku-001_xpsnr.webp',\\n            alt: 'Jigokuraku.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT13_sxfed1_xpsnr.webp',\\n            alt: 'SpyxFamily.mkv Efficiency Graph',\\n          },\\n          {\\n            src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/lq/SVT13_THE_GARDEN_OF_SINNERS_9_xpsnr.webp',\\n            alt: 'TheGardenOfSinners.mkv Efficiency Graph',\\n          },\\n        ]}\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nJust as **preset 6**, **preset 12** is now mapped to **13**, and unsurprisingly, its efficiency is equal to old **13**.\\n\\n- Speed graphs:\\n\\n<TabbedCarouselGenerator\\n  tabMap={{\\n    ssimu2: {\\n      label: 'Speed',\\n      component: <CarouselGenerator\\n        imageData={\\n          [\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT13_blame!_speed.webp',\\n              alt: 'Blame!.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT13_bluelock_speed.webp',\\n              alt: 'BlueLock.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT13_jigokuraku-001_speed.webp',\\n              alt: 'Jigokuraku.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT13_sxfed1_speed.webp',\\n              alt: 'SpyxFamily.mkv Speed Graph',\\n            },\\n            {\\n              src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-2.1.0-blogpost/2.0.0vs2.1.0/speed/SVT13_THE_GARDEN_OF_SINNERS_9_speed.webp',\\n              alt: 'TheGardenOfSinners.mkv Speed Graph',\\n            },\\n          ]\\n        }\\n      />\\n    },\\n  }}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nThe speeds seem to be in-between old 12 and 13, so potentially a slight speedup. Still, nothing to get excited at.\\n\\n### TLDR\\n\\nFrom these extensive comparisons, it appears that some presets have received genuine improvements in their respective efficiency/speed trade-off.\\nSome presets, like **-1**, **0**, **1** and **3**, received the most significant improvements, followed by **4**, **5** and **6** with overall beneficial new trade-offs. **Preset 12** got slightly faster too. On the other hand, **presets 8 and 10** seemed to have regressed slightly, and **presets 2 and 9** are perfectly unchanged from v2.0.0.\\n\\n## Conclusion\\n\\nSVT-AV1 2.1.0 introduced some welcomed improvements. **Presets 2 through 4** remain the king of optimal AV1 encoding, while **presets 5 through 9** stand as good options for the people that find **2-4** to be too slow for their liking.\\n\\nLet's be honest a second, not much as changed in SVT-AV1 since the first blog post. There was no need to redo all the parameter testing for the simple reason that their behavior remained the same, as did the conclusions drawn from them. I hope this article wasn't disappointing in a sense... Still, be reassured, this was just an appetizer, there will be more in the near future!\\n\\nBy the way, did you know that the **[SVT-AV1-PSY project](https://github.com/gianni-rosato/svt-av1-psy/)** was initiated a few months ago? Its defaults were tailored according to the testing done in the last blog post, allowing a free efficiency boost for anyone not keen to tweak their encoders. Furthermore, SVT-AV1-PSY introduced a sharpness parameter to control distortion, a quarter-step quantizer for more CRF precision, a new subjective SSIM tune, Dolby Vision support, frame luma bias, and some other knobs to improve the appeal and consistency of your encodes. It is actively maintained by a group of talented people, including the main dev of the aom-av1-lavish fork of aomenc. Some of the changes are being backported to mainline SVT-AV1 due to the increased interest of the mainline devs. Please check it out!\\n\\nHopefully, this comprehensive second deep dive should give you a helpful new starting point for choosing settings when encoding with the latest SVT-AV1(-PSY) 2.1.0.\\n\\n## Future\\n\\nMy plans for the future regarding the blog post include:\\n- polishing this blog post and aggrementing it of image comparisons.\\n- a follow-up article in the relatively near future about giving you encoding tips and explaining common AV1 encoding knowlegde, for instance showcasing why film grain synthesis is a game-changer or why chunked encoding can prove beneficial to your encoding pipeline.\\n- an article focused on observing the evolution of SVT-AV1 since the beginning of its development, as well as comparisons with current aomenc, rav1e and SVT-AV1-PSY, including a quick look at the current state of AVM (development ground for AV2) in comparison to VVC's state.\\n\\nThanks for reading!\\n\\n{}\"},{\"id\":\"svt-av1-deep-dive\",\"metadata\":{\"permalink\":\"/blog/svt-av1-deep-dive\",\"source\":\"@site/blog/2023-12-30-svt-av1-deep-dive.mdx\",\"title\":\"Encoding Animation with SVT-AV1: A Deep Dive\",\"description\":\"With the recent release of SVT-AV1 1.8.0, how does it stack up for encoding animation?\",\"date\":\"2023-12-30T00:00:00.000Z\",\"tags\":[{\"inline\":true,\"label\":\"video\",\"permalink\":\"/blog/tags/video\"},{\"inline\":true,\"label\":\"compression\",\"permalink\":\"/blog/tags/compression\"},{\"inline\":true,\"label\":\"benchmarks\",\"permalink\":\"/blog/tags/benchmarks\"}],\"readingTime\":22.78,\"hasTruncateMarker\":true,\"authors\":[{\"name\":\"Trix\",\"title\":\"Encoder\",\"url\":\"https://github.com/trixoniisama/\",\"image_url\":\"https://avatars.githubusercontent.com/u/93526043\",\"imageURL\":\"https://avatars.githubusercontent.com/u/93526043\",\"socials\":{},\"key\":null,\"page\":null}],\"frontMatter\":{\"title\":\"Encoding Animation with SVT-AV1: A Deep Dive\",\"description\":\"With the recent release of SVT-AV1 1.8.0, how does it stack up for encoding animation?\",\"slug\":\"svt-av1-deep-dive\",\"authors\":[{\"name\":\"Trix\",\"title\":\"Encoder\",\"url\":\"https://github.com/trixoniisama/\",\"image_url\":\"https://avatars.githubusercontent.com/u/93526043\",\"imageURL\":\"https://avatars.githubusercontent.com/u/93526043\"}],\"tags\":[\"video\",\"compression\",\"benchmarks\"],\"image\":\"/img/svt-1.8.0-testing-blog-image.webp\",\"hide_table_of_contents\":false},\"unlisted\":false,\"prevItem\":{\"title\":\"Observing SVT-AV1 v2.1.0's improvements: A New Deep Dive\",\"permalink\":\"/blog/svt-av1-second-deep-dive\"},\"nextItem\":{\"title\":\"Embedding the Un-Embeddable\",\"permalink\":\"/blog/embedding-the-un-embeddable\"}},\"content\":\"import { CarouselGenerator } from '../src/utils/ImageCarousel.mdx';\\n\\n\\nThis blog post is based on a series of visual quality benchmarks with SSIMULACRA2 and speed benchmarks of SVT-AV1 1.8.0 on a corpus of animated clips.\\n\\nThe resources available will range from ***graphs*** to ~~**image comparisons**~~ (WIP). The ***former*** has the advantage of being easily understandable, showcasing pure efficiency comparisons between encoder parameters using metrics as the reference, while the **latter** are image samples from the encoded files during the tests that enable you to check quality for yourself and add another layer of subjective interpretation to these comparisons.\\n\\n\x3c!--truncate--\x3e\\n\\nThe testing methodology involves using relatively short video samples from a wide range of modern anime genre, which have been either losslessly encoded with `x264 --qp 0` for ease of use or losslessly cut from their source. These lossless files are then pipped into SvtAv1EncApp *directly*, meaning we are measuring the performance of a single encoder instance and not leveraging chunked encoding like any actual final AV1 encoding pipeline should. Once an encode is done, SSIMULACRA2 scores are calculated using the [Zig implementation](https://github.com/dnjulek/vapoursynth-ssimulacra2) and lots of useful data are aggregated to make the graphs for this benchmark, including encoding time, encode size (bitrate), and SSIMULACRA2 scores. Bits per pixel scores (BPP) are calculated so that the `Metric / BPP` graphs may represent the closest we have to real efficiency.\\n\\nThe clips used in this test were acquired legally. The Codec Wiki and its contributors do not endorse media piracy.\\n\\nSvtAv1EncApp was compiled directly from the [v1.8.0 source code](https://gitlab.com/AOMediaCodec/SVT-AV1/-/releases/v1.8.0) using the provided `Build/linux/build.sh` script, Clang 16.0.6, and Profile-Guided Optimization (PGO). The testing machine is comprised of an i7 8750H running at 35W with 16GB of 2666MHz DDR4 RAM in Arch Linux with kernel 6.6.6 and the performance governor enabled. All encodes have been made in the same session without rebooting.\\n\\nThis testing was conducted within the [AV1 Weeb Edition](https://discord.gg/83dRFDFDp7) Discord server, which is focused on encoding animated content in AV1.\\n\\n## Samples\\n\\nThe samples are as follows:\\n- 11s `Blame!` clip which sports 3DCG action with lots of grain, effects and high-contrast elements. Most complex source of this set.\\n- 13s `Blue Lock` clip which sports rapid camera movements and rotations + high-contrast elements.\\n- 15s `Fate/Grand Order: Babylonia` relatively slow-paced clip with lots of effects still. Easiest source of this set but easy sources still give interesting data.\\n- 22s `Jigokuraku (Hell's Paradise)` flashback clip with huge static grain in a very dark scenery and some action.\\n- 14s `Kaguya-sama` opening sequence with lots of effects and fast change of scenery.\\nThe resolution of every clip is 1080p, except for the first one which is 1920x804.\\n\\n> **All clips have been encoded in a wide quality range, from `--crf 8` to `--crf 43`.**\\n\\nWithout further ado, let's start with the first comparisons!\\n\\n## Presets comparisons (-1 -> 13)\\n\\n**In the following graphs, you may find comparisons between all SVT-AV1 presets, ranging from the slowest `--preset -1` to the fastest `--preset 13`.**\\n*Please remember that these two extreme presets are meant for development purposes and as such should not be used in normal encoding conditions. You will soon understand why.*\\n\\n`--preset X` is the only parameter used here, in conjunction with the CRF values. That means everything else is default. The defaults worth mentioning are: \\n- `--tune 1`: tune PSNR\\n- `--aq-mode 2`: variance deltaq\\n- `--enable-qm 0`: quantisation matrices disabled\\n- `--irefresh-type 2`: closed GOP\\n- `--enable-tf 1`: temporal filtering enabled\\nAnd more, like CDEF and restoration enabled, overlays and film-grain disabled...\\n\\n- First of all, here are the efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={[\\n    {\\n      src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-graphs/SVT4_blame.webp',\\n      alt: 'Blame!.h264 Efficiency Graph',\\n    },\\n    {\\n      src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-graphs/SVT4_bluelock.webp',\\n      alt: 'BlueLock.h264 Efficiency Graph',\\n    },\\n    {\\n      src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-graphs/SVT4_fate.webp',\\n      alt: 'Fate.h264 Efficiency Graph',\\n    },\\n    {\\n      src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-graphs/SVT4_jigokuraku.webp',\\n      alt: 'Jigokuraku.h264 Efficiency Graph',\\n    },\\n    {\\n      src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-graphs/SVT4_kaguya.webp',\\n      alt: 'Kaguya.h264 Efficiency Graph',\\n    },\\n  ]}\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nThis could be too much information.\\n\\n- Now the same graphs but focusing on the \\\"high quality\\\" range (CRF8 -> 23):\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-highq/SVT4_blame.webp',\\n        alt: 'blame High Quality Efficiency Graph',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-highq/SVT4_bluelock.webp',\\n        alt: 'bluelock High Quality Efficiency Graph',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-highq/SVT4_fate.webp',\\n        alt: 'fate High Quality Efficiency Graph',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-highq/SVT4_jigokuraku.webp',\\n        alt: 'jigokuraku High Quality Efficiency Graph',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-highq/SVT4_kaguya.webp',\\n        alt: 'kaguya High Quality Efficiency Graph',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Same again but without presets 9 to 13 for better clarity:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-highq-slow/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-highq-slow/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-highq-slow/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-highq-slow/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-highq-slow/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Now for the \\\"low quality\\\" range (CRF28 -> 43):\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-lowq/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-lowq/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-lowq/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-lowq/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-lowq/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Same but without presets 9 to 13 for better clarity:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-lowq-slow/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-lowq-slow/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-lowq-slow/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-lowq-slow/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/svt-efficiency-lowq-slow/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- **Let's now see speed comparisons between all presets:**\\n\\n![speed_overall](https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed_overall.webp)\\n\\nAs we can see, preset -1 is so abysmally slow it makes the graph unusable\\n(BTW, notice the `1e6` in the lower right corner, it is obviously not encoding at 1 to 4 ms, but at 1 000 000 to 4 000 000 ms)\\n\\n- Here is what it looks like with a logarithmic scale:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-log-bpp/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-log-bpp/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-log-bpp/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-log-bpp/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-log-bpp/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- **Now the speed graphs but with SSIMU2 on the y-axis instead of BPP: (logarithmic scale)**\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-log-ssimu2/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-log-ssimu2/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-log-ssimu2/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-log-ssimu2/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-log-ssimu2/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Here are speeds graphs for preset 1 to 6 with a linear scale:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-linear-bpp/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-linear-bpp/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-linear-bpp/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-linear-bpp/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/speed-linear-bpp/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\nOne interpretation we can have is that **presets 2 to 4** have actually pretty close scores (pretty much the same at HQ, 2 points at max in the low quality range) but **preset 2** is **2x slower than preset 4**. The quality gap between **preset 2** and **preset 1** is even narrower but the speed penalty is also ~2x.\\n\\nThat makes it hard to recommend **preset 1**, while **preset 3** is in a strange middle ground between **2** and **4** where it makes little sense to choose it over those two: it's better to choose **preset 2** for the higher efficiency at 1.5x slower speeds, or **preset 4** for the 1.33 to 1.5x higher speeds. At least the option exists.\\n\\nA similar observation can be made between **preset 5** and **6**. They can be so close in scores in many samples (especially at HQ) while also being close in speeds that **preset 5** becomes rather obsolete most of the time.\\n\\n### TLDR\\n\\n**Clear quality gains can be observed as we decrease presets, until the very last one, however the effectiveness of dropping presets becomes less and less impressive the higher in quality you go.**\\n\\n- For instance, in worst-case scenario, we observe that (for the CRF23 to CRF8 range), __**preset 4**__ only loses at maximum **2** SSIMU2 **points** compared to __**preset -1**__ while being 50-60x faster. Though to be fair, the speed loss from __**preset 4**__ to __**preset 0**__ is \\\"only\\\" 5-10x for a maximum SSIMU2 difference close to **1.5 point**.\\n\\n- From CRF43 to CRF28, the difference between __**preset 4**__ and __**preset -1**__ can be as much as **5** SSIMU2 **points**, so lower presets become more attractive.\\n\\n## Tunes comparisons\\n\\n**In the following graphs, you may find comparisons between SVT-AV1 tunes, from the default `--tune 1` (PSNR) to the other two tunes:  `--tune 0` (VQ) and `--tune 2` (SSIM).**\\n\\nExcept for the tunes, `--preset 4` is set due to its good balance of quality and speed, in conjunction with the CRF values. That means everything else is default. The defaults have been mentioned earlier above.\\n\\n- **Let's compare the efficiency of every tunes:**\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Now let's focus on the \\\"high quality\\\" range (CRF8 -> 23):\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency-highq/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency-highq/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency-highq/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency-highq/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency-highq/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- And the \\\"low quality\\\" range (CRF28 -> 43):\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency-lowq/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency-lowq/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency-lowq/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency-lowq/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-efficiency-lowq/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- And here is the speed difference:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tunes-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Graphs comparing the tunes individually between each others will be made available soon.\\n- The image comparisons will make the conclusion quite more nuanced, stay tuned (heheh) for that.\\n\\n### TLDR\\n\\n**SSIMU2 favors __tune 1 and 2__ above __tune 0__. At high quality, __tune 1 and 2__ are matched, while at low quality __tune 2__ takes the edge. __Tune 0__ is sometimes a match for the other two on certain clips and other times fare pretty badly.**\\n**For some reason, __tune 0__ is quite a bit faster now, compared to 1 and 2 which are basically the same.**\\n\\nKeep in mind that I have observed multiple times in the past that __tune 0__ kept more fine detail and was sharper than the other tunes, at the expense of potential artifacting, like ringing and distortion. It may very well explain why the metric doesn't like its results. The image comparisons may give a different interpretation than what we concluded here, please stay *tuned* for these subjective comparisons.\\n\\n## Parameters comparisons\\n\\n**In the following graphs, you may find comparisons between many SVT-AV1 parameters.**\\n*Additional graphs focusing on the high and low qualities will be made available later down the line*\\n\\n`--preset 4` is used here due to its good balance of quality and speed, in conjunction with the CRF values. That means everything else is default. The defaults have been mentioned earlier above.\\n\\n### `--tile-rows 1 --tile-columns 1` vs default `--tile-rows 0 --tile-columns 0`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tile-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tile-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tile-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tile-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tile-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tile-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tile-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tile-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tile-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tile-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> __tiles__ here are both slightly harmful and slower.\\n\\n### `--aq-mode 0` vs default `--aq-mode 2`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> Except for the Jigokuraku clip, __aq-mode 0__ is harmful in the eyes of SSIMU2, while being slower at low CRF levels, and sometimes a match or faster at high CRF levels.\\n\\n### `--aq-mode 1` vs default `--aq-mode 2`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode1-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode1-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode1-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode1-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode1-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode1-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode1-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode1-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode1-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/aq-mode1-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> __aq-mode 1__ fares closer to __aq-mode 2__ than __aq-mode 0__ did, both in quality and speed, but is still overall inferior according to SSIMU2\\n\\n### `--enable-cdef 0` vs default `--enable-cdef 1`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/cdef-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/cdef-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/cdef-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/cdef-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/cdef-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/cdef-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/cdef-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/cdef-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/cdef-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/cdef-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> According to SSIMU2, disabling CDEF barely impact efficiency. But as its a pretty demanding tool, there's a slight speed benefit of having it disabled too. I advise you to take these results with a grain of salt until the image comparisons, because in anime particularly, CDEF *can* be beneficial for the line-art.\\n\\n### `--enable-dg 0` vs default `--enable-dg 1`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dg-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dg-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dg-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dg-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dg-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dg-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dg-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dg-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dg-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dg-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> __Dynamic GoP control__ yields bit-perfect results in all clips except for Blue Lock and Jigokuraku. There is no speed benefit to disabling it except in clips where it is in use. Let's not jump to conclusions too easily, the image comparisons will tell if it's \\\"safe\\\" to keep the setting disabled at all times or not.\\n\\n### `--enable-dlf 0` vs default `--enable-dlf 1`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dlf-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dlf-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dlf-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dlf-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dlf-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dlf-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dlf-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dlf-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dlf-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/dlf-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> __Deblocking loop filter__ can be slightly beneficial in some scenarios. In reverse, it is never harmful, so it is recommended to keep it default.\\n\\n### `--fast-decode 1` vs default `--fast-decode 0`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/fast-decode-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/fast-decode-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/fast-decode-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/fast-decode-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/fast-decode-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/fast-decode-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/fast-decode-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/fast-decode-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/fast-decode-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/fast-decode-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> __fast-decode 1__ is pretty harmful in the Fate clip and slightly harmful in the rest. There is a speed benefit of enabling it though.\\n\\n### `--irefresh-type 1` vs default `--irefresh-type 2`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/irefresh-type1-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/irefresh-type1-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/irefresh-type1-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/irefresh-type1-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/irefresh-type1-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/irefresh-type1-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/irefresh-type1-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/irefresh-type1-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/irefresh-type1-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/irefresh-type1-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> Finally something interesting to analyse!\\n- __irefresh-type 1__ is either a match or beneficial compared to __irefresh-type 2__ at high CRF levels.\\n- __irefresh-type 1__ either wins or lose to __irefresh-type 2__ at low CRF levels depending on the clip. As such, it is NOT recommended to blindly set __irefresh-type__ to __1__ at \\\"high quality\\\" as it might be harmful depending on the content.\\n- __irefresh-type 1__ is always slower compared to __irefresh-type 2__, so I might argue it is more safe to leave __irefresh-type__ default at \\\"high quality\\\" than not.\\n- According to the content type of those clips, it appears that __irefresh-type 1__ may benefit *extremely grainy* content while default __irefresh-type 2__ is better suited for *cleanish* content. This needs to be confirmed with *moar* testing though.\\n\\n### `--lookahead 0` vs default `--lookahead -1` (auto)\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n### `--lookahead 60` vs default `--lookahead -1` (auto)\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead60-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead60-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead60-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead60-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead60-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead60-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead60-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead60-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead60-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead60-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n### `--lookahead 120` (max) vs default `--lookahead -1` (auto)\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead120-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame'\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead120-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock'\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead120-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate'\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead120-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku'\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead120-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya'\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead120-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead120-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead120-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead120-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/lookahead120-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> __lookahead__ seems to behave strangely when set...\\n- __lookahead 0__ shifts quality around a lot and it is difficult to draw conclusions but there's a clear speed drawback of disabling lookahead.\\n- __lookahead 60__ is perfectly bit-perfect to every clips EXCEPT for some damn reason in Jigokuraku at CRF23\\n- __lookahead 120__ is somehow also bit-perfect, but this time in every clips and every CRF levels. Both 60 and 120 don't see much speed differences.\\n> Soooo.... this behavior is so odd I don't advise to set any lookahead value. Let the encoder decide.\\n\\n### `--enable-overlays 1` vs default `--enable-overlays 0`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/overlays-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/overlays-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/overlays-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/overlays-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/overlays-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/overlays-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/overlays-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/overlays-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/overlays-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/overlays-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> __overlays__ do not seem to either improve efficiency or performance.\\n\\n### `--enable-qm 1` vs default `--enable-qm 0`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> Enabling __quantization matrices__ alone increase efficiency at \\\"high quality\\\" with no real speed impact.\\n\\n### `--enable-qm 1 --qm-min 0` vs `--enable-qm 1`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-min-efficiency/SVT4_qm1_blame.webp',\\n        alt: 'SVT4_qm1_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-min-efficiency/SVT4_qm1_bluelock.webp',\\n        alt: 'SVT4_qm1_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-min-efficiency/SVT4_qm1_fate.webp',\\n        alt: 'SVT4_qm1_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-min-efficiency/SVT4_qm1_jigokuraku.webp',\\n        alt: 'SVT4_qm1_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-min-efficiency/SVT4_qm1_kaguya.webp',\\n        alt: 'SVT4_qm1_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-min-speed/SVT4_qm1_blame.webp',\\n        alt: 'SVT4_qm1_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-min-speed/SVT4_qm1_bluelock.webp',\\n        alt: 'SVT4_qm1_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-min-speed/SVT4_qm1_fate.webp',\\n        alt: 'SVT4_qm1_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-min-speed/SVT4_qm1_jigokuraku.webp',\\n        alt: 'SVT4_qm1_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/qm-min-speed/SVT4_qm1_kaguya.webp',\\n        alt: 'SVT4_qm1_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> Setting __qm-min__ to __0__ on top of enabling __quantization matrices__ can be beneficial in some clips at no added compute time.\\n\\nI will re-tests many QMs ranges in the future, but I doubt it changed much from v1.7.0 where 0 was the most appropriate choice for most content.\\n\\n### `--enable-restoration 0` vs default `--enable-restoration 1`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/restoration-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/restoration-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/restoration-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/restoration-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/restoration-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/restoration-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/restoration-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/restoration-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/restoration-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/restoration-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> Even though the efficiencies are very similar, nothing is bit-perfect here. So according to SSIMU2, the __loop restoration filter__ isn't necessarily useful. However, just like CDEF, it's a pretty demanding tool, so disabling it yields some performance improvements. Let's take these with a grain of salt until the image comparisons.\\n\\n### `--scm 0` vs default `--scm 2` (content adaptive)\\n\\nIn all the clips, the results are bit-perfect and there is no notable performance difference.\\n\\n### `--scm 1` vs default `--scm 2` (content adaptive)\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/scm1-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/scm1-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/scm1-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/scm1-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/scm1-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/scm1-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/scm1-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/scm1-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/scm1-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/scm1-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> Interestingly enough, __screen content tools__ seem to improve efficiency according to SSIMU2, at the cost of a huge performance regression. After the image comparisons are published, I will conduct additional testing on this.\\n\\n### `--enable-tf 0` vs default `--enable-tf 1`\\n\\n- Efficiency graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tf-efficiency/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tf-efficiency/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tf-efficiency/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tf-efficiency/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tf-efficiency/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n- Speed graphs:\\n\\n<CarouselGenerator\\n  imageData={\\n    [\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tf-speed/SVT4_blame.webp',\\n        alt: 'SVT4_blame',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tf-speed/SVT4_bluelock.webp',\\n        alt: 'SVT4_bluelock',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tf-speed/SVT4_fate.webp',\\n        alt: 'SVT4_fate',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tf-speed/SVT4_jigokuraku.webp',\\n        alt: 'SVT4_jigokuraku',\\n      },\\n      {\\n        src: 'https://raw.githubusercontent.com/av1-community-contributors/images/main/svt-trix-blogpost/tf-speed/SVT4_kaguya.webp',\\n        alt: 'SVT4_kaguya',\\n      },\\n    ]\\n  }\\n  pixelsAbove={0}\\n  pixelsBelow={24}\\n/>\\n\\n> Disabled __temporal filtering__ *can* sometimes improve efficiency slightly at \\\"high quality\\\", however it is very much clip dependent. It also improves performance slightly. The image comparisons will give another perspective to these results.\\n\\n### `--enable-tpl-la 0` vs default `--enable-tpl-la 1`\\n\\nIn all the clips, the results are bit-perfect and there is no notable performance difference.\\n\\n### `superres`:\\n\\nKinda lazy to make, share and comment so much graphs for something that can be told in two lines...\\n\\nAll superres variants are freaking useless as they:\\n- do not improve efficiency\\n- decrease encoding speeds\\n- decrease decoding speeds when either bitrate or quality normalized.\\n\\n### __Early TLDR on parameters results:__\\n\\n***For a previous test with SVT-AV1 1.7.0 I did all parameters tests with `--preset 6 --tune 2`, now I did them with `--preset 4 --tune 1`. Mostly everything tested on v1.7.0 still stands today, but now we have more valuable data. Images comparisons are still needed to give more context to some results, so the conclusion presented here remains early as they are 100% based on SSIMU2 results and will require more analysis down the line.***\\n\\n**Here is a quick run down of how each parameter affect encoding:**\\n- `--tile-rows --tile-columns` should never be used (except for decreasing decode complexity)\\n- `--aq-mode 2` is the most efficient / fastest\\n- `--enable-cdef 0` *might* improve performance at almost no efficiency loss *(needs more thorough testing)*\\n- `--enable-dg` and `--enable-dlf` barely do anything\\n- `--fast-decode 1` decreases efficiency, improves encoding times, and the decoding gains still need to be determined.\\n- `--irefresh-type` should be kept default at high CRF values and for cleanish content at low CRF values, but can be set to 1 at low CRF values for extremely grainy content\\n- `--lookahead` should be kept default\\n- `--enable-overlays 1` does not improve efficiency, slight speed regression as well\\n- `--enable-qm 1 --qm-min 0` should be set for increased efficiency especially at low CRF values at no perf cost\\n- `--enable-restoration` barely does anything but disabling yields better performance *(needs visual confirmation)*\\n- `--scm 1` screen content tools can improve efficiency with a big performance trade-off *(needs more thorough testing)*\\n- `--enable-tf 0` is a mixed bag efficiency wise but improves performance\\n- `superres & resize` please don't.\\n\\n## Conclusion\\n\\nThe extensive benchmarking reveals that obviously the slower presets provide better efficiency, with diminishing returns past preset 2. However, preset 4 provides a good balance of quality and speed for most use cases. Presets 6 and 8 are good options for the people that find 4 to be too slow for their liking.\\n\\nThe default settings tend to provide good results, but some tweaks like enabling quantization matrices can further optimize efficiency. Parameters like tile encoding and super resolution modes are not beneficial. Overall, SVT-AV1 continues to be a competitive option for encoding animation in AV1, with its speed being a notable strength.\\n\\nFurther testing with more content samples would help solidify these findings. The image comparisons will also provide additional subjective evaluation to complement the objective metrics used here, and we can discover the potential usefulness of Tune 0 that may betray what the metrics suggest. Overall, this comprehensive deep dive should give encoders a helpful starting point for choosing settings when encoding animation with the latest SVT-AV1 1.8.0. Thanks for reading!\\n\\n{}\"},{\"id\":\"embedding-the-un-embeddable\",\"metadata\":{\"permalink\":\"/blog/embedding-the-un-embeddable\",\"source\":\"@site/blog/2023-10-29-embedding-the-un-embeddable copy.mdx\",\"title\":\"Embedding the Un-Embeddable\",\"description\":\"Revealing the secrets of those websites that allow you to embed entire movies, AV1, and videos over 500MB on Discord.\",\"date\":\"2023-10-29T00:00:00.000Z\",\"tags\":[{\"inline\":true,\"label\":\"video\",\"permalink\":\"/blog/tags/video\"},{\"inline\":true,\"label\":\"discord\",\"permalink\":\"/blog/tags/discord\"}],\"readingTime\":8.92,\"hasTruncateMarker\":true,\"authors\":[{\"name\":\"Simulping\",\"title\":\"Maintainer / Encoder\",\"url\":\"https://github.com/Simulping\",\"image_url\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"socials\":{},\"key\":null,\"page\":null}],\"frontMatter\":{\"title\":\"Embedding the Un-Embeddable\",\"description\":\"Revealing the secrets of those websites that allow you to embed entire movies, AV1, and videos over 500MB on Discord.\",\"slug\":\"embedding-the-un-embeddable\",\"authors\":[{\"name\":\"Simulping\",\"title\":\"Maintainer / Encoder\",\"url\":\"https://github.com/Simulping\",\"image_url\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/12994794?v=4\"}],\"tags\":[\"video\",\"discord\"],\"image\":\"/img/discord-embed-blog-image.webp\",\"hide_table_of_contents\":false},\"unlisted\":false,\"prevItem\":{\"title\":\"Encoding Animation with SVT-AV1: A Deep Dive\",\"permalink\":\"/blog/svt-av1-deep-dive\"},\"nextItem\":{\"title\":\"AV1 Encoding for Dummies\",\"permalink\":\"/blog/av1-encoding-for-dummies\"}},\"content\":\"![Feature image](/img/discord-embed-blog-image.webp)\\n**A 567.14 MB, 12 min 11 s, 2K (2,048 x 858), VP9 + Opus, 6.51 Mbps average, Blender short film \\\"Cosmos Laundromat\\\"**\\n\\n\\n## A Scenario\\n\\nWhile chatting in your favorite Discord servers & group chats, you may see a friend send a weird link. You might even consider it suspicious on first glance. It is a video featuring an image of a movie poster with a play button that is almost begging to be clicked. Naturally, you click it.\\n\\n\x3c!--truncate--\x3e\\n\\nIt loads for a second, and to your surprise it is a full-length, 90-minute (sometimes even two hour)-long unauthorized copy of a movie. If you don't know exactly what is going on, you probably sit there dumbfounded as a pixel perfect HD movie plays back. You may have expected a stereotypically muddy, blocky, laggy shitpost, but this has defied your expectations.\\n\\n![stolen.shoes](/img/stolenshoes-puss.webp)\\n\\nThe truth is, there are *multiple* site that do this. Currently, there are five at the time of writing. Below is a list the ones I am currently familiar with:\\n\\n- https://stolen.shoes\\n- https://discord.nfp.is\\n- https://embeds.video\\n- https://x266.mov/discord-embed\\n- https://autocompressor.net/av1\\n\\nThe big question is, **how do they work?** Let's get to dissecting.\\n\\n## But First, a Quick Disclosure\\n\\nThe Codec Wiki unequivocally condemns any form of piracy, including the unauthorized distribution of copyrighted content. This blog post is intended to educate & inform. You may not use the tools discussed to infringe upon the intellectual property rights of content creators without serious legal risk. We encourage our readers to respect copyright laws & use the tools we discuss here appropriately.\\n\\n## How it Works\\n\\nThe entire scheme is actually very simple, as it is all just HTML meta tags (If you are familiar with web development, this is all a walk in the park).\\n\\nThe technology's inner working can be divided into two distinct parts. First, let's see how it works on the website's end.\\n\\n### The Website's End\\nIf you view each website's source, you will find this specific line in each one but they may have a different order:\\n\\n```html\\n<meta property=\\\"og:image\\\" content=\\\"https://example.com/i/someimageforthumbnail.jpg\\\">\\n<meta property=\\\"og:type\\\" content=\\\"video.other\\\">\\n<meta property=\\\"og:video:url\\\" content=\\\"https://example.com/v/video.mp4\\\">\\n<meta property=\\\"og:video:width\\\" content=\\\"1920\\\">\\n<meta property=\\\"og:video:height\\\" content=\\\"1080\\\">\\n```\\n\\nThese are the `head` parts of HTML, which dictate metadata for the document itself such as what the website title/name is, cosmetic embed, defining the site's icon, etc. They are usually found in between the `<html>` and `<body>` tags. Here's an example of a static HTML site serving one specific video:\\n```html\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <link rel=\\\"shortcut icon\\\" type=\\\"image/x-icon\\\" href=\\\"../favicon.ico\\\"/>\\n  <title>some embed site</title>\\n  <meta property=\\\"og:image\\\" content=\\\"https://www.themoviedb.org/t/p/original/3U0vksjSY9LWe3Dqfr6xkgd3iQP.jpg\\\">\\n  <meta property=\\\"og:type\\\" content=\\\"video.other\\\">\\n  <meta property=\\\"og:video:url\\\" content=\\\"https://upload.wikimedia.org/wikipedia/commons/3/36/Cosmos_Laundromat_-_First_Cycle_-_Official_Blender_Foundation_release.webm\\\">\\n  <meta property=\\\"og:video:width\\\" content=\\\"2048\\\">\\n  <meta property=\\\"og:video:height\\\" content=\\\"858\\\">\\n</head>\\n<body>\\n  <h1>Hi</h1>\\n  <p>Just your friendly neighborhood video embed site</p>\\n  </body>\\n</html>\\n```\\n\\n< br />\\nThese interactive sites usually deploy a live script, like a Javascript framework. Examples are NodeJS, ExpressJS, Svelte, etc. These are used to parse video and thumbnails realtime so they can be embedded on Discord (or potentially other platforms).\\n\\n### Discord's End\\n\\nTraditionally, Discord's media embedder will impose it's own video embed size limit (50 MiB) when a user sends a direct video link as usual. But in this case Discord will embed the thumbnail first, not the video. You could say the link \\\"tricks\\\" Discord by showing a \\\"false face\\\" first.\\n\\n\\n\\n## Strengths & Limitations\\n\\nAfter a combination of countless hours of observation, rigorous testing throughout the period of a year, and conversations with the sites' creators, the current strengths & limitations of this exploit are enumerated below.\\n\\n#### Strengths\\n\\n- You can embed non-web compatible codecs such as [HEVC](https://wiki.x266.mov/docs/video/HEVC) in [MP4/MOV](https://wiki.x266.mov/docs/introduction/terminology#mp4--m4v), but the user must be using a compatible browser. [Thorium](https://thorium.rocks) or Safari version 13 or greater will work for HEVC playback.\\n- There is no maximum size. You could embed a video the size of a raw Bluray, although I do not condone this unless you have the necessary legal permissions to do so or you're uploading a Creative Commons licensed movie like Big Buck Bunny while adhering to the restrictions of the applicable Creative Commons license. This also means you can send high bitrate gaming clips to your friends without any restrictions, assuming you already have a place to upload them.\\n\\n#### Limitations\\n\\n- You can only use [hotlinks](https://simple.wikipedia.org/wiki/Hotlinking), which means direct linking to the video itself ending in the appropriate file extension such as `.mp4`. Cloud services like Google Drive or OneDrive will not work for storage.\\n- You cannot use Discord's CDN (cdn.discordapp.com) as the video source. I assume this is because of Discord's proxy blocking embeds over 50 MiB, but **only discord.nfp.is can do this**, as it **proxies cdn.discordapp.com** itself.\\n- You cannot embed videos in any resolutions higher than 3840 x 2160, Discord imposes a hard limit for this on all video after it was discovered that some videos could play normally but then be maliciously scaled to ridiculous resolutions during playback to crash Discord.\\n\\n\\n\\n## Differences between Sites\\n\\nAs mentioned before, there are five known sites at the time of writing. They all serve the same function, but one may interest you more than another due to slight differences in features & functionality.\\n\\nHere are the sites, each with one noteworthy special benefit:\\n\\n- https://stolen.shoes - Recognition, as it is the OG.\\n- https://discord.nfp.is - You can use Discord CDN as video source.\\n- https://embeds.video - Immediately input video source into the URL (`https://embeds.video/https://example.com/v/video.mp4`)\\n- https://x266.mov/discord-embed - Attractive domain, simple layout.\\n- https://autocompressor.net/av1 - Lots of info dump, pretty advanced features.\\n\\nThat concludes the technical overview! Next, let's cover the history of this exploit.\\n\\n## The Lore\\n\\n### Dwayne\\n\\nIn around April of 2022, a Reddit user going by the name of u/CreativeGamer03 [posted a video on r/discordapp](https://www.reddit.com/r/discordapp/comments/u96kky/someone_sent_this_in_the_memes_channel_and_bruh) of a link where a GIF of Dwayne \\\"The Rock\\\" Johnson plays caption with \\\"Is this a GIF or is it a video?\\\" When played, a low-quality music video of Rick Astley's \\\"Never Gonna Give You Up\\\" plays.\\n\\nThe link used is now unfortunately [removed](https://archuser.de/the-rock).\\n\\n### Discovery\\nOn 23rd June 2022, a Discord user *Clybius* on the AV1 Community server asked people for [VP9](https://wiki.x266.mov/docs/video/VP9) or [H.264](https://wiki.x266.mov/docs/video/AVC) videos that were over 100 MB in size. At the time the current 500 MB nitro tier did not exist. They then decided to use a 59 minute 1080p sample video of nature scenery from around the world with a thumbnail featuring a GIF of a waterfall to test the exploit. It worked.\\n\\nHe tried shortly afterward with [AV1](https://wiki.x266.mov/docs/video/AV1). Eureka, it also worked:\\n\\n![AV1](/img/clybius-av1.webp)\\n\\nClybius confirmed that this could be patched if discovered. He cites having had the idea from the Dwayne Johnson example above, but forgetting about it for a couple of months. So, it seems this entire concept stemmed from a silly rickroll.\\n\\n![Dwayne](/img/clybius-dwayne.webp)\\n\\n### The Experiments & Interactive Site\\n\\nAfter the discovery of AV1 embedding, experimentation brought about the discovery that *any* video codec will work as long as the user can decode/play the codec and the container/extension is an MP4, MOV, or WebM. These are all traditionally web-compatible containers. If you're interested in learning about containers, please see the [Containers](https://wiki.x266.mov/docs/introduction/terminology#container) section on the [Terminology](https://wiki.x266.mov/docs/introduction/terminology) page.\\n\\nThis applies to HEVC, ProRes, [xHE-AAC](https://wiki.x266.mov/docs/audio/AAC#xhe-aac), and other bizarre codecs that are rarely seen on the Web.\\n\\nWhile experimentating, Clybius converted one their idle domains `stolen.shoes` into an interactive embedder that provided a textbox for a video URL, a thumbnail URL, a width value, & a height value for the desired video. This would be the first website for Discord embedding.\\n\\n### Virality\\n\\nIt's not long before people outside of the AV1 Community discovered `stolen.shoes`, and its popularity increased rapidly. Its use usually involved the illicit distribution of full-length, unauthorized copies of movies; this sometimes happened very shortly after some movies were released. There were a couple notable instances of this happenening that caused quite the stir online each time.\\n\\n- The first instance featured the DreamWorks sequel of \\\"Puss in Boots (2011)\\\", \\\"Puss in Boots: The Last Wish (2022)\\\". A 1080p video sourced from a streaming site was the first wake up call that attracted attention to the existence of these embed sites. This example used `stolen.shoes`.\\n\\n![puss](/img/stolenshoes-puss.webp)\\n\\n- The second instance was when highly-anticipated animated film \\\"The Super Mario Bros. Movie (2023)\\\" produced by Illumination, Universal Studios, and Nintendo was spread around Discord. It was first spotted as a Cam (A camera recording by someone in theaters), then as it went out on streaming services a different link appeared but spread faster and with upgraded 1080p quality. Both used `stolen.shoes` as the embed site.\\n\\n![mario](/img/stolenshoes-mario.webp)\\n\\n- The third instance is very recent as of the day this was posted. A streaming-service sourced \\\"Five Nights at Freddy's (2023)\\\" was spread around since the movie released both in theaters and streaming service (Peacock) day one, and it gained steam extremely fast as most people had not seen it yet. Currently, this illegal novelty is gaining [hundreds of upvotes within the r/discordapp subreddit](https://www.reddit.com/r/discordapp/comments/17hx45y/is_discordnfp_an_ip_grabber/). The copy seems to be a compressed 720p encode. This example used `discord.nfp.is`.\\n\\n![fnaf](/img/discordnfpis-fnaf.webp)\\n\\nNote the ones listed here are the ones that I saw become extremely popular. There may be lesser known links that have been spread around privately or just did not cause enough noise for me to notice. Some less popular examples I've noticed, featuring more illicit copyrighted content distribution: \\n- Top Gun Maverick (2022)\\n- The SpongeBob trilogy (2005/2015/2020)\\n- Spider-Man: Across the Spider-Verse (2023)\\n\\n\\n## Closing\\n\\nThe ability to embed unusually large videos on Discord has enabled both positive and negative use cases. On the one hand, it allows high-quality content to be shared easily among friends. However, it has also facilitated mass copyright infringement by empowering virtually anyone with a Discord accound to freely spread pirated movies.\\n\\nWhile this is fascinating from a technical perspective, embedding techniques like these tread a fine ethical line. As with anything, it is important to be mindful of how our actions affect others, and I should remind everyone that content creators deserve to be compensated for their work. As users, we should support them by accessing their content via legitimate platforms.\\n\\nIt is hard to say how long this exploit will continue to be usable. Instead of enabling piracy, which may cause Discord to be more likely to patch this exploit if they see it as a serious threat, let's instead use these capabilities responsibly to share our own creations, gaming highlights, and other media which we can share legally. Given some thoughtfulness, perhaps we can find a fair balance between respecting copyright law and appeasing Discord's sensibilities while allowing some creative flexibility on the platform.\\n\\nThank you for reading this blog post, I hope you learned something!\"},{\"id\":\"av1-encoding-for-dummies\",\"metadata\":{\"permalink\":\"/blog/av1-encoding-for-dummies\",\"source\":\"@site/blog/2023-09-03-av1-for-dummies.mdx\",\"title\":\"AV1 Encoding for Dummies\",\"description\":\"This guide will show you how to encode in AV1 the *right* and *optimal* way.\",\"date\":\"2023-09-03T00:00:00.000Z\",\"tags\":[{\"inline\":true,\"label\":\"video\",\"permalink\":\"/blog/tags/video\"},{\"inline\":true,\"label\":\"compression\",\"permalink\":\"/blog/tags/compression\"}],\"readingTime\":16.09,\"hasTruncateMarker\":true,\"authors\":[{\"name\":\"Simulping\",\"title\":\"Maintainer / Encoder\",\"url\":\"https://github.com/Simulping\",\"image_url\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"socials\":{},\"key\":null,\"page\":null},{\"name\":\"Gianni Rosato\",\"title\":\"Maintainer\",\"url\":\"https://github.com/gianni-rosato\",\"image_url\":\"https://avatars.githubusercontent.com/u/35711760?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/35711760?v=4\",\"socials\":{},\"key\":null,\"page\":null}],\"frontMatter\":{\"title\":\"AV1 Encoding for Dummies\",\"description\":\"This guide will show you how to encode in AV1 the *right* and *optimal* way.\",\"slug\":\"av1-encoding-for-dummies\",\"authors\":[{\"name\":\"Simulping\",\"title\":\"Maintainer / Encoder\",\"url\":\"https://github.com/Simulping\",\"image_url\":\"https://avatars.githubusercontent.com/u/12994794?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/12994794?v=4\"},{\"name\":\"Gianni Rosato\",\"title\":\"Maintainer\",\"url\":\"https://github.com/gianni-rosato\",\"image_url\":\"https://avatars.githubusercontent.com/u/35711760?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/35711760?v=4\"}],\"tags\":[\"video\",\"compression\"],\"image\":\"/img/compare-guide.webp\",\"hide_table_of_contents\":false},\"unlisted\":false,\"prevItem\":{\"title\":\"Embedding the Un-Embeddable\",\"permalink\":\"/blog/embedding-the-un-embeddable\"},\"nextItem\":{\"title\":\"Reducing Image Load Online\",\"permalink\":\"/blog/site-optimization\"}},\"content\":\"This guide will show you how to encode in AV1 the *right* and *optimal* way. Yes, you using standalone ``libaom``, ``libsvtav1``, and ``librav1e`` from FFmpeg or even piping ``yuv4mpeg`` into **mainline** aomenc are all unoptimal.\\n\\n\x3c!--truncate--\x3e\\n\\n:::danger Outdated Information\\nWhile a lot of the information presented in this guide is still relevant and correct, the AV1 ecosystem has changed dramatically since this guide's inception which has demanded a rewrite. Please see the [AV1 for Dummies](https://wiki.x266.mov/blog/av1-for-dummies) blog post for more information.\\n:::\\n\\n![Compare](/img/compare-guide.webp)\\n\\nIn this guide, we'll be installing Av1an for chunked encoding and infinite threading, because the current state of AV1 encoders, except for [SVT-AV1](https://wiki.x266.mov/docs/encoders/SVT-AV1), unfortunately lacks threading and will only use very low amount of cores, which hampers speeds. The only caveat to this approach is **RAM consumption**, encoding 2160p (4K) with [aomenc](https://wiki.x266.mov/docs/encoders/aomenc) with 4 workers could take upwards of **16GB** of RAM! So do keep this in mind.\\n\\n## Installing the Tools\\n\\nGiven all of the different operating systems that people use on a day to day basis and the various different encoding workflows that exist, there are a number of ways to do this.\\n\\n**Jump to**: [Windows](#microsoft-windows) | [macOS](#macos) | [Linux](#linux)\\n\\n## Microsoft Windows\\n\\n### The GUI Way\\n1. Install [NMKODER](https://github.com/n00mkrad/nmkoder) which is a GUI front-end to av1an with all dependencies installed.\\n2. You're done, you can skip to the encoding part\\n\\n:::danger Almost abandonware\\nSince Nmkoder already ships everything by default and its last release was 29th March 2022. You need to manually update all encoders and tools to get better encoding speeds. Missing out on updates will result in your encodes being sub-optimal.\\n:::\\n\\n### The WSL2 Way\\n\\n*(Recommended)*\\n\\nIf you're not already familiar with WSL2, the The Windows Subsystem for Linux (WSL) is a feature of the Windows operating system that allows you to run a Linux file system, along with Linux command-line tools and GUI apps, directly on Windows. This lets Linux distributions run on bare metal without managing any virtual machines, so encoding performance is very good.\\n\\nThe easiest way to encode with WSL2 is to use [rAV1ator CLI](https://wiki.x266.mov/docs/utilities/rav1ator-cli), an interactive TUI for [Av1an](https://wiki.x266.mov/docs/utilities/av1an). An ArchWSL2 installation tutorial is provided [here](https://wiki.x266.mov/docs/utilities/rav1ator-cli#windows).\\n\\n### The Automated Way\\n\\nThere is now a batch script for automating the install process, which can be found [here](https://github.com/Hishiro64/av1an-win-script). The instructions are in the README file.\\n\\n:::caution\\nThe script will download outdated version encoders and tools such as `aom-av1-psy` and MKVToolNix v76.0, if you are fine with these you can proceed.\\n:::\\n\\n### The Manual Way\\n\\n1. Install **Python 3.10.x, this will change so consult from the** [Vapoursynth website](http://www.vapoursynth.com/doc/installation.html) **if you're reading this from the future** from [here](https://www.python.org/downloads/windows/) and select \\\"Windows Installer 64-bit\\\". Upon installation check the tick for adding Python to PATH like so\\n![Python PATH](/img/python-path.webp))\\n\\n2. Download and install Vapoursynth from [here](https://github.com/vapoursynth/vapoursynth/releases) and select \\\"VapourSynth64-RXX.exe\\\"\\n3. Open the terminal and type ``vsrepo.py install lsmas ffms2`` to install some plugins for Av1an to work.\\n4. Download MKVToolNix from [here](https://mkvtoolnix.download/downloads.html#windows), select \\\"mkvtoolnix-64bit-XX.X.X-setup.exe\\\", and install **(Also available on winget!)**\\n5. Download Av1an from [here](https://github.com/master-of-zen/Av1an/releases) (SELECT LATEST AND CLICK THE \\\"ASSETS\\\" DROPDOWN)\\n6. Download **shared libraries** FFmpeg from [gyan.dev](https://www.gyan.dev/ffmpeg/builds)\\n7. Download a pre-built fork of Aomenc ([aom-av1-lavish](https://github.com/Clybius/aom-av1-lavish/tree/Endless_Merging)) which has neat stuff such as sane defaults, new tunes, optimizations, etc. This can be downloaded for Windows [here](https://autumn.revolt.chat/attachments/download/-2EiZW1edcT9anApFZ1PJBEber-pJ6z02NiQBjbr28) *(Current as of Sept 6, 2023)*\\n:::info\\nIf you opt to compile aomenc yourself, you can view the instructions on how to do that [here](https://wiki.x266.mov/docs/encoders/aomenc/#installation).\\n:::\\n8. Move Av1an, FFmpeg **(Including the FFmpeg DLLs)**, and aomenc to somewhere preferable, eg ``C:\\\\Encoding``.\\n9. Add the folder **AND MKVTOOLNIX INSTALLATION FOLDER** to the [Windows PATH environment](https://www.maketecheasier.com/what-is-the-windows-path/).\\n\\n\\n## macOS\\n\\nmacOS is very similar to Linux, although there aren't any GUI tools for AV1 encoding that I can comfortably recommend.\\n\\n**Homebrew + Macports for Av1an + rav1e:**\\n*Note that some commands may have to be run with `sudo`, which I won't explicitly include for security reasons.*\\n\\nInstalling the Homebrew package manager is a well documented process at this point:\\n```bash\\n/bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\\"\\n```\\n\\nAs is installing MacPorts. Install the relevent `.pkg` for your macOS version from the MacPorts Project website:\\n[www.macports.org/install.php](https://www.macports.org/install.php)\\n\\nNow, you can run the following commands:\\n```bash\\nbrew update && brew upgrade\\nbrew install rav1e aom mkvtoolnix ffmpeg\\n# Usually you must run MacPorts commands for package installations as root\\nport upgrade outdated\\nport install av1an\\n```\\n\\nThis is the easiest way to get everything set up & working to produce AV1 video with `rav1e` or mainline `aomenc` & Av1an. You can check that things are installed by running the following commands & parsing their output:\\n```bash\\n% av1an --version\\nav1an 0.4.1-unstable (rev e10880d) (Release)\\n\\n* Compiler\\n  rustc 1.70.0 (LLVM 16.0)\\n\\n* Target Triple\\n  aarch64-apple-darwin\\n\\n* Date Info\\n  Commit Date:  2023-06-25\\n\\n* VapourSynth Plugins\\n  systems.innocent.lsmas : Not found\\n  com.vapoursynth.ffms2  : Not found\\n```\\n```bash\\n% rav1e --version | grep \\\"release\\\" -C 1\\nrav1e 0.6.6 () (release)\\nrustc 1.69.0 (84c898d65 2023-04-16) (built from a source tarball) aarch64-apple-darwin\\n```\\n```bash\\n% aomenc --help | grep \\\"AOMedia\\\" -C 3\\n\\nIncluded encoders:\\n\\n    av1    - AOMedia Project AV1 Encoder 3.6.1 (default)\\n\\n        Use --codec to switch to a non-default encoder.\\n```\\n\\nNotice `systems.innocent.lsmas : Not found` in the Av1an output. This means you won't be able to use the lsmash chunking method through vapoursynth & may instead have to rely on hybrid chunking, through `-m hybrid`. This is slower & takes up disk space while encoding, but still works. A sample Av1an command with this basic installation may look like this:\\n\\n```bash\\nav1an -i \\\"input\\\" -y --resume --verbose --split-method av-scenechange -m hybrid -c mkvmerge -e rav1e --force -v \\\" --tiles 8 -s 4 --quantizer 80 --no-scene-detection\\\" --photon-noise 7 --chroma-noise --pix-format yuv420p10le -w 8 -o \\\"output.mkv\\\"\\n```\\n\\n**Building From Source**\\n\\nIf you want lsmash support, aom-av1-lavish instead of mainline, or anything else that isn't covered by the more basic installation, you'll have to compile from source. Things are very similar to Linux, with a few oddities:\\n\\n- macOS sometimes doesn't have a `/usr/local/bin` by default. You can fix this by doing `mkdir /usr/local/bin`.\\n- Homebrew installs *everything* in its own directory structure. If you're building things from source that rely on libraries from vapoursynth, zimg, lsmash, etc, make sure to copy them from `/opt/homebrew/lib` to `/usr/local/lib`. Finding them is a matter of `ls | grep \\\"keyword\\\"` & copying what looks reasonable to be associated with the tool you're using.\\n- Building most things from source will have instructions for \\\\*nix which work for both macOS & Linux. Even if it says Linux, there's a good chance it'll work on macOS as well, & it is always worth trying Linux build instructions on Mac. I won't be going through building every encoding tool & dependency from source, as it is generally much more intuitive than Windows, but building Av1an is worth detailing here just as an example.\\n```bash\\nbrew install git rust nasm\\ngit clone https://github.com/master-of-zen/Av1an\\ncd Av1an\\nRUSTFLAGS=\\\"-C target-cpu=native\\\" cargo build --release\\ncd .. && cd target/release\\ncp av1an /usr/local/bin\\n```\\n\\n**More Difficult: Building aom-av1-lavish from Source**\\n\\nIf you want to make the most out of your hardware & eke out every last drop of quality, it may be worth building aom-av1-lavish from source. The first step is to clone it from the Endless Merging branch:\\n```bash\\ngit clone https://github.com/Clybius/aom-av1-lavish -b Endless_Merging\\ncd aom-av1-lavish\\n```\\nNow, you need to make some manual changes to the source code until Clybius merges [this commit](https://github.com/Clybius/aom-av1-lavish/pull/1/files).\\n- Add the line `#include \\\"aq_variance.h\\\"` at line 19 in `av1/encoder/encodeframe_utils.c`\\n- Comment out line 2546 in `av1/encoder/speed_features.c`. This line is `const int qindex_thresh_cdef_sf_s1_s3_l2[2] = { 92, 48 };` & becomes `// const int qindex_thresh_cdef_sf_s1_s3_l2[2] = { 92, 48 };`.\\n\\nNow you can continue to build according to the Linux instructions below. Obviously you'll need cmake, which you can install with homebrew along with any other tools you may need. While still in the `aom-av1-lavish` directory:\\n```bash\\nmkdir -p aom_build && cd aom_build\\ncmake .. -DBUILD_SHARED_LIBS=0 -DENABLE_DOCS=0 -DCONFIG_TUNE_BUTTERAUGLI=0 -DCONFIG_TUNE_VMAF=0 -DCONFIG_AV1_DECODER=0 -DENABLE_TESTS=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\\\"-flto -O3 -march=native\\\" -DCMAKE_C_FLAGS=\\\"-flto -O3 -march=native -pipe -fno-plt\\\" -DCMAKE_LD_FLAGS=\\\"-flto -O3 -march=native\\\"\\nmake -j$(nproc)\\n# This may need to be run as root:\\nmake install\\n```\\n\\nNow you can run `aomenc --help | grep \\\"AOMedia\\\" -C 3` to see if lavish installed. If you're getting the same output as above, you may need to copy the `aomenc` executable to `/opt/local/bin`, `/usr/local/bin`, & `/opt/homebrew/bin` if you already installed mainline aomenc. Running the version info command again, the correct output should look something like this:\\n```bash\\n% aomenc --help | grep AOMedia -C 3\\n\\nIncluded encoders:\\n\\n    av1    - AOMedia Project AV1 Encoder Psy v3.6.0 (default)\\n\\n        Use --codec to switch to a non-default encoder.\\n```\\n\\nNotice how it says `AOMedia Project AV1 Encoder Psy` instead of `AOMedia Project AV1 Encoder`. You should be all set after this to start using aom-av1-lavish & following the current parameter meta as outlined below.\\n\\n## Linux\\n\\n:::info\\nYet again, try using Arch. It's way easier.\\n:::\\n\\n### The GUI Way\\n\\n- Install [Aviator](https://github.com/gianni-rosato/aviator) ([SVT-AV1](https://wiki.x266.mov/docs/encoders/SVT-AV1) + [FFmpeg](https://wiki.x266.mov/docs/utilities/FFmpeg)) or [rAV1ator](https://giannirosato.com/blog/post/aviator-1/) basically same thing but [Av1an](https://wiki.x266.mov/docs/utilities/av1an.mdx) + [rav1e](https://wiki.x266.mov/docs/encoders/rav1e). Both are only available as [Flatpaks](https://beta.flathub.org/apps/net.natesales.Aviator). Keep in mind Aviator ships with **SVT-AV1** and rAV1ator with **rav1e** instead of aomenc/AOM-AV1, which I will not be covering here.\\n\\n### The TUI Way\\n\\n*(Recommended)*\\n\\n- Install [rav1ator-cli](https://wiki.x266.mov/docs/utilities/rav1ator-cli), a TUI for using Av1an meant to be easy to use. Much more flexible than the GUI options & can work with a number of encoders. See [this page](https://wiki.x266.mov/docs/utilities/rav1ator-cli/#installation) for more info. Can be easily used on any distro.\\n\\n### The Compiling Route\\n\\n#### Ubuntu\\n\\nThe guide below is targeted towards 22.04, packages and other things may be different on other versions. First Install Rust via `rustup` first, as apt version of Rust is severely outdated, then you can continue.\\n\\nInstall dependencies:\\n```bash\\nsudo apt install wget python unzip unrar build-essential meson autoconf automake libtool git nasm yasm python3-dev python3-pip cython3 libass-dev libqt5websockets5-dev libfftw3-dev libtesseract-dev ffmpeg libavcodec-dev libavformat-dev libswscale-dev libavutil-dev libswresample-dev libmediainfo-dev mkvtoolnix mediainfo perl nasm yasm git cmake libavutil-dev libavcodec-dev libavformat-dev libavdevice-dev libavfilter-dev libswscale-dev libswresample-dev libpostproc-dev llvm libclang-dev libssl-dev\\n```\\n\\nInstall l-smash:\\n```bash\\ngit clone https://github.com/l-smash/l-smash.git\\ncd l-smash\\n./configure --enable-shared --extra-cflags=\\\"-march=native\\\"\\nmake -j$(nproc)\\nsudo make install\\n```\\n\\nInstall zimg:\\n```bash\\ngit clone --recursive https://github.com/sekrit-twc/zimg.git\\ncd zimg\\n./autogen.sh\\n./configure\\nmake -j$(nproc)\\nsudo make install\\n```\\n\\nInstall ImageMagick:\\n```bash\\ngit clone https://github.com/ImageMagick/ImageMagick\\ncd ImageMagick\\n./configure\\nmake -j$(nproc)\\nsudo make install\\n```\\n\\nInstall Vapoursynth R63:\\n```bash\\nwget https://github.com/vapoursynth/vapoursynth/archive/refs/tags/R63.zip\\nunzip R63.zip\\ncd vapoursynth-R63\\n./autogen.sh\\n./configure CFLAGS=\\\"-march=native\\\" CXXFLAGS=\\\"-march=native\\\" --libdir=/usr/lib\\nmake -j$(nproc)\\nsudo make install\\nsudo mkdir /usr/lib/vapoursynth\\nsudo ldconfig\\n```\\nThe plugin directory will be located in `/usr/lib/vapoursynth`.\\n\\n\\nInstall L-SMASH-Works Vapoursynth Plugin:\\n```bash\\ngit clone https://github.com/AkarinVS/L-SMASH-Works -b ffmpeg-4.5\\ncd L-SMASH-Works/VapourSynth && mkdir build && cd build\\nmeson .. --optimization=3 --default-library=static -Db_lto=true -Dc_args=\\\"-march=native\\\" -Dcpp_args=\\\"-march=native\\\"\\nninja -j$(nproc)\\nsudo cp libvslsmashsource.so /usr/lib/vapoursynth/\\n```\\n\\n:::danger\\nL-SMASH-Works doesn't work on **aarch64**, it is recommended to use other plugins instead.\\n:::\\n\\nInstall FFMS2 Vapoursynth Plugin:\\n```bash\\ngit clone https://github.com/FFMS/ffms2\\ncd ffms2\\n./autogen.sh\\n./configure CFLAGS=\\\"-O3 -march=native\\\" CXXFLAGS=\\\"-O3 -march=native\\\"\\nmake -j$(nproc)\\nsudo cp src/core/.libs/libffms2.so src/core/.libs/libffms2.so.5 src/core/.libs/libffms2.so.5.0.0 /usr/lib/vapoursynth\\n```\\n\\nInstall Av1an:\\n```bash\\ngit clone https://github.com/master-of-zen/Av1an\\ncd Av1an\\nRUSTFLAGS=\\\"-C target-cpu=native\\\" cargo build --release\\nsudo cp target/release/av1an /usr/local/bin\\n```\\n\\nWhen there's no errors, proceed to compiling `aom-av1-lavish`.\\n\\n### Arch\\n\\nInstall dependencies:\\n```bash\\nsudo pacman -S vapoursynth ffmpeg av1an mkvtoolnix-gui git perl cmake ninja meson nasm vapoursynth-plugin-lsmashsource ffms2\\n```\\n\\nyou're done, proceed.\\n\\n#### Compiling aom-av1-lavish\\n``` bash\\ngit clone https://github.com/Clybius/aom-av1-lavish -b Endless_Merging\\ncd aom-av1-lavish && mkdir -p aom_build && cd aom_build\\ncmake .. -DBUILD_SHARED_LIBS=0 -DENABLE_DOCS=0 -DCONFIG_TUNE_BUTTERAUGLI=0 -DCONFIG_TUNE_VMAF=0 -DCONFIG_AV1_DECODER=0 -DENABLE_TESTS=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\\\"-flto -O3 -march=native\\\" -DCMAKE_C_FLAGS=\\\"-flto -O3 -march=native -pipe -fno-plt\\\"\\nmake -j$(nproc)\\nsudo make install\\n```\\n\\n## Encoding\\n\\nThe moment you've all been waiting for, let's just get into it. Here's an example *recommended* parameter as of now (09/03/23) [MM/DD/YY]:\\n```bash\\nav1an -x 300 -i input.mkv -w 4 -e aom -c mkvmerge --resume -m lsmash --photon-noise=10 --set-thread-affinity=2 --verbose -a \\\" -an \\\" -f \\\" -an \\\" -v \\\" --bit-depth=10 --cpu-used=4 --end-usage=q --cq-level=24 --threads=2 --tile-columns=0 --tile-rows=0 --lag-in-frames=64 --tune-content=psy --tune=ssim --enable-keyframe-filtering=1 --disable-kf --kf-max-dist=9999 --enable-qm=1 --deltaq-mode=0 --aq-mode=0 --quant-b-adapt=1 --enable-fwd-kf=0 --arnr-strength=1 --sb-size=dynamic --enable-dnl-denoising=0 \\\" -o \\\"output.mkv\\\"\\n```\\n\\n:::info Parameter Meta\\nIt is strongly recommended to join the [AV1 Discord server](https://discord.gg/vpREHAvYvh) to get the latest updates on what to use and which to set, as it's the only easily reachable place for everything AV1 & encoding tips in general.\\n:::\\nNow let's dissect it one-by-one\\n\\n**Av1an parameters:**\\n\\n- ``-i`` Input.\\n\\n- ``-x 300`` Sets scene split length to 300 frames, you can increase it for more quality at the tradeoff of video seekability.\\n\\n- ``-w 4`` Specifies the amount of \\\"workers\\\" or amount of encoders working on the video.\\n\\n- ``--verbose`` Sets logging to verbose.\\n\\n- ``--resume`` Resumes the encode even when you haven't encoded yet. I strongly recommend leaving this if you resume a lot since you can accidentally delete your whole progress (There's no delete confirmation feature.. yet) if you \\\"resumed\\\" without the parameter in place.\\n\\n- ``-e aom`` Specifies we're using aomenc encoder which should be the default option.\\n\\n- ``-c mkvmerge`` Specifies we're using mkvmerge (MKVToolNix) to concatenate the parts when done, you can specify with ffmpeg if you want to but this is the best method.\\n\\n- ``-m lsmash`` Specifies we're using l-smash (Vapoursynth plugin) to split the videos, this is also the best method because ffms2 causes video lag (Tested a year ago, might change now) and other methods just suck (Slow and not worth it, learned the hard way). You can attempt to use ffms2 when inputting VC-1 videos as it is not possible with l-smash (Or convert it to lossless with x264 qp 0).\\n\\n- ``-f \\\" -an \\\"`` ``-f`` Stands for ffmpeg parameters, ``-an`` is to remove all audio since its better to encode and merge it separately. To crop use ``-f \\\" -an -vf crop=1920:800 \\\"`` for example to crop the video to 1920x800.\\n\\n- ``-v \\\" \\\"`` Is where you put the encoder's parameters in.\\n\\n- ``-a \\\" -an \\\"`` FFmpeg audio encoding options, we're removing it cause we can always add it later. But if you want to, you can also encode directly. Here's an example for encoding to Opus using libopus assuming stereo: `-a \\\" -c:a libopus -b:a 128k \\\"`.\\n\\n- ``--photon-noise=10`` AV1 grain synthesis, which is a technique where the encoder puts fake grain in so it looks more natural and potentially hiding video artifacts (cause grain is hard to encode and explodes bitrate usage because of their randomness), 5-8 for almost none to little grain, 10-14 for medium, 15+ heavy, 20+ extremely heavy, 30+ for extremely grainy 90s live action films.\\n\\n- ``--set-thread-affinity=2`` Pins the thread to the encoder, aligns with ``--threads=2`` in the encoder parameter so set them accordingly.\\n\\n\\n**aomenc parameters:**\\n- ``--bit-depth=10`` We're using 10bit because it makes the video smaller and reduces [banding](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs#contouring).\\n\\n- ``--cpu-used=4`` This is the preset which ranges from 0-9, you can go to 3 if you want more efficiency, 2 if you have a lot of time, 4 is the sweet spot, and 6 if you want speed. Don't go above 6 (Worst efficiency) or even 0 (It would take WEEKS to finish).\\n\\n- ``--end-usage=q --cq-level=24`` This specifies that we are going to use a knockoff version of CRF level similar to x264/x265 encoders, in this case CRF 24.\\n\\n- `--threads=2` Sets the amount of threads the encoder can use, aligns with `--set-thread-affinity` in Av1an.\\n\\n- ``--tile-columns=0 --tile-rows=0`` This is the tiles options, where the encoder splits the videos into tiles to encode faster, see the image below (Yellow lines):\\n<picture>\\n    <source srcset=\\\"https://raw.githubusercontent.com/av1-community-contributors/images/main/tiling_av1.avif?token=GHSAT0AAAAAACEZPDXIZARY5MGSTJW4SI22ZHY636A\\\" type=\\\"image/avif\\\" />\\n    <img src=\\\"https://autumn.revolt.chat/attachments/HwhZjoDsdzLZsJM2mjzX7lEDmJn1xcYNdrQqmOxPYW/tiling_av1.jpeg\\\" alt=\\\"Tiling\\\" width=\\\"1280\\\" height=\\\"768\\\" loading=\\\"lazy\\\" />\\n</picture>\\n\\n:::note Tile usage\\nDo NOT use tiles for 1080p and below, use 1 ``tile-columns`` at 1440p (2K), 2 ``tile-columns`` and 1 ``tile-rows`` for 2160p (4K)\\n:::\\n\\n- ``--lag-in-frames=64`` Similar to x264/x265 `rc-lookahead`. Sets a number of frames to look ahead for frametype and ratecontrol, allowing for better compression decision making. Setting to a value greater than 64 is generally not considered useful.\\n\\n- ``--aq-mode`` adaptive quantization mode, 0 is better most of the time\\n\\n- ``--tune-content=psy --tune=ssim`` As the name suggests they are tunes that affect the video output, for the better, and for the worst\\n\\n:::info Tunes to use\\nSet ``tune-content`` to ``animation`` if you're encoding above ``cq-level=30`` A.K.A lower quality, despite it's name\\nSet ``tune-content`` to ``psy`` for everything else, **do not use if you encode above ``cq-level=30``**\\nFor ``tune``, this is a bit tricky. For now, the meta seems to be ``ssim``, but back then it was ``lavish`` which is considered THE best tune because it's based on [butteraugli](https://github.com/google/butteraugli). Now it's fallen behind because its more blurry than ``ssim``, and before that it was ``butteraugli``, and then ``ipq_vmaf_psy``, and finally just ``ipq``.\\nIf you use any of the VMAF tunes, **you need to specify ``--vmaf-model-path=`` to where you put it**.\\n:::\\n\\n- ``--enable-keyframe-filtering=1`` We're setting it to 1 because of compatibility reasons, 2 is more efficient but there are seeking issues and FFmpeg for some reason can't input it.\\n\\n- ``--sb-size=dynamic`` Allows the encoder to use 128x128 block partitioning besides 64x64 which gives an efficiency boost, ignore it.\\n\\n- ``--deltaq-mode`` set to 0 because its just better.\\n\\n- ``--arnr-strength=1`` Controls how strong the filtering will be, 1 is good for 3D Pixar CGI-like and 2D animation, use 4 if you're doing live action content. Using maximum at higher bitrates would just result in a blurry mess.\\n\\n- ``--disable-kf --enable-fwd-kf=0`` We're disabling keyframes cause **Av1an already did scene detection, so we wont have to.**. And it speeds things up.\\n\\n- ``--kf-max-dist=9999`` Maximum keyframe interval, we're setting it at the highest possible value since av1an's scene detection keyframe interval is already 240 by default\\n\\n- ``--enable-chroma-deltaq=1 --enable-qm=1 --quant-b-adapt=1`` Parameters that give you free efficiency boost.\\n\\n- ``--enable-dnl-denoising=0`` Disables the encoder's built-in denoising technique when grain synthesis is enabled, you can optionally set it to 1 when you have a pretty noisy video since it works quite well.\\n\\n\\n:::info Concatenation Error on Linux\\nRun ``ulimit -n 200000``, resume, and it should concatenate just fine. If it still errors, head to the encode directory > encode, and run ``mkvmerge @../options.json``\\n:::\\n\\n\\n## Merging Everything\\n\\nOnce you're done just encode your audio using ffmpeg (or just passthrough it), subtitles should be carried along with your video output, and merge them in MKVToolNix! Don't want Matroska files? That's fine, you can use FFmpeg or MP4Box to output into `mp4`, just keep in mind that PGS/SUP/VOBSUB subtitles are not supported and Opus audio support is still experimental.\\n\\n\\n## Tips & Tricks\\n\\n- `--denoise-noise-level=10` Alternative to `photon-noise`, slower than photon-noise and is the OG grain synthesis method, performs okay and just serves as an alternative. Don't attempt to use it at high values (>12) since it creates noticeable grain patterns.\\n\\n- `--arnr-maxframes` to set max reference frames that will be used to filter the encode, higher values would make the video blurrier at high fidelity but look better at lower bitrates.\\n\\n- `--butteraugli-resize-factor=2` if you use any of the butteraugli-based tunes (lavish, butteraugli) to speed it up without much losses and `--butteraugli-intensity-target=250` to match the content light level.\\n\\n\\n## Final Thoughts\\n\\nEncoding has always been about experimentation for the best, there is really no \\\"One size fits all\\\" for encoding content, as they differ from scene complexity, how it's captured (2D/Real life), film grain, dark scenes, etc. So experiment away for your specific type of content!\\n\\n> **Guide originally hosted on https://rentry.co/AV1, rewrite and migration by Simulping.**\"},{\"id\":\"site-optimization\",\"metadata\":{\"permalink\":\"/blog/site-optimization\",\"source\":\"@site/blog/2023-07-21-site-optimization.mdx\",\"title\":\"Reducing Image Load Online\",\"description\":\"A big part of understanding any multimedia codec technology is knowing the application for such technology. For images, a big use case is web delivery.\",\"date\":\"2023-07-21T00:00:00.000Z\",\"tags\":[{\"inline\":true,\"label\":\"image\",\"permalink\":\"/blog/tags/image\"},{\"inline\":true,\"label\":\"web\",\"permalink\":\"/blog/tags/web\"},{\"inline\":true,\"label\":\"compression\",\"permalink\":\"/blog/tags/compression\"}],\"readingTime\":9.25,\"hasTruncateMarker\":true,\"authors\":[{\"name\":\"Gianni Rosato\",\"title\":\"Maintainer\",\"url\":\"https://github.com/gianni-rosato\",\"image_url\":\"https://avatars.githubusercontent.com/u/35711760?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/35711760?v=4\",\"socials\":{},\"key\":null,\"page\":null}],\"frontMatter\":{\"title\":\"Reducing Image Load Online\",\"description\":\"A big part of understanding any multimedia codec technology is knowing the application for such technology. For images, a big use case is web delivery.\",\"slug\":\"site-optimization\",\"authors\":[{\"name\":\"Gianni Rosato\",\"title\":\"Maintainer\",\"url\":\"https://github.com/gianni-rosato\",\"image_url\":\"https://avatars.githubusercontent.com/u/35711760?v=4\",\"imageURL\":\"https://avatars.githubusercontent.com/u/35711760?v=4\"}],\"tags\":[\"image\",\"web\",\"compression\"],\"image\":\"/img/_DSC8466-smaller.jpg\",\"hide_table_of_contents\":false},\"unlisted\":false,\"prevItem\":{\"title\":\"AV1 Encoding for Dummies\",\"permalink\":\"/blog/av1-encoding-for-dummies\"}},\"content\":\"A big part of understanding any multimedia codec technology is knowing the application for such technology. For images, a big use case is web delivery. Compared to other multimedia, images are incredibly popular on the Web & knowing how to serve them properly can be a massive boon to your website's traffic as well as less of a headache for users on slower connections or who are under bandwidth constraints. The most disappointing part is that images are often poorly done on the web; all too frequently will you run into a site serving massive photographic PNGs for no reason, or photography sites serving photographs fresh out of the editing software with no thought put into their final delivery. A little effort, patience, & knowledge will go a long way toward improving the user experience for individuals using your site, & this article will illustrate some of the basics.\\n\\n\x3c!--truncate--\x3e\\n\\n:::caution\\nThese instructions are for *photographic* images; other kinds of images, like non-photographic, artwork, pixel art, etc. should likely be handled differently.\\n:::\\n\\n:::danger\\nMany images won't load properly unless your browser supports JXL, AVIF, & proper ICCv2 color management. This is for demonstration purposes only & shouldn't represent an actual common website experience. If you're curious anyway, the following browsers can display the contents of this page perfectly:\\n- [Thorium](https://thorium.rocks/) | *Linux, [macOS](https://github.com/Alex313031/Thorium-Special/releases), [Windows](https://github.com/Alex313031/thorium/releases/), [Android](https://github.com/Alex313031/Thorium-Special/releases)*\\n- [Waterfox](https://www.waterfox.net/) | *[Linux](https://flathub.org/apps/net.waterfox.waterfox), [macOS](https://www.waterfox.net/download/), [Windows](https://www.waterfox.net/download/)*\\n- [Mercury](https://thorium.rocks/mercury) | *[Linux](https://github.com/Alex313031/Mercury/releases), [Windows](https://github.com/Alex313031/Mercury/releases)*\\n:::\\n\\n## Fire & Forget\\n\\nFirst, we'll illustrate what *not* to do, which is fortunately not incredibly difficult to avoid. Taking an image straight out of your editing software at a massive size will often bloat the size & resolution to something that isn't generally usable for a website regardless of the codec you're using & its quality per bit. It can be argued there are specific use cases that demand incredible resolution & fidelity coexist on the Web, but we won't be covering those here. Here's an example of a bloated image:\\n\\n*exported straight from Darktable at JPEG q90, with no scaling*\\n\\n![bloated_jpeg](/img/_DSC8466.jpg)\\n\\n**2.2 MB**\\n\\n## Massive Improvement\\n\\nThe easiest way to have a large improvement without doing much work is to simply resize the image before serving it. Even if you exported a lossy JPEG, resizing should remove a lot of artifacts. The way to perceive a worst-case for an image's size on a site is to inspect the image element's width & height, which should give us an estimate of how large we should make our image. Any larger than this value is unreasonable since we're overfilling the element's size for no reason & the image is being scaled down anyway.\\n\\n![box-size-mac](/img/box-size-mac.avif)\\n*Inspect Element in Firefox. The Mac used to take this screenshot has a relatively high display resolution of 2560x1664. Because Macs scale things differently, we're probably going to want to double the horizontal resolution here.*\\n\\nThe width is the most important value here, so our new image is going to be exported with a width of 1699 pixels. This new image, encoded at JPEG q90 with `cjpegli`, looks like this:\\n\\n![smaller_jpeg](/img/_DSC8466-smaller.jpg)\\n\\nObviously, there's lost fidelity compared to the original, but considering this is *so much smaller*, it is worth the trade-off for many. It is also worth noting we are using an improved jpeg encoder in the form of `cjpegli`, although that is secondary to the resize. If it doesn't look as good as you want it to, you can always scale the resolution up a bit, though currently, it looks plenty passable for its size.\\n\\n2.2 MB -> **233 kB**\\n\\n### Lazy Loading\\n\\nA bonus tip is to add the `loading=\\\"lazy\\\"` attribute to your picture tag to allow the image to load only when scrolled to by a user. This doesn't save bandwidth, but it improves the user experience by loading images further down the page only when necessary. An example may look like this:\\n\\n```html\\n<picture>\\n    <img src=\\\"/images/jpeg_fallback.jpg\\\" alt=\\\"alt text\\\" width=\\\"XX\\\" height=\\\"YY\\\" loading=\\\"lazy\\\" />\\n</picture> \\n```\\n\\n## New Codecs\\n\\nIf you desire further improvement, it may be time to consider using a newer codec like [AVIF](https://wiki.x266.mov/docs/images/AVIF) or [JPEG-XL](https://wiki.x266.mov/docs/images/JXL). These options will compress far more effectively than JPEG, with the only trade-off being browser support. We're not going to consider [WebP](/docs/images/WebP) or [HEIC](/docs/images/HEIC), since WebP is not competitive enough with JPEG for photographic imagery (often being worse) & HEIC has been superseded by AVIF - which sees greater support anyhow - & is not royalty free, effectively preventing widespread Web adoption forever. Again, we're just considering *lossy* compression for *photographic* images; it is a different story with WebP elsewhere, as it performs well on non-photographic content & is almost always better than PNG for 8-bit lossless compression. So, we are left with JXL & AVIF for now.\\n\\n### Fallbacks\\n\\nAVIF sees widespread support, but JPEG-XL isn't quite there yet with Web support as Google continues to push AVIF (it is debatable if it ever will be outside the Apple ecosystem). Even with AVIF, adoption isn't remotely close to JPEG, so it is worth providing a fallback. This can look like the following example:\\n\\n```html\\n<picture>\\n    <source srcset=\\\"/img/jxl_image.jxl\\\" type=\\\"image/jxl\\\" />\\n    <source srcset=\\\"/img/avif_image.avif\\\" type=\\\"image/avif\\\" />\\n    <source srcset=\\\"/img/webp_fback.webp\\\" type=\\\"image/webp\\\" />\\n    <img src=\\\"/images/jpeg_fallback.jpg\\\" alt=\\\"alt text\\\" width=\\\"XX\\\" height=\\\"YY\\\" loading=\\\"lazy\\\" />\\n</picture> \\n```\\n\\nHere is a JXL falling back to an AVIF falling back to a WebP falling back to a JPEG. Pretty intense to have this many fallbacks unless you're really after the ultimate compression ratio, but it is certainly an option. AVIF & JPEG alone will probably be enough for most.\\n\\n### Compression Efficacy\\n\\nLet's look at how our image examples compare to the original with our new codec selection. We'll be aiming for high visual fidelity, so around the same quality as our initial JPEG encoded with `cjpegli` (which scores ~`83.01` with the [SSIMULACRA2](/docs/metrics/SSIMULACRA2) visual fidelity metric).\\n\\n![smaller_jxl](/img/_DSC8466-smaller.jxl)\\n\\n**137.0 kB** *JPEG-XL image, encoded with `cjxl lossless.png out.jxl -d 1.49 -e 9`. Score: ~`83.04`* *3.06s user time*\\n\\n![smaller_avif](/img/_DSC8466-smaller.avif)\\n\\n**124.8 kB** *AVIF image, encoded with `avifenc -c aom -s 4 -j 8 -d 10 -y 444 --min 1 --max 63 -a end-usage=q -a cq-level=16 -a tune=ssim lossless.png out.avif`. Score: ~`83.03`* *7.54s user time*\\n\\nJXL also supports lossless transcoding of JPEG images. This means every pixel is identical, the image just has a smaller filesize than the original JPEG; if you can use JXL, you can transcode existing JPEGs losslessly on your site & save some bandwidth that way. The JPEG transcode below gives a higher SSIMULACRA2 score than the original for some reason, but I'll chalk that up to a decoding inconsistency between how the `ssimulacra2` program decodes JPEG & JXL. Either way, the scores are fairly close.\\n\\n![smaller_jxl_jpeg-recomp](/img/_DSC8466-smaller-recomp.jxl)\\n\\n**189.4 kB** *JPEG-XL image from JPEG, encoded with `cjxl input.jpg input-recomp.jxl -d 0.0 -e 9 --brotli_effort=11`. Score: ~`84.92` (???)* *0.67s user time*\\n\\nThe final trick we can use, while not a new codec at all, still increases quality per bit. Encoding an XYB JPEG with `cjpegli` encodes with the perceptual XYB colorspace using an ICC profile to modify the original JPEG colors, avoiding JPEG's normal YCbCr which isn't perceptually optimized for the human visual system. Using XYB, we can afford identical quality with less bitrate than normal JPEG. This has universal compatibility, but not every application understands how to handle the XYB color profile (although color-managed modern browsers should be fine).\\n\\n![smaller_jpeg_xyb](/img/_DSC8466-smaller-xyb.jpg)\\n\\n**208.3 kB** *XYB JPEG, encoded with `cjpegli lossless.png out.jpg --xyb -d 1.155`. Score: ~`83.04`* *0.10s user time*\\n\\nIn this particular instance, AVIF seems to be the overall winner. This isn't always the case due to JXL's superiority at higher fidelity & with more detailed images, but according to SSIMULACRA2, AVIF has the best quality per bit with this image. You can use your own eyes to further clarify your choice, though. It is worth mentioning that as these were encoded from a 16-bit source PNG, the JXL image is the only one that maintains the full original bit depth, & AVIF isn't fast to encode.\\n\\n## Responsive Images\\n\\nDisplaying an image that is too large for a viewport is a waste of bandwidth, & displaying an image that's too small for the viewport leaves fidelity to be desired. Luckily, we have the [Responsive Image Linter](https://ausi.github.io/respimagelint/) that can help us figure out which image sizes we should be using.\\n\\n![responsive_image_linter](/img/responsive_image_linter.avif)\\n\\nIn our fire & forget example, we see that we are serving an image that is far too large. We already know that, but now we can see that given various viewport sizes we could be serving images that have respective widths of 270px, 958px, 1350px, 1660px, & 1916px to optimize for delivery to a variety of different devices. Here's how we'd write that in HTML:\\n\\n```html\\n<picture>\\n  <source type=\\\"image/jxl\\\" srcset=\\\"/img_270.jxl 270w, /img_958.jxl 958w, /img_1350.jxl 1350w, /img_1660.jxl 1660w, /img_1916.jxl 1916w\\\" sizes=\\\"(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)\\\" />\\n  <source type=\\\"image/avif\\\" srcset=\\\"/img_270.avif 270w, /img_958.avif 958w, /img_1350.avif 1350w, /img_1660.avif 1660w, /img_1916.avif 1916w\\\" sizes=\\\"(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)\\\" />\\n  <img width=\\\"1699\\\" height=\\\"1136\\\" alt=\\\"alt text\\\" srcset=\\\"/img_270.jpg 270w, /img_958.jpg 958w, /img_1350.jpg 1350w, /img_1660.jpg 1660w, /img_1916.jpg 1916w\\\" sizes=\\\"(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)\\\" src=\\\"/fallback.jpg\\\" />\\n</picture>\\n```\\n\\nIt is worth noting that this example above & the example below aren't perfect implementations of a responsive image given the conditions of this site, but the general concept still applies. Some things to note:\\n\\n- `srcset` = the images available to your browser to serve, & their respective widths\\n- `sizes` = the conditions given to the browser explaining under what conditions should it serve which image\\n- `(min-width: XXXpx) YYYpx` = Given the viewport is at least XXX wide, serve an image of YYY horizontal resolution. The browser will pick an image from srcset that is CSS pixels \\\\* display scaling.\\n- `calc(100vw - 24px)` = Usually preceded by a (min-width) condition. Specifies a value the browser should calculate on its own to pick the closest option from the srcset. Let's say we have `(min-width: 997px) calc(75vw - 257px)`. This means given the viewport is at least 997px wide, calculate 0.75 \\\\* the current viewport resolution - 257 to find the closest image in the srcset to fit the number of pixel specified.\\n\\n<picture>\\n  <source type=\\\"image/jxl\\\" srcset=\\\"https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_270.jxl 270w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_958.jxl 958w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1350.jxl 1350w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1660.jxl 1660w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1916.jxl 1916w\\\" sizes=\\\"(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)\\\" />\\n  <source type=\\\"image/avif\\\" srcset=\\\"https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_270.avif 270w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_958.avif 958w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1350.avif 1350w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1660.avif 1660w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1916.avif 1916w\\\" sizes=\\\"(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)\\\" />\\n  <img loading=\\\"lazy\\\" width=\\\"1699\\\" alt=\\\"alt text\\\" srcset=\\\"https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_270.jpg 270w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_958.jpg 958w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1350.jpg 1350w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1660.jpg 1660w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1916.jpg 1916w\\\" sizes=\\\"(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)\\\" src=\\\"https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/_DSC8466-smaller.jpg\\\" />\\n</picture>\\n\\nThat's all! Massive thanks to Auto-Rez Media Technologies for the inspiration behind this article & explicit permission to use their [Reduce Your Page's Image Load](https://autocompressor.net/blog/reduce-image-load) blog post when writing this entry. I have [confirmed](https://autumn.revolt.chat/attachments/GtFGuwNfeRdcwUN0MWzhDCAiiadWOk88XXC3pQv6RI) with their leadership that this wiki entry can be safely licensed under CC BY-SA 4.0.\"}]}}")}}]);