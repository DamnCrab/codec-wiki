"use strict";(self.webpackChunkcodec_wiki=self.webpackChunkcodec_wiki||[]).push([[1401],{2348:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var a=i(4848),r=i(8453);const t={title:"Kvazaar",sidebar_position:11},s="Kvazaar",o={id:"encoders/Kvazaar",title:"Kvazaar",description:"Kvazaar is an open-source H.265 / HEVC software encoder Written in C, developed by Ultra Video Group and licensed under BSD 3-clause.",source:"@site/docs/encoders/Kvazaar.mdx",sourceDirName:"encoders",slug:"/encoders/Kvazaar",permalink:"/docs/encoders/Kvazaar",draft:!1,unlisted:!1,editUrl:"https://github.com/av1-community-contributors/codec-wiki/tree/main/docs/encoders/Kvazaar.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Kvazaar",sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"SVT-HEVC",permalink:"/docs/encoders/SVT-HEVC"},next:{title:"VVenC",permalink:"/docs/encoders/VVenC"}},d={},c=[{value:"FFmpeg",id:"ffmpeg",level:2},{value:"Supported Color Space",id:"supported-color-space",level:2},{value:"Installation",id:"installation",level:2},{value:"Arch Linux",id:"arch-linux",level:3},{value:"Compiling",id:"compiling",level:3},{value:"Using CMake for 10-bit support",id:"using-cmake-for-10-bit-support",level:3},{value:"Usage",id:"usage",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"kvazaar",children:"Kvazaar"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/ultravideo/kvazaar",children:"Kvazaar"})," is an open-source ",(0,a.jsx)(n.a,{href:"/docs/video/HEVC",children:"H.265 / HEVC"})," software encoder Written in C, developed by ",(0,a.jsx)(n.a,{href:"https://ultravideo.fi/",children:"Ultra Video Group"})," and licensed under BSD 3-clause."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/docs/encoders/uvg266",children:"uvg266"})," (Developed by the same group) uses Kvazaar as base for encoding to the ",(0,a.jsx)(n.a,{href:"/docs/video/VVC",children:"VVC"})," codec."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["It is recommended to use ",(0,a.jsx)(n.a,{href:"/docs/encoders/x265",children:"x265"})," instead as it performs much better in both quality and speed."]})}),"\n",(0,a.jsx)(n.h2,{id:"ffmpeg",children:"FFmpeg"}),"\n",(0,a.jsxs)(n.p,{children:["Kvazaar is available in FFmpeg via ",(0,a.jsx)(n.code,{children:"libkvazaar"}),", to check if you have it, run ",(0,a.jsx)(n.code,{children:"ffmpeg -h encoder=libkvazaar"}),". You can input non-FFmpeg standard Kvazaar parameters via ",(0,a.jsx)(n.code,{children:"-kvazaar-params"}),"."]}),"\n",(0,a.jsx)(n.p,{children:'You may need to download "Full" builds. As most of the time, this encoder is not included.'}),"\n",(0,a.jsx)(n.h2,{id:"supported-color-space",children:"Supported Color Space"}),"\n",(0,a.jsx)(n.p,{children:"Kvazaar supports the following color spaces:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Format"}),(0,a.jsx)(n.th,{style:{textAlign:"center"},children:"Chroma Subsampling"}),(0,a.jsx)(n.th,{children:"Supported Bit Depth(s)"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"YUV420P"}),(0,a.jsx)(n.td,{style:{textAlign:"center"},children:"4:2:0"}),(0,a.jsx)(n.td,{children:"8-bit"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"YUV420P10LE"}),(0,a.jsx)(n.td,{style:{textAlign:"center"},children:"4:2:0"}),(0,a.jsx)(n.td,{children:"10-bit"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.h3,{id:"arch-linux",children:"Arch Linux"}),"\n",(0,a.jsxs)(n.p,{children:["Kvazaar is available on both pacman (",(0,a.jsx)(n.code,{children:"kvazaar"}),") and the Arch User Repository (AUR) as ",(0,a.jsx)(n.code,{children:"kvazaar-git"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"compiling",children:"Compiling"}),"\n",(0,a.jsxs)(n.p,{children:["Ultra Video Group does not ship any pre-built binaries of their encoders except for their ",(0,a.jsx)(n.a,{href:"https://ci.appveyor.com/project/Ultravideo/kvazaar",children:"AppVeyor CI"}),", but AppVeyor deletes build artifacts after a month, so most of the time you'll have to compile Kvazaar yourself."]}),"\n",(0,a.jsxs)(n.p,{children:["Windows users are recommended to compile via MinGW-W64 which comes with ",(0,a.jsx)(n.a,{href:"https://msys2.org/",children:"MSYS2"}),". Please be advised ",(0,a.jsx)(n.strong,{children:"the usage of Clang for compiling in this situation is heavily recommended"}),"\r\ndue to disabled AVX2 optimizations because of a known GCC issue from 2012 (MinGW environments-exclusive). To do this, run ",(0,a.jsx)(n.code,{children:"CC=clang ./configure"})," during autoconf."]}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsx)(n.p,{children:"Compilation requires GNU Automake, Autoconf, Libtool, and M4."})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"git clone --recursive https://github.com/ultravideo/kvazaar.git\r\ncd kvazaar\r\n./autogen.sh\r\n./configure\r\nmake -j$(nproc)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Binaries will be available in ",(0,a.jsx)(n.code,{children:"src"}),", or you can run ",(0,a.jsx)(n.code,{children:"make install"})," on Linux to install (May need elevated permissions)."]}),"\n",(0,a.jsx)(n.h3,{id:"using-cmake-for-10-bit-support",children:"Using CMake for 10-bit support"}),"\n",(0,a.jsx)(n.p,{children:"You will need to use CMake to specify a flag to be able to encode 10-bit with the encoder, by default Kvazaar ships with only 8-bit."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'git clone --recursive https://github.com/ultravideo/kvazaar.git\r\ncd kvazaar/build\r\ncmake .. -DCMAKE_C_FLAGS="-DKVZ_BIT_DEPTH=10"\r\nmake -j$(nproc)\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"Encoding 10-bit with Kvazaar is significantly slower as the developers only prioritized SIMD optimizations for 8-bit, and can get quite buggy."})}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Simple Y4M input with QP 20 and raw 265 bitstream output"',children:"kvazaar -i input.y4m --input-file-format y4m --qp 20 -o output.265\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Preset slow, CRF 20, Y4M input"',children:"kvazaar -i input.y4m --input-file-format y4m --qp 20 --preset slow -o output.265\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="FFmpeg piping"',children:"ffmpeg -v error -i input.mkv -f yuv4mpegpipe -strict -1 - | kvazaar -i - --input-file-format y4m --qp 20 --preset slow -o output.265\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var a=i(6540);const r={},t=a.createContext(r);function s(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);