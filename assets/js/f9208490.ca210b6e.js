"use strict";(self.webpackChunkcodec_wiki=self.webpackChunkcodec_wiki||[]).push([[615],{6943:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=n(5893),s=n(1151);const o={label:"hdr10plus_tool",sidebar_position:11},r="hdr10plus_tool",l={id:"utilities/hdr10plus_tool",title:"hdr10plus_tool",description:"hdr10plus_tool is a command line tool written in Rust for working with HDR10+ in HEVC files. Previously named `hdr10plus_parser`, now it's more than just a parser.",source:"@site/docs/utilities/hdr10plus_tool.mdx",sourceDirName:"utilities",slug:"/utilities/hdr10plus_tool",permalink:"/docs/utilities/hdr10plus_tool",draft:!1,unlisted:!1,editUrl:"https://github.com/av1-community-contributors/codec-wiki/tree/main/docs/utilities/hdr10plus_tool.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{label:"hdr10plus_tool",sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"eac3to",permalink:"/docs/utilities/eac3to"},next:{title:"mp4box",permalink:"/docs/utilities/mp4box"}},a={},d=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Extracting",id:"extracting",level:3},{value:"Injecting",id:"injecting",level:3},{value:"Remove HDR10+ Metadata",id:"remove-hdr10-metadata",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"hdr10plus_tool",children:"hdr10plus_tool"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"hdr10plus_tool"})," is a command line tool written in Rust for working with HDR10+ in HEVC files. Previously named ",(0,i.jsx)(t.code,{children:"hdr10plus_parser"}),", now it's more than just a parser."]}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Download pre-built binaries from ",(0,i.jsx)(t.a,{href:"https://github.com/quietvoid/hdr10plus_tool/releases",children:"here"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"or"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Compile yourself (Rust must be installed, minimum v1.57.0 at the time of writing)"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'git clone https://github.com/quietvoid/hdr10plus_tool.git\r\ncd hdr10plus_tool\r\nRUSTFLAGS="-C target-cpu=native" cargo build --release\n'})}),"\n",(0,i.jsx)(t.p,{children:"on Windows:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/quietvoid/hdr10plus_tool.git\r\ncd hdr10plus_tool\r\nset RUSTFLAGS=-C target-cpu=native \r\ncargo build --release\n"})}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"hdr10plus_tool [OPTIONS] <SUBCOMMAND>\n"})}),"\n",(0,i.jsx)(t.p,{children:"To get more detailed options for a subcommand"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"hdr10plus_tool <SUBCOMMAND> --help\n"})}),"\n",(0,i.jsx)(t.h3,{id:"extracting",children:"Extracting"}),"\n",(0,i.jsx)(t.p,{children:"Extract from raw bitstream"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"hdr10plus_tool extract video.hevc -o metadata.json\n"})}),"\n",(0,i.jsx)(t.p,{children:"Extract using FFmpeg pipe (Recommended)"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"ffmpeg -hide_banner -strict -2 -i input.mkv -map 0:v:0 -c copy -vbsf hevc_mp4toannexb -f hevc - | hdr10plus_tool extract -o metadata.json -\n"})}),"\n",(0,i.jsx)(t.h3,{id:"injecting",children:"Injecting"}),"\n",(0,i.jsx)(t.p,{children:"Inject to raw bitstream"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"hdr10plus_tool inject -i video.hevc -j metadata.json -o injected_output.hevc\n"})}),"\n",(0,i.jsx)(t.h3,{id:"remove-hdr10-metadata",children:"Remove HDR10+ Metadata"}),"\n",(0,i.jsx)(t.p,{children:"Remove from raw bitstream"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"hdr10plus_tool remove video.hevc -o hdr10plus_removed_output.hevc\n"})}),"\n",(0,i.jsx)(t.p,{children:"Remove using FFmpeg pipe (Recommended)"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"ffmpeg -hide_banner -strict -2 -i input.mkv -map 0:v:0 -c copy -vbsf hevc_mp4toannexb -f hevc - | hdr10plus_tool remove -\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>r});var i=n(7294);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);