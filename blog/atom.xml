<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wiki.x266.mov/blog</id>
    <title>Codec Wiki Blog</title>
    <updated>2023-09-03T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wiki.x266.mov/blog"/>
    <subtitle>Codec Wiki Blog</subtitle>
    <icon>https://wiki.x266.mov/img/favicon.svg</icon>
    <entry>
        <title type="html"><![CDATA[AV1 Encoding for Dummies]]></title>
        <id>https://wiki.x266.mov/blog/av1-encoding-for-dummies</id>
        <link href="https://wiki.x266.mov/blog/av1-encoding-for-dummies"/>
        <updated>2023-09-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[AV1 Encoding for Dummies]]></summary>
        <content type="html"><![CDATA[<p>This guide will show you how to encode in AV1 the <em>right</em> and <em>optimal</em> way. Yes, you using standalone <code>libaom</code>, <code>libsvtav1</code>, and <code>librav1e</code> from FFmpeg or even piping <code>yuv4mpeg</code> into <strong>mainline</strong> aomenc are all unoptimal.</p><p><img loading="lazy" alt="Compare" src="/assets/images/compare-guide-6feb966fbd9d73be4a3097c41691c4ad.webp" width="1045" height="588" class="img_ev3q"></p><p>In this guide, we'll be installing Av1an for chunked encoding and infinite threading, because the current state of AV1 encoders, except for <a href="/docs/encoders/SVT-AV1">SVT-AV1</a>, unfortunately lacks threading and will only use very low amount of cores, which hampers speeds. The only caveat to this approach is <strong>RAM consumption</strong>, encoding 2160p (4K) with <a href="/docs/encoders/aomenc">aomenc</a> with 4 workers could take upwards of <strong>16GB</strong> of RAM! So do keep this in mind.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="installing-the-tools">Installing the Tools<a href="#installing-the-tools" class="hash-link" aria-label="Direct link to Installing the Tools" title="Direct link to Installing the Tools">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="microsoft-windows">Microsoft Windows<a href="#microsoft-windows" class="hash-link" aria-label="Direct link to Microsoft Windows" title="Direct link to Microsoft Windows">​</a></h3><p><strong>The GUI Way:</strong></p><ol><li>Install <a href="https://github.com/n00mkrad/nmkoder" target="_blank" rel="noopener noreferrer">NMKODER</a> which is a GUI front-end to av1an with all dependencies installed.</li><li>You're done, you can skip to the encoding part</li></ol><div class="theme-admonition theme-admonition-warning alert alert--danger admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>Almost abandonware</div><div class="admonitionContent_S0QG"><p>Since Nmkoder already ships everything by default and its last release was 29th March 2022. You need to manually update all encoders and tools to get better encoding speeds. Missing out on updates will result in your encodes being sub-optimal.</p></div></div><p><strong>The Automated Way:</strong></p><p>There is now a batch script for automating the install process, which can be found <a href="https://github.com/Hishiro64/av1an-win-script" target="_blank" rel="noopener noreferrer">here</a>. The instructions are in the README file.</p><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>The script will download outdated version encoders and tools such as <code>aom-av1-psy</code> and MKVToolNix v76.0, if you are fine with these you can proceed.</p></div></div><p><strong>The Manual Way:</strong></p><ol><li><p>Install <strong>Python 3.10.x, this will change so consult from the</strong> <a href="http://www.vapoursynth.com/doc/installation.html" target="_blank" rel="noopener noreferrer">Vapoursynth website</a> <strong>if you're reading this from the future</strong> from <a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener noreferrer">here</a> and select "Windows Installer 64-bit". Upon installation check the tick for adding Python to PATH like so
<img loading="lazy" alt="Python PATH" src="/assets/images/python-path-a89fc4fe6c6eb4c2ea0a7610dd2cf09a.webp" width="672" height="417" class="img_ev3q">)</p></li><li><p>Download and install Vapoursynth from <a href="https://github.com/vapoursynth/vapoursynth/releases" target="_blank" rel="noopener noreferrer">here</a> and select "VapourSynth64-RXX.exe"</p></li><li><p>Open the terminal and type <code>vsrepo.py install lsmas ffms2</code> to install some plugins for Av1an to work.</p></li><li><p>Download MKVToolNix from <a href="https://mkvtoolnix.download/downloads.html#windows" target="_blank" rel="noopener noreferrer">here</a>, select "mkvtoolnix-64bit-XX.X.X-setup.exe", and install <strong>(Also available on winget!)</strong></p></li><li><p>Download Av1an from <a href="https://github.com/master-of-zen/Av1an/releases" target="_blank" rel="noopener noreferrer">here</a> (SELECT LATEST AND CLICK THE "ASSETS" DROPDOWN)</p></li><li><p>Download <strong>shared libraries</strong> FFmpeg from <a href="https://www.gyan.dev/ffmpeg/builds" target="_blank" rel="noopener noreferrer">gyan.dev</a></p></li><li><p>Download a pre-built fork of Aomenc (<a href="https://github.com/Clybius/aom-av1-lavish/tree/Endless_Merging" target="_blank" rel="noopener noreferrer">aom-av1-lavish</a>) which has neat stuff such as sane defaults, new tunes, optimizations, etc. This can be downloaded for Windows <a href="https://autumn.revolt.chat/attachments/download/-2EiZW1edcT9anApFZ1PJBEber-pJ6z02NiQBjbr28" target="_blank" rel="noopener noreferrer">here</a> <em>(Current as of Sept 6, 2023)</em></p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>If you opt to compile aomenc yourself, you can view the instructions on how to do that <a href="/docs/encoders/aomenc#installation">here</a>.</p></div></div></li><li><p>Move Av1an, FFmpeg <strong>(Including the FFmpeg DLLs)</strong>, and aomenc to somewhere preferable, eg <code>C:\Encoding</code>.</p></li><li><p>Add the folder <strong>AND MKVTOOLNIX INSTALLATION FOLDER</strong> to the <a href="https://www.maketecheasier.com/what-is-the-windows-path/" target="_blank" rel="noopener noreferrer">Windows PATH environment</a>.</p></li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="macos">macOS<a href="#macos" class="hash-link" aria-label="Direct link to macOS" title="Direct link to macOS">​</a></h3><p><em>written by gb82 (Gianni Rosato)</em></p><p>macOS is very similar to Linux, although there aren't any GUI tools for AV1 encoding that I can comfortably recommend.</p><p><strong>Homebrew + Macports for Av1an + rav1e:</strong>
<em>Note that some commands may have to be run with <code>sudo</code>, which I won't explicitly include for security reasons.</em></p><p>Installing the Homebrew package manager is a well documented process at this point:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">/bin/bash -c </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable function" style="color:rgb(80, 250, 123);font-style:italic">curl</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As is installing MacPorts. Install the relevent <code>.pkg</code> for your macOS version from the MacPorts Project website:
<a href="https://www.macports.org/install.php" target="_blank" rel="noopener noreferrer">www.macports.org/install.php</a></p><p>Now, you can run the following commands:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">brew update </span><span class="token operator">&amp;&amp;</span><span class="token plain"> brew upgrade</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">brew </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> rav1e aom mkvtoolnix ffmpeg</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Usually you must run MacPorts commands for package installations as root</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">port upgrade outdated</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">port </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> av1an</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is the easiest way to get everything set up &amp; working to produce AV1 video with <code>rav1e</code> or mainline <code>aomenc</code> &amp; Av1an. You can check that things are installed by running the following commands &amp; parsing their output:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">% av1an --version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">av1an </span><span class="token number">0.4</span><span class="token plain">.1-unstable </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">rev e10880d</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Release</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">* Compiler</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  rustc </span><span class="token number">1.70</span><span class="token plain">.0 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">LLVM </span><span class="token number">16.0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">* Target Triple</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  aarch64-apple-darwin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">* Date Info</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  Commit Date:  </span><span class="token number">2023</span><span class="token plain">-06-25</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">* VapourSynth Plugins</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  systems.innocent.lsmas </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> Not found</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  com.vapoursynth.ffms2  </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> Not found</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">% rav1e --version </span><span class="token operator">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">grep</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"release"</span><span class="token plain"> -C </span><span class="token number">1</span><span class="token plain">      </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">rav1e </span><span class="token number">0.6</span><span class="token plain">.6 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">release</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">rustc </span><span class="token number">1.69</span><span class="token plain">.0 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">84c898d65 </span><span class="token number">2023</span><span class="token plain">-04-16</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">built from a </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">source</span><span class="token plain"> tarball</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> aarch64-apple-darwin</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">% aomenc --help </span><span class="token operator">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">grep</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"AOMedia"</span><span class="token plain"> -C </span><span class="token number">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Included encoders:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    av1    - AOMedia Project AV1 Encoder </span><span class="token number">3.6</span><span class="token plain">.1 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">default</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        Use --codec to switch to a non-default encoder.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Notice <code>systems.innocent.lsmas : Not found</code> in the Av1an output. This means you won't be able to use the lsmash chunking method through vapoursynth &amp; may instead have to rely on hybrid chunking, through <code>-m hybrid</code>. This is slower &amp; takes up disk space while encoding, but still works. A sample Av1an command with this basic installation may look like this:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">av1an -i </span><span class="token string" style="color:rgb(255, 121, 198)">"input"</span><span class="token plain"> -y --resume --verbose --split-method av-scenechange -m hybrid -c mkvmerge -e rav1e --force -v </span><span class="token string" style="color:rgb(255, 121, 198)">" --tiles 8 -s 4 --quantizer 80 --no-scene-detection"</span><span class="token plain"> --photon-noise </span><span class="token number">7</span><span class="token plain"> --chroma-noise --pix-format yuv420p10le -w </span><span class="token number">8</span><span class="token plain"> -o </span><span class="token string" style="color:rgb(255, 121, 198)">"output.mkv"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Building From Source</strong></p><p>If you want lsmash support, aom-av1-lavish instead of mainline, or anything else that isn't covered by the more basic installation, you'll have to compile from source. Things are very similar to Linux, with a few oddities:</p><ul><li>macOS sometimes doesn't have a <code>/usr/local/bin</code> by default. You can fix this by doing <code>mkdir /usr/local/bin</code>.</li><li>Homebrew installs <em>everything</em> in its own directory structure. If you're building things from source that rely on libraries from vapoursynth, zimg, lsmash, etc, make sure to copy them from <code>/opt/homebrew/lib</code> to <code>/usr/local/lib</code>. Finding them is a matter of <code>ls | grep "keyword"</code> &amp; copying what looks reasonable to be associated with the tool you're using.</li><li>Building most things from source will have instructions for <!-- -->*<!-- -->nix which work for both macOS &amp; Linux. Even if it says Linux, there's a good chance it'll work on macOS as well, &amp; it is always worth trying Linux build instructions on Mac. I won't be going through building every encoding tool &amp; dependency from source, as it is generally much more intuitive than Windows, but building Av1an is worth detailing here just as an example.</li></ul><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">brew </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> rust nasm</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/master-of-zen/Av1an</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> Av1an</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RUSTFLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-C target-cpu=native"</span><span class="token plain"> cargo build --release</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain"> </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> target/release</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cp</span><span class="token plain"> av1an /usr/local/bin</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>More Difficult: Building aom-av1-lavish from Source</strong></p><p>If you want to make the most out of your hardware &amp; eke out every last drop of quality, it may be worth building aom-av1-lavish from source. The first step is to clone it from the Endless Merging branch:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/Clybius/aom-av1-lavish -b Endless_Merging</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> aom-av1-lavish</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now, you need to make some manual changes to the source code until Clybius merges <a href="https://github.com/Clybius/aom-av1-lavish/pull/1/files" target="_blank" rel="noopener noreferrer">this commit</a>.</p><ul><li>Add the line <code>#include "aq_variance.h"</code> at line 19 in <code>av1/encoder/encodeframe_utils.c</code></li><li>Comment out line 2546 in <code>av1/encoder/speed_features.c</code>. This line is <code>const int qindex_thresh_cdef_sf_s1_s3_l2[2] = { 92, 48 };</code> &amp; becomes <code>// const int qindex_thresh_cdef_sf_s1_s3_l2[2] = { 92, 48 };</code>.</li></ul><p>Now you can continue to build according to the Linux instructions below. Obviously you'll need cmake, which you can install with homebrew along with any other tools you may need. While still in the <code>aom-av1-lavish</code> directory:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">mkdir</span><span class="token plain"> -p aom_build </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> aom_build</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cmake </span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain"> -DBUILD_SHARED_LIBS</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DENABLE_DOCS</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DCONFIG_TUNE_BUTTERAUGLI</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DCONFIG_TUNE_VMAF</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DCONFIG_AV1_DECODER</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DENABLE_TESTS</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DCMAKE_BUILD_TYPE</span><span class="token operator">=</span><span class="token plain">Release -DCMAKE_CXX_FLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-flto -O3 -march=native"</span><span class="token plain"> -DCMAKE_C_FLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-flto -O3 -march=native -pipe -fno-plt"</span><span class="token plain"> -DCMAKE_LD_FLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-flto -O3 -march=native"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> -j</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">nproc</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This may need to be run as root:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now you can run <code>aomenc --help | grep "AOMedia" -C 3</code> to see if lavish installed. If you're getting the same output as above, you may need to copy the <code>aomenc</code> executable to <code>/opt/local/bin</code>, <code>/usr/local/bin</code>, &amp; <code>/opt/homebrew/bin</code> if you already installed mainline aomenc. Running the version info command again, the correct output should look something like this:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">% aomenc --help </span><span class="token operator">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">grep</span><span class="token plain"> AOMedia -C </span><span class="token number">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Included encoders:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    av1    - AOMedia Project AV1 Encoder Psy v3.6.0 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">default</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        Use --codec to switch to a non-default encoder.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Notice how it says <code>AOMedia Project AV1 Encoder Psy</code> instead of <code>AOMedia Project AV1 Encoder</code>. You should be all set after this to start using aom-av1-lavish &amp; following the current parameter meta as outlined below.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="linux">Linux<a href="#linux" class="hash-link" aria-label="Direct link to Linux" title="Direct link to Linux">​</a></h3><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>Yet again, try using Arch. It's way easier.</p></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="the-easy-way">The Easy Way<a href="#the-easy-way" class="hash-link" aria-label="Direct link to The Easy Way" title="Direct link to The Easy Way">​</a></h4><p>Install <a href="https://github.com/gianni-rosato/aviator" target="_blank" rel="noopener noreferrer">Aviator</a>, it is currently only available as a <a href="https://beta.flathub.org/apps/net.natesales.Aviator" target="_blank" rel="noopener noreferrer">Flatpak</a> or <a href="https://giannirosato.com/blog/post/aviator-1/" target="_blank" rel="noopener noreferrer">rAV1ator</a>, basically same thing but av1an + rav1e. Keep in mind Aviator ships with <strong>SVT-AV1</strong> and rAV1ator with <strong>rav1e</strong> instead of aomenc/AOM-AV1, which I will not be covering here.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="the-compiling-route">The Compiling Route<a href="#the-compiling-route" class="hash-link" aria-label="Direct link to The Compiling Route" title="Direct link to The Compiling Route">​</a></h4><h5 class="anchor anchorWithStickyNavbar_LWe7" id="ubuntu">Ubuntu<a href="#ubuntu" class="hash-link" aria-label="Direct link to Ubuntu" title="Direct link to Ubuntu">​</a></h5><p>The guide below is targeted towards 22.04, packages and other things may be different on other versions. First Install Rust via <code>rustup</code> first, as apt version of Rust is severely outdated, then you can continue.</p><p>Install dependencies:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">wget</span><span class="token plain"> python </span><span class="token function" style="color:rgb(80, 250, 123)">unzip</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">unrar</span><span class="token plain"> build-essential meson autoconf automake libtool </span><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> nasm yasm python3-dev python3-pip cython3 libass-dev libqt5websockets5-dev libfftw3-dev libtesseract-dev ffmpeg libavcodec-dev libavformat-dev libswscale-dev libavutil-dev libswresample-dev libmediainfo-dev mkvtoolnix mediainfo perl nasm yasm </span><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> cmake libavutil-dev libavcodec-dev libavformat-dev libavdevice-dev libavfilter-dev libswscale-dev libswresample-dev libpostproc-dev llvm libclang-dev libssl-dev</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Install l-smash:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/l-smash/l-smash.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> l-smash</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./configure --enable-shared --extra-cflags</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-march=native"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> -j</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">nproc</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Install zimg:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone --recursive https://github.com/sekrit-twc/zimg.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> zimg</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./autogen.sh</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./configure</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> -j</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">nproc</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Install ImageMagick:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/ImageMagick/ImageMagick</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> ImageMagick</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./configure</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> -j</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">nproc</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Install Vapoursynth R63:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">wget</span><span class="token plain"> https://github.com/vapoursynth/vapoursynth/archive/refs/tags/R63.zip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">unzip</span><span class="token plain"> R63.zip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> vapoursynth-R63</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./autogen.sh</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./configure </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CFLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-march=native"</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CXXFLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-march=native"</span><span class="token plain"> --libdir</span><span class="token operator">=</span><span class="token plain">/usr/lib</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> -j</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">nproc</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">mkdir</span><span class="token plain"> /usr/lib/vapoursynth</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> ldconfig</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The plugin directory will be located in <code>/usr/lib/vapoursynth</code>.</p><p>Install L-SMASH-Works Vapoursynth Plugin:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/AkarinVS/L-SMASH-Works -b ffmpeg-4.5</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> L-SMASH-Works/VapourSynth </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">mkdir</span><span class="token plain"> build </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> build</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">meson </span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain"> --optimization</span><span class="token operator">=</span><span class="token number">3</span><span class="token plain"> --default-library</span><span class="token operator">=</span><span class="token plain">static -Db_lto</span><span class="token operator">=</span><span class="token plain">true -Dc_args</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-march=native"</span><span class="token plain"> -Dcpp_args</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-march=native"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">ninja -j</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">nproc</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">cp</span><span class="token plain"> libvslsmashsource.so /usr/lib/vapoursynth/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>L-SMASH-Works doesn't work on <strong>aarch64</strong>, it is recommended to use other plugins instead.</p></div></div><p>Install FFMS2 Vapoursynth Plugin:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/FFMS/ffms2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> ffms2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./autogen.sh</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./configure </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CFLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-O3 -march=native"</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CXXFLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-O3 -march=native"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> -j</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">nproc</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">cp</span><span class="token plain"> src/core/.libs/libffms2.so src/core/.libs/libffms2.so.5 src/core/.libs/libffms2.so.5.0.0 /usr/lib/vapoursynth</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Install Av1an:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/master-of-zen/Av1an</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> Av1an</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RUSTFLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-C target-cpu=native"</span><span class="token plain"> cargo build --release</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">cp</span><span class="token plain"> target/release/av1an /usr/local/bin</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>When there's no errors, proceed to compiling <code>aom-av1-lavish</code>.</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="arch">Arch<a href="#arch" class="hash-link" aria-label="Direct link to Arch" title="Direct link to Arch">​</a></h5><p>Install dependencies:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> pacman -S vapoursynth ffmpeg av1an mkvtoolnix-gui </span><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> perl cmake ninja meson nasm vapoursynth-plugin-lsmashsource ffms2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>you're done, proceed.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="compiling-aom-av1-lavish">Compiling aom-av1-lavish<a href="#compiling-aom-av1-lavish" class="hash-link" aria-label="Direct link to Compiling aom-av1-lavish" title="Direct link to Compiling aom-av1-lavish">​</a></h4><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/Clybius/aom-av1-lavish -b Endless_Merging</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> aom-av1-lavish </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">mkdir</span><span class="token plain"> -p aom_build </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> aom_build</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cmake </span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain"> -DBUILD_SHARED_LIBS</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DENABLE_DOCS</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DCONFIG_TUNE_BUTTERAUGLI</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DCONFIG_TUNE_VMAF</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DCONFIG_AV1_DECODER</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DENABLE_TESTS</span><span class="token operator">=</span><span class="token number">0</span><span class="token plain"> -DCMAKE_BUILD_TYPE</span><span class="token operator">=</span><span class="token plain">Release -DCMAKE_CXX_FLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-flto -O3 -march=native"</span><span class="token plain"> -DCMAKE_C_FLAGS</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"-flto -O3 -march=native -pipe -fno-plt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> -j</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">nproc</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="encoding">Encoding<a href="#encoding" class="hash-link" aria-label="Direct link to Encoding" title="Direct link to Encoding">​</a></h2><p>The moment you've all been waiting for, let's just get into it. Here's an example <em>recommended</em> parameter as of now (09/03/23) <!-- -->[MM/DD/YY]<!-- -->:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">av1an -x </span><span class="token number">300</span><span class="token plain"> -i input.mkv -w </span><span class="token number">4</span><span class="token plain"> -e aom -c mkvmerge --resume -m lsmash --photon-noise</span><span class="token operator">=</span><span class="token number">10</span><span class="token plain"> --set-thread-affinity</span><span class="token operator">=</span><span class="token number">2</span><span class="token plain"> --verbose -a </span><span class="token string" style="color:rgb(255, 121, 198)">" -an "</span><span class="token plain"> -f </span><span class="token string" style="color:rgb(255, 121, 198)">" -an "</span><span class="token plain"> -v </span><span class="token string" style="color:rgb(255, 121, 198)">" --bit-depth=10 --cpu-used=4 --end-usage=q --cq-level=24 --threads=2 --tile-columns=0 --tile-rows=0 --lag-in-frames=64 --tune-content=psy --tune=ssim --enable-keyframe-filtering=1 --disable-kf --kf-max-dist=9999 --enable-qm=1 --deltaq-mode=0 --aq-mode=0 --quant-b-adapt=1 --enable-fwd-kf=0 --arnr-strength=1 --sb-size=dynamic --enable-dnl-denoising=0 "</span><span class="token plain"> -o </span><span class="token string" style="color:rgb(255, 121, 198)">"output.mkv"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Parameter Meta</div><div class="admonitionContent_S0QG"><p>It is strongly recommended to join the <a href="https://discord.gg/vpREHAvYvh" target="_blank" rel="noopener noreferrer">AV1 Discord server</a> to get the latest updates on what to use and which to set, as it's the only easily reachable place for everything AV1 &amp; encoding tips in general.</p></div></div><p>Now let's dissect it one-by-one</p><p><strong>Av1an parameters:</strong></p><ul><li><p><code>-i</code> Input.</p></li><li><p><code>-x 300</code> Sets scene split length to 300 frames, you can increase it for more quality at the tradeoff of video seekability.</p></li><li><p><code>-w 4</code> Specifies the amount of "workers" or amount of encoders working on the video.</p></li><li><p><code>--verbose</code> Sets logging to verbose.</p></li><li><p><code>--resume</code> Resumes the encode even when you haven't encoded yet. I strongly recommend leaving this if you resume a lot since you can accidentally delete your whole progress (There's no delete confirmation feature.. yet) if you "resumed" without the parameter in place.</p></li><li><p><code>-e aom</code> Specifies we're using aomenc encoder which should be the default option.</p></li><li><p><code>-c mkvmerge</code> Specifies we're using mkvmerge (MKVToolNix) to concatenate the parts when done, you can specify with ffmpeg if you want to but this is the best method.</p></li><li><p><code>-m lsmash</code> Specifies we're using l-smash (Vapoursynth plugin) to split the videos, this is also the best method because ffms2 causes video lag (Tested a year ago, might change now) and other methods just suck (Slow and not worth it, learned the hard way). You can attempt to use ffms2 when inputting VC-1 videos as it is not possible with l-smash (Or convert it to lossless with x264 qp 0).</p></li><li><p><code>-f " -an "</code> <code>-f</code> Stands for ffmpeg parameters, <code>-an</code> is to remove all audio since its better to encode and merge it separately. To crop use <code>-f " -an -vf crop=1920:800 "</code> for example to crop the video to 1920x800.</p></li><li><p><code>-v " "</code> Is where you put the encoder's parameters in.</p></li><li><p><code>-a " -an "</code> FFmpeg audio encoding options, we're removing it cause we can always add it later. But if you want to, you can also encode directly. Here's an example for encoding to Opus using libopus assuming stereo: <code>-a " -c:a libopus -b:a 128k "</code>.</p></li><li><p><code>--photon-noise=10</code> AV1 grain synthesis, which is a technique where the encoder puts fake grain in so it looks more natural and potentially hiding video artifacts (cause grain is hard to encode and explodes bitrate usage because of their randomness), 5-8 for almost none to little grain, 10-14 for medium, 15+ heavy, 20+ extremely heavy, 30+ for extremely grainy 90s live action films.</p></li><li><p><code>--set-thread-affinity=2</code> Pins the thread to the encoder, aligns with <code>--threads=2</code> in the encoder parameter so set them accordingly.</p></li></ul><p><strong>aomenc parameters:</strong></p><ul><li><p><code>--bit-depth=10</code> We're using 10bit because it makes the video smaller and reduces <a href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs#contouring" target="_blank" rel="noopener noreferrer">banding</a>.</p></li><li><p><code>--cpu-used=4</code> This is the preset which ranges from 0-9, you can go to 3 if you want more efficiency, 2 if you have a lot of time, 4 is the sweet spot, and 6 if you want speed. Don't go above 6 (Worst efficiency) or even 0 (It would take WEEKS to finish).</p></li><li><p><code>--end-usage=q --cq-level=24</code> This specifies that we are going to use a knockoff version of CRF level similar to x264/x265 encoders, in this case CRF 24.</p></li><li><p><code>--threads=2</code> Sets the amount of threads the encoder can use, aligns with <code>--set-thread-affinity</code> in Av1an.</p></li><li><p><code>--tile-columns=0 --tile-rows=0</code> This is the tiles options, where the encoder splits the videos into tiles to encode faster, see the image below (Yellow lines):</p><picture><source srcset="https://raw.githubusercontent.com/av1-community-contributors/images/main/tiling_av1.avif?token=GHSAT0AAAAAACEZPDXIZARY5MGSTJW4SI22ZHY636A" type="image/avif"><img loading="lazy" src="https://autumn.revolt.chat/attachments/HwhZjoDsdzLZsJM2mjzX7lEDmJn1xcYNdrQqmOxPYW/tiling_av1.jpeg" alt="Tiling" width="1280" height="768" class="img_ev3q"></picture></li></ul><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Tile usage</div><div class="admonitionContent_S0QG"><p>Do NOT use tiles for 1080p and below, use 1 <code>tile-columns</code> at 1440p (2K), 2 <code>tile-columns</code> and 1 <code>tile-rows</code> for 2160p (4K)</p></div></div><ul><li><p><code>--lag-in-frames=64</code> Knockoff of x264/x265 <a href="https://en.wikipedia.org/wiki/Group_of_pictures" target="_blank" rel="noopener noreferrer">Group of Pictures</a> (GOP), makes the encoder look into future frames for better compression decision making, do not go over 64 as it is pretty much useless.</p></li><li><p><code>--aq-mode</code> adaptive quantization mode, 0 is better most of the time</p></li><li><p><code>--tune-content=psy --tune=ssim</code> As the name suggests they are tunes that affect the video output, for the better, and for the worst</p></li></ul><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Tunes to use</div><div class="admonitionContent_S0QG"><p>Set <code>tune-content</code> to <code>animation</code> if you're encoding above <code>cq-level=30</code> A.K.A lower quality, despite it's name
Set <code>tune-content</code> to <code>psy</code> for everything else, <strong>do not use if you encode above <code>cq-level=30</code></strong>
For <code>tune</code>, this is a bit tricky. For now, the meta seems to be <code>ssim</code>, but back then it was <code>lavish</code> which is considered THE best tune because it's based on <a href="https://github.com/google/butteraugli" target="_blank" rel="noopener noreferrer">butteraugli</a>. Now it's fallen behind because its more blurry than <code>ssim</code>, and before that it was <code>butteraugli</code>, and then <code>ipq_vmaf_psy</code>, and finally just <code>ipq</code>.
If you use any of the VMAF tunes, <strong>you need to specify <code>--vmaf-model-path=</code> to where you put it</strong>.</p></div></div><ul><li><p><code>--enable-keyframe-filtering=1</code> We're setting it to 1 because of compatibility reasons, 2 is more efficient but there are seeking issues and FFmpeg for some reason can't input it.</p></li><li><p><code>--sb-size=dynamic</code> Allows the encoder to use 128x128 block partitioning besides 64x64 which gives an efficiency boost, ignore it.</p></li><li><p><code>--deltaq-mode</code> set to 0 because its just better.</p></li><li><p><code>--arnr-strength=1</code> Controls how strong the filtering will be, 1 is good for 3D Pixar CGI-like and 2D animation, use 4 if you're doing live action content. Using maximum at higher bitrates would just result in a blurry mess.</p></li><li><p><code>--disable-kf --enable-fwd-kf=0</code> We're disabling keyframes cause <strong>Av1an already did scene detection, so we wont have to.</strong>. And it speeds things up.</p></li><li><p><code>--kf-max-dist=9999</code> Maximum keyframe interval, we're setting it at the highest possible value since av1an's scene detection keyframe interval is already 240 by default</p></li><li><p><code>--enable-chroma-deltaq=1 --enable-qm=1 --quant-b-adapt=1</code> Parameters that give you free efficiency boost.</p></li><li><p><code>--enable-dnl-denoising=0</code> Disables the encoder's built-in denoising technique when grain synthesis is enabled, you can optionally set it to 1 when you have a pretty noisy video since it works quite well.</p></li></ul><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Concatenation Error on Linux</div><div class="admonitionContent_S0QG"><p>Run <code>ulimit -n 200000</code>, resume, and it should concatenate just fine. If it still errors, head to the encode directory &gt; encode, and run <code>mkvmerge @../options.json</code></p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="merging-everything">Merging Everything<a href="#merging-everything" class="hash-link" aria-label="Direct link to Merging Everything" title="Direct link to Merging Everything">​</a></h2><p>Once you're done just encode your audio using ffmpeg (or just passthrough it), subtitles should be carried along with your video output, and merge them in MKVToolNix! Don't want Matroska files? That's fine, you can use FFmpeg or MP4Box to output into <code>mp4</code>, just keep in mind that PGS/SUP/VOBSUB subtitles are not supported and Opus audio support is still experimental.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="tips--tricks">Tips &amp; Tricks<a href="#tips--tricks" class="hash-link" aria-label="Direct link to Tips &amp; Tricks" title="Direct link to Tips &amp; Tricks">​</a></h2><ul><li><p><code>--denoise-noise-level=10</code> Alternative to <code>photon-noise</code>, slower than photon-noise and is the OG grain synthesis method, performs okay and just serves as an alternative. Don't attempt to use it at high values (&gt;12) since it creates noticeable grain patterns.</p></li><li><p><code>--arnr-maxframes</code> to set max reference frames that will be used to filter the encode, higher values would make the video blurrier at high fidelity but look better at lower bitrates.</p></li><li><p><code>--butteraugli-resize-factor=2</code> if you use any of the butteraugli-based tunes (lavish, butteraugli) to speed it up without much losses and <code>--butteraugli-intensity-target=250</code> to match the content light level.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="final-thoughts">Final Thoughts<a href="#final-thoughts" class="hash-link" aria-label="Direct link to Final Thoughts" title="Direct link to Final Thoughts">​</a></h2><p>Encoding has always been about experimentation for the best, there is really no "One size fits all" for encoding content, as they differ from scene complexity, how it's captured (2D/Real life), film grain, dark scenes, etc. So experiment away for your specific type of content!</p><blockquote><p><strong>Guide originally hosted on <a href="https://rentry.co/AV1" target="_blank" rel="noopener noreferrer">https://rentry.co/AV1</a>, rewrite and migration by Simulping.</strong></p></blockquote>]]></content>
        <author>
            <name>Simulping</name>
            <uri>https://github.com/Simulping</uri>
        </author>
        <author>
            <name>Gianni Rosato</name>
            <uri>https://github.com/gianni-rosato</uri>
        </author>
        <category label="video" term="video"/>
        <category label="compression" term="compression"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Site Optimization by Reducing Image Load on the Web]]></title>
        <id>https://wiki.x266.mov/blog/site-optimization</id>
        <link href="https://wiki.x266.mov/blog/site-optimization"/>
        <updated>2023-07-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Site Optimization by Reducing Image Load on the Web]]></summary>
        <content type="html"><![CDATA[<p>A big part of understanding any multimedia codec technology is knowing the application for such technology.</p><p>For images, a big use case is web delivery. Compared to other multimedia, images are incredibly popular on the Web &amp; knowing how to serve them properly can be a massive boon to your website's traffic as well as less of a headache for users on slower connections or who are under bandwidth constraints. The most disappointing part is that images are often poorly done on the web; all too frequently will you run into a site serving massive photographic PNGs for no reason, or photography sites serving photographs fresh out of the editing software with no thought put into their final delivery. A little effort, patience, &amp; knowledge will go a long way toward improving the user experience for individuals using your site, &amp; this article will illustrate some of the basics.</p><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>These instructions are for <em>photographic</em> images; other kinds of images, like non-photographic, artwork, pixel art, etc. should likely be handled differently.</p></div></div><div class="theme-admonition theme-admonition-warning alert alert--danger admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>danger</div><div class="admonitionContent_S0QG"><p>Many images won't load properly unless your browser supports JXL, AVIF, &amp; proper ICCv2 color management. This is for demonstration purposes only &amp; shouldn't represent an actual common website experience. If you're curious anyway, the following browsers can display the contents of this page perfectly:</p><ul><li><a href="https://thorium.rocks/" target="_blank" rel="noopener noreferrer">Thorium</a> | <em>Linux, <a href="https://github.com/Alex313031/Thorium-Special/releases" target="_blank" rel="noopener noreferrer">macOS</a>, <a href="https://github.com/Alex313031/thorium/releases/" target="_blank" rel="noopener noreferrer">Windows</a>, <a href="https://github.com/Alex313031/Thorium-Special/releases" target="_blank" rel="noopener noreferrer">Android</a></em></li><li><a href="https://www.waterfox.net/" target="_blank" rel="noopener noreferrer">Waterfox</a> | <em><a href="https://flathub.org/apps/net.waterfox.waterfox" target="_blank" rel="noopener noreferrer">Linux</a>, <a href="https://www.waterfox.net/download/" target="_blank" rel="noopener noreferrer">macOS</a>, <a href="https://www.waterfox.net/download/" target="_blank" rel="noopener noreferrer">Windows</a></em></li><li><a href="https://thorium.rocks/mercury" target="_blank" rel="noopener noreferrer">Mercury</a> | <em><a href="https://github.com/Alex313031/Mercury/releases" target="_blank" rel="noopener noreferrer">Linux</a>, <a href="https://github.com/Alex313031/Mercury/releases" target="_blank" rel="noopener noreferrer">Windows</a></em></li></ul></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="fire--forget">Fire &amp; Forget<a href="#fire--forget" class="hash-link" aria-label="Direct link to Fire &amp; Forget" title="Direct link to Fire &amp; Forget">​</a></h2><p>First, we'll illustrate what <em>not</em> to do, which is fortunately not incredibly difficult to avoid. Taking an image straight out of your editing software at a massive size will often bloat the size &amp; resolution to something that isn't generally usable for a website regardless of the codec you're using &amp; its quality per bit. It can be argued there are specific use cases that demand incredible resolution &amp; fidelity coexist on the Web, but we won't be covering those here. Here's an example of a bloated image:</p><p><em>exported straight from Darktable at JPEG q90, with no scaling</em></p><p><img loading="lazy" alt="bloated_jpeg" src="/assets/images/_DSC8466-d51a7e87bed86d101412ba728ebc6be2.jpg" width="5470" height="3656" class="img_ev3q"></p><p><strong>2.2 MB</strong></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="massive-improvement">Massive Improvement<a href="#massive-improvement" class="hash-link" aria-label="Direct link to Massive Improvement" title="Direct link to Massive Improvement">​</a></h2><p>The easiest way to have a large improvement without doing much work is to simply resize the image before serving it. Even if you exported a lossy JPEG, resizing should remove a lot of artifacts. The way to perceive a worst-case for an image's size on a site is to inspect the image element's width &amp; height, which should give us an estimate of how large we should make our image. Any larger than this value is unreasonable since we're overfilling the element's size for no reason &amp; the image is being scaled down anyway.</p><p><img loading="lazy" alt="box-size-mac" src="/assets/images/box-size-mac-f49e702b0cb4a531f65283ad604d4b4c.avif" class="img_ev3q">
<em>Inspect Element in Firefox. The Mac used to take this screenshot has a relatively high display resolution of 2560x1664. Because Macs scale things differently, we're probably going to want to double the horizontal resolution here.</em></p><p>The width is the most important value here, so our new image is going to be exported with a width of 1699 pixels. This new image, encoded at JPEG q90 with <code>cjpegli</code>, looks like this:</p><p><img loading="lazy" alt="smaller_jpeg" src="/assets/images/_DSC8466-smaller-48eaf650a417558ea976bf40eee82f67.jpg" width="1699" height="1136" class="img_ev3q"></p><p>Obviously, there's lost fidelity compared to the original, but considering this is <em>so much smaller</em>, it is worth the trade-off for many. It is also worth noting we are using an improved jpeg encoder in the form of <code>cjpegli</code>, although that is secondary to the resize. If it doesn't look as good as you want it to, you can always scale the resolution up a bit, though currently, it looks plenty passable for its size.</p><p>2.2 MB -&gt; <strong>233 kB</strong></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lazy-loading">Lazy Loading<a href="#lazy-loading" class="hash-link" aria-label="Direct link to Lazy Loading" title="Direct link to Lazy Loading">​</a></h3><p>A bonus tip is to add the <code>loading="lazy"</code> attribute to your picture tag to allow the image to load only when scrolled to by a user. This doesn't save bandwidth, but it improves the user experience by loading images further down the page only when necessary. An example may look like this:</p><div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">picture</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">img</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">src</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">/images/jpeg_fallback.jpg</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">alt</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">alt text</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">width</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">XX</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">height</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">YY</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">loading</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">lazy</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">picture</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-codecs">New Codecs<a href="#new-codecs" class="hash-link" aria-label="Direct link to New Codecs" title="Direct link to New Codecs">​</a></h2><p>If you desire further improvement, it may be time to consider using a newer codec like <a href="/docs/images/AVIF">AVIF</a> or <a href="/docs/images/JXL">JPEG-XL</a>. These options will compress far more effectively than JPEG, with the only trade-off being browser support. We're not going to consider <a href="/docs/images/WebP">WebP</a> or <a href="/docs/images/HEIC">HEIC</a>, since WebP is not competitive enough with JPEG for photographic imagery (often being worse) &amp; HEIC has been superseded by AVIF - which sees greater support anyhow - &amp; is not royalty free, effectively preventing widespread Web adoption forever. Again, we're just considering <em>lossy</em> compression for <em>photographic</em> images; it is a different story with WebP elsewhere, as it performs well on non-photographic content &amp; is almost always better than PNG for 8-bit lossless compression. So, we are left with JXL &amp; AVIF for now.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fallbacks">Fallbacks<a href="#fallbacks" class="hash-link" aria-label="Direct link to Fallbacks" title="Direct link to Fallbacks">​</a></h3><p>AVIF sees widespread support, but JPEG-XL isn't quite there yet with Web support as Google continues to push AVIF (it is debatable if it ever will be outside the Apple ecosystem). Even with AVIF, adoption isn't remotely close to JPEG, so it is worth providing a fallback. This can look like the following example:</p><div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">picture</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">source</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">srcset</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">/img/jxl_image.jxl</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">image/jxl</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">source</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">srcset</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">/img/avif_image.avif</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">image/avif</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">source</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">srcset</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">/img/webp_fback.webp</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">image/webp</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">img</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">src</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">/images/jpeg_fallback.jpg</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">alt</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">alt text</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">width</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">XX</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">height</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">YY</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">loading</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">lazy</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">picture</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Here is a JXL falling back to an AVIF falling back to a WebP falling back to a JPEG. Pretty intense to have this many fallbacks unless you're really after the ultimate compression ratio, but it is certainly an option. AVIF &amp; JPEG alone will probably be enough for most.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="compression-efficacy">Compression Efficacy<a href="#compression-efficacy" class="hash-link" aria-label="Direct link to Compression Efficacy" title="Direct link to Compression Efficacy">​</a></h3><p>Let's look at how our image examples compare to the original with our new codec selection. We'll be aiming for high visual fidelity, so around the same quality as our initial JPEG encoded with <code>cjpegli</code> (which scores ~<code>83.01</code> with the <a href="/docs/metrics/SSIMULACRA2">SSIMULACRA2</a> visual fidelity metric).</p><p><img loading="lazy" alt="smaller_jxl" src="/assets/images/_DSC8466-smaller-492a0639fb771671738062a57b2015a2.jxl" class="img_ev3q"></p><p><strong>137.0 kB</strong> <em>JPEG-XL image, encoded with <code>cjxl lossless.png out.jxl -d 1.49 -e 9</code>. Score: ~<code>83.04</code></em> <em>3.06s user time</em></p><p><img loading="lazy" alt="smaller_avif" src="/assets/images/_DSC8466-smaller-452ed8f5a33da727be398450e7e580a3.avif" class="img_ev3q"></p><p><strong>124.8 kB</strong> <em>AVIF image, encoded with <code>avifenc -c aom -s 4 -j 8 -d 10 -y 444 --min 1 --max 63 -a end-usage=q -a cq-level=16 -a tune=ssim lossless.png out.avif</code>. Score: ~<code>83.03</code></em> <em>7.54s user time</em></p><p>JXL also supports lossless transcoding of JPEG images. This means every pixel is identical, the image just has a smaller filesize than the original JPEG; if you can use JXL, you can transcode existing JPEGs losslessly on your site &amp; save some bandwidth that way. The JPEG transcode below gives a higher SSIMULACRA2 score than the original for some reason, but I'll chalk that up to a decoding inconsistency between how the <code>ssimulacra2</code> program decodes JPEG &amp; JXL. Either way, the scores are fairly close.</p><p><img loading="lazy" alt="smaller_jxl_jpeg-recomp" src="/assets/images/_DSC8466-smaller-recomp-f3af6d54a8c1c62cda0c2d3ba048e1fc.jxl" class="img_ev3q"></p><p><strong>189.4 kB</strong> <em>JPEG-XL image from JPEG, encoded with <code>cjxl input.jpg input-recomp.jxl -d 0.0 -e 9 --brotli_effort=11</code>. Score: ~<code>84.92</code> (???)</em> <em>0.67s user time</em></p><p>The final trick we can use, while not a new codec at all, still increases quality per bit. Encoding an XYB JPEG with <code>cjpegli</code> encodes with the perceptual XYB colorspace using an ICC profile to modify the original JPEG colors, avoiding JPEG's normal YCbCr which isn't perceptually optimized for the human visual system. Using XYB, we can afford identical quality with less bitrate than normal JPEG. This has universal compatibility, but not every application understands how to handle the XYB color profile (although color-managed modern browsers should be fine).</p><p><img loading="lazy" alt="smaller_jpeg_xyb" src="/assets/images/_DSC8466-smaller-xyb-0372077e225cf7b460ec9238bb2a65f9.jpg" width="1699" height="1136" class="img_ev3q"></p><p><strong>208.3 kB</strong> <em>XYB JPEG, encoded with <code>cjpegli lossless.png out.jpg --xyb -d 1.155</code>. Score: ~<code>83.04</code></em> <em>0.10s user time</em></p><p>In this particular instance, AVIF seems to be the overall winner. This isn't always the case due to JXL's superiority at higher fidelity &amp; with more detailed images, but according to SSIMULACRA2, AVIF has the best quality per bit with this image. You can use your own eyes to further clarify your choice, though. It is worth mentioning that as these were encoded from a 16-bit source PNG, the JXL image is the only one that maintains the full original bit depth, &amp; AVIF isn't fast to encode.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="responsive-images">Responsive Images<a href="#responsive-images" class="hash-link" aria-label="Direct link to Responsive Images" title="Direct link to Responsive Images">​</a></h2><p>Displaying an image that is too large for a viewport is a waste of bandwidth, &amp; displaying an image that's too small for the viewport leaves fidelity to be desired. Luckily, we have the <a href="https://ausi.github.io/respimagelint/" target="_blank" rel="noopener noreferrer">Responsive Image Linter</a> that can help us figure out which image sizes we should be using.</p><p><img loading="lazy" alt="responsive_image_linter" src="/assets/images/responsive_image_linter-178eb56c12557c53a2b129dd75925fe9.avif" class="img_ev3q"></p><p>In our fire &amp; forget example, we see that we are serving an image that is far too large. We already know that, but now we can see that given various viewport sizes we could be serving images that have respective widths of 270px, 958px, 1350px, 1660px, &amp; 1916px to optimize for delivery to a variety of different devices. Here's how we'd write that in HTML:</p><div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">picture</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">source</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">image/jxl</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">srcset</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">/img_270.jxl 270w, /img_958.jxl 958w, /img_1350.jxl 1350w, /img_1660.jxl 1660w, /img_1916.jxl 1916w</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">sizes</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">source</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">image/avif</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">srcset</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">/img_270.avif 270w, /img_958.avif 958w, /img_1350.avif 1350w, /img_1660.avif 1660w, /img_1916.avif 1916w</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">sizes</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">img</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">width</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">1699</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">height</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">1136</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">alt</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">alt text</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">srcset</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">/img_270.jpg 270w, /img_958.jpg 958w, /img_1350.jpg 1350w, /img_1660.jpg 1660w, /img_1916.jpg 1916w</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">sizes</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">src</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">/fallback.jpg</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">picture</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It is worth noting that this example above &amp; the example below aren't perfect implementations of a responsive image given the conditions of this site, but the general concept still applies. Some things to note:</p><ul><li><code>srcset</code> = the images available to your browser to serve, &amp; their respective widths</li><li><code>sizes</code> = the conditions given to the browser explaining under what conditions should it serve which image</li><li><code>(min-width: XXXpx) YYYpx</code> = Given the viewport is at least XXX wide, serve an image of YYY horizontal resolution. The browser will pick an image from srcset that is CSS pixels <!-- -->*<!-- --> display scaling.</li><li><code>calc(100vw - 24px)</code> = Usually preceded by a (min-width) condition. Specifies a value the browser should calculate on its own to pick the closest option from the srcset. Let's say we have <code>(min-width: 997px) calc(75vw - 257px)</code>. This means given the viewport is at least 997px wide, calculate 0.75 <!-- -->*<!-- --> the current viewport resolution - 257 to find the closest image in the srcset to fit the number of pixel specified.</li></ul><picture>  <source type="image/jxl" srcset="https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_270.jxl 270w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_958.jxl 958w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1350.jxl 1350w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1660.jxl 1660w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1916.jxl 1916w" sizes="(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)">  <source type="image/avif" srcset="https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_270.avif 270w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_958.avif 958w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1350.avif 1350w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1660.avif 1660w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1916.avif 1916w" sizes="(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)">  <img loading="lazy" width="1699" height="1136" alt="alt text" srcset="https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_270.jpg 270w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_958.jpg 958w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1350.jpg 1350w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1660.jpg 1660w, https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/img_size/img_1916.jpg 1916w" sizes="(min-width: 2000px) 1916px, (min-width: 1700px) 1660px, (min-width: 1400px) 1350px, (min-width: 1000px) 958px, calc(100vw - 24px)" src="https://raw.githubusercontent.com/av1-community-contributors/codec-wiki/deployment/img/_DSC8466-smaller.jpg" class="img_ev3q"></picture><p>That's all! Massive thanks to Auto-Rez Media Technologies for the inspiration behind this article &amp; explicit permission to use their <a href="https://autocompressor.net/blog/reduce-image-load" target="_blank" rel="noopener noreferrer">Reduce Your Page's Image Load</a> blog post when writing this entry. I have <a href="https://autumn.revolt.chat/attachments/GtFGuwNfeRdcwUN0MWzhDCAiiadWOk88XXC3pQv6RI" target="_blank" rel="noopener noreferrer">confirmed</a> with their leadership that this wiki entry can be safely licensed under CC BY-SA 4.0.</p>]]></content>
        <author>
            <name>RootAtKali</name>
        </author>
        <author>
            <name>Gianni Rosato</name>
            <uri>https://github.com/gianni-rosato</uri>
        </author>
        <category label="image" term="image"/>
        <category label="web" term="web"/>
        <category label="compression" term="compression"/>
    </entry>
</feed>